<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>conquerorLei</title>
  
  <subtitle>further study make me better</subtitle>
  <link href="https://conquerorlei.github.io/atom.xml" rel="self"/>
  
  <link href="https://conquerorlei.github.io/"/>
  <updated>2021-09-05T05:16:58.613Z</updated>
  <id>https://conquerorlei.github.io/</id>
  
  <author>
    <name>conquerorLei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数组中第k个最大元素</title>
    <link href="https://conquerorlei.github.io/posts/32261d40/"/>
    <id>https://conquerorlei.github.io/posts/32261d40/</id>
    <published>2021-09-05T04:34:43.000Z</published>
    <updated>2021-09-05T05:16:58.613Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png" alt="结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目初始分析"><a class="header-anchor" href="#题目初始分析">¶</a>题目初始分析</h4><p>寻找第k个最大元素，我第一时间想到的就是对数组进行排序，递增则为nums[nums.length-k]，递减则为nums[k-1]。</p><p>这样的话，其实根本不需要对数组进行全排序，按照冒泡排序的基本思想，每次冒牌排序(假设我按照增序排列)，都可以选出来最大的数排在数组的最后一个位置。而且下一次冒泡排序就不用遍历整个数组，因为没有必要对最大的数和前面的数，因为这种比较是无效的，相当于我们的比较范围是在伴随着冒泡排序的进行不断缩小的。</p><div class="note primary"><p>需要注意的是，题目当中并没有要求你排除重复项，例如[4,5,5,6]，k=4，那么第k大的数就是4</p><p>如果需要排除重复项，那么上述的算法就需要更改了</p></div><h4 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;nums.length-<span class="number">1</span>-i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[j]&gt;nums[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    nums[j] +=nums[j+<span class="number">1</span>];</span><br><span class="line">                    nums[j+<span class="number">1</span>] = nums[j]-nums[j+<span class="number">1</span>];</span><br><span class="line">                    nums[j] -= nums[j+<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[nums.length-k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="时空复杂度"><a class="header-anchor" href="#时空复杂度">¶</a>时空复杂度</h4><p>时间复杂度：考虑到最坏情况下的算法，时间复杂度应该为O(n(n+1)/2)=O(n<sup>2</sup>)</p><p>空间复杂度：O(1)，直接对数组进行的原地排序</p><h4 id="力扣结果"><a class="header-anchor" href="#力扣结果">¶</a>力扣结果</h4><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051253595.png" alt="力扣通过结果"></p><p>这样的话，按照我个人的分析，时间消耗会很大，空间消耗由于我没有引入太多的其他变量，直接使用加法处理的两数交换。执行时间太长了。我还在想一个时间消耗比较小的方法。</p><h4 id="第二种解法"><a class="header-anchor" href="#第二种解法">¶</a>第二种解法</h4><p>对于Java编程语言来说，其Array类中封装了sort方法，而且此sort方法采用了快速排序的方法，时间复杂度比冒泡排序小的多。</p><p>时间复杂度：O(nlogn)</p><p>空间复杂度：O(logn)</p><p>空间消耗主要是因为sort方法使用了栈，栈的最大高度是logn</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.length - k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png" alt="结果"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png&quot; alt=&quot;结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Java实现LRU缓冲机制</title>
    <link href="https://conquerorlei.github.io/posts/caebe662/"/>
    <id>https://conquerorlei.github.io/posts/caebe662/</id>
    <published>2021-09-05T02:49:02.000Z</published>
    <updated>2021-09-05T03:06:16.051Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051050092.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析"><a class="header-anchor" href="#题目分析">¶</a>题目分析</h4><p>既然是实现LRU缓冲，那么就需要明白LRU的工作原理，最近经常使用的往前排，那么最近不经常使用的往后排。这种特性下，使用数据结构链表就可以进行LRU的工作状态描述。很显然，LRU缓冲的实现需要不断地移动元素到链头和链尾，这样的话使用双链表就可以进行描述，设置一个伪头结点，设置一个伪尾结点。</p><p>另外需要注意到的是，给定一个键值Key，如何能够确定此链表中有没有此结点，如果有的话则返回。如果按照一般的做法，肯定就是遍历整个链表，这样的事，时间复杂度会被增大到O(n)，如何能将时间复杂度控制到O(1)呢？很简单，将键值和对应的双链表结点存储在一张表中，这里我选择的是HashMap也就是哈希映射。这样在进行判断链表中是否存在键值为key的结点是，就可以直接查看表，时间复杂度为O(1)。</p><h4 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DLinkedList</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> key;</span><br><span class="line">        <span class="keyword">int</span> value;</span><br><span class="line">        DLinkedList pre;</span><br><span class="line">        DLinkedList next;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DLinkedList</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DLinkedList</span><span class="params">(<span class="keyword">int</span> _key,<span class="keyword">int</span> _value)</span></span>&#123;</span><br><span class="line">            key = _key;</span><br><span class="line">            value = _value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> DLinkedList head,tail;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer,DLinkedList&gt; cache = <span class="keyword">new</span> HashMap&lt;Integer,DLinkedList&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">        <span class="keyword">this</span>.size = <span class="number">0</span>;</span><br><span class="line">        head = <span class="keyword">new</span> DLinkedList();</span><br><span class="line">        tail = <span class="keyword">new</span> DLinkedList();</span><br><span class="line">        head.next = tail;</span><br><span class="line">        tail.pre = head;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        DLinkedList node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        moveToHead(node);</span><br><span class="line">        <span class="keyword">return</span> node.value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        DLinkedList node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            DLinkedList temp = <span class="keyword">new</span> DLinkedList(key,value);</span><br><span class="line">            cache.put(key,temp);</span><br><span class="line">            addToHead(temp);</span><br><span class="line">            size++;</span><br><span class="line">            <span class="keyword">if</span>(size &gt; capacity)&#123;</span><br><span class="line">                DLinkedList res = removeTail();</span><br><span class="line">                cache.remove(res.key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            node.value = value;</span><br><span class="line">            moveToHead(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToHead</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        node.pre = head;</span><br><span class="line">        node.next = head.next;</span><br><span class="line">        head.next.pre = node;</span><br><span class="line">        head.next = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeNode</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        node.pre.next = node.next;</span><br><span class="line">        node.next.pre = node.pre;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveToHead</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        removeNode(node);</span><br><span class="line">        addToHead(node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DLinkedList <span class="title">removeTail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DLinkedList s = tail.pre;</span><br><span class="line">        removeNode(s);</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * LRUCache obj = new LRUCache(capacity);</span></span><br><span class="line"><span class="comment"> * int param_1 = obj.get(key);</span></span><br><span class="line"><span class="comment"> * obj.put(key,value);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109051050092.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>无重复最长子串长度</title>
    <link href="https://conquerorlei.github.io/posts/f68e8708/"/>
    <id>https://conquerorlei.github.io/posts/f68e8708/</id>
    <published>2021-09-04T15:52:59.000Z</published>
    <updated>2021-09-04T16:26:19.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109042355161.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析"><a class="header-anchor" href="#题目分析">¶</a>题目分析</h4><p>下面以一串字符的判断来模拟过程，模拟字符串:<font color='cornflowerblue'>abcaabbcabc</font></p><div class="note primary"><p>红色表示最长字符串，每次左边往后加</p><ol><li><font color='red'>abc</font>aabbcabc</li><li>a<font color='red'>bca</font>abbcabc</li><li>ab<font color='red'>ca</font>abbcabc</li><li>abc<font color='red'>a</font>abbcabc</li><li>abca<font color='red'>ab</font>bcabc</li><li>abcaa<font color='red'>b</font>bcabc</li><li>abcaab<font color='red'>bc</font>abc</li><li>abcaabb<font color='red'>cab</font>c</li><li>abcaabbc<font color='red'>abc</font></li></ol></div><p>很显然，我们不难看出来，从左到右的遍历过程像是一个红色的窗口在向右滑动，滑窗的左边是递增的，右边整体上也是递增的，这样的话我们直接使用一个集合进行当前滑窗的所有元素，每次右部指针右移之后都会判断当前右指针所指向的元素在不在集合中，并将当前元素加入集合中，如此进行右移。直到右指针所指向元素在集合中，此时滑窗的长度就是以左指针开头的子串的最大无重复长度。</p><div class="note success"><p>需要注意的是，左指针右移，需要将上一个元素从集合中移除</p></div><p>而且，右指针不用每次都从左指针位置遍历，即使左指针一直在右移，但是很显然2、3、4步右指针没有移动。</p><p>除此之外，可能有小伙伴可能对第9步之后为何左指针不右移了，这是因为此时右指针已经指向最后一个元素，表明此时左指针到右指针之间的子串无重复元素，假设此时长度为n，左指针再右移就是n-1，因为我们已经对后面的子串有一个重复度的了解，解释左指针右移也得不到比n更大的无重复子串长度</p><h4 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Set&lt;Character&gt; sc = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> max =<span class="number">0</span>,ln = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;ln&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">                sc.remove(s.charAt(i-<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(ln&lt;len &amp;&amp; !sc.contains(s.charAt(ln)))&#123;</span><br><span class="line">                sc.add(s.charAt(ln));</span><br><span class="line">                ln++;</span><br><span class="line">            &#125;</span><br><span class="line">            max = max &gt; (ln-i)?max:(ln-i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109042355161.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>单链表的反转</title>
    <link href="https://conquerorlei.github.io/posts/733dbec/"/>
    <id>https://conquerorlei.github.io/posts/733dbec/</id>
    <published>2021-09-04T14:30:50.000Z</published>
    <updated>2021-09-04T16:23:15.024Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109042234446.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目解题思路"><a class="header-anchor" href="#题目解题思路">¶</a>题目解题思路</h4><p>链表的反转，其实很简单，每次在原链表按照遍历顺序取出一个结点，按照头插法，插入到另外一个链表就好了。</p><p>时间复杂度：O(n)，时间消耗是由遍历链表产生的</p><p>空间复杂度：O(1)。</p><h4 id="解题代码"><a class="header-anchor" href="#解题代码">¶</a>解题代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode l = <span class="keyword">new</span> ListNode();</span><br><span class="line">        l.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(head!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode s = <span class="keyword">new</span> ListNode(head.val);</span><br><span class="line">            s.next = l.next;</span><br><span class="line">            l.next = s;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l = l.next;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他思路"><a class="header-anchor" href="#其他思路">¶</a>其他思路</h4><h5 id="思路1"><a class="header-anchor" href="#思路1">¶</a>思路1</h5><p>双指针：其实不用想太多啊，不就是让你进行链表反转吗，直接把只指针反过来就好了。怎么反过来？就是使用双指针，一个指针<font color='red'>cur</font>指向当前结点，一个指针指<font color='red'>pre</font>向后继结点，每次把两个结点之间的指针反过来就好啦，就是需要另外一个指针指向<font color='red'>pre</font>的下一个结点，这样会使空间复杂度提高一点，但依旧是O(1)；</p><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode cur = <span class="keyword">null</span>,pre = head;</span><br><span class="line">        <span class="keyword">while</span>(pre!= <span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode temp = pre.next;</span><br><span class="line">            pre.next = cur;</span><br><span class="line">            cur = pre;</span><br><span class="line">            pre = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109042234446.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>模式串匹配算法-kmp</title>
    <link href="https://conquerorlei.github.io/posts/8a5a5cfb/"/>
    <id>https://conquerorlei.github.io/posts/8a5a5cfb/</id>
    <published>2021-09-01T15:20:08.000Z</published>
    <updated>2021-09-01T15:29:19.232Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.1f5c826340a17136f098ed9af5156aed?rik=3KU7EwW%2fM5bVvQ&amp;riu=http%3a%2f%2fwww.dxzy163.com%2fupload%2fimage%2f20200110%2f1578665177433932.jpg&amp;ehk=qMAcUEtiRUVeczE%2fZkssALB9BJgmunT3%2ftFJOAjbXS4%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="模式匹配"></p><span id="more"></span><p>首次上传直接代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.kmp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PatternMatch</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] getNext(String pms) &#123;</span><br><span class="line"><span class="keyword">int</span> len = pms.length();</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> next[] = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"><span class="comment">//当只有一个字符的时候</span></span><br><span class="line">next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; len ; i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; pms.charAt(i) != pms.charAt(j))&#123;</span><br><span class="line"><span class="comment">//不等则回溯</span></span><br><span class="line">j = next[j-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pms.charAt(i) == pms.charAt(j))&#123;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">next[i] = j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">kmp</span><span class="params">(String pts,String pms)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i ;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[] next = getNext(pms);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建用于接收结果的列表</span></span><br><span class="line">List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//这种方法也是可以实现的，但是j在回溯的时候太复杂</span></span><br><span class="line"><span class="comment">//while(i &lt; pts.length() &amp;&amp; j &lt; pms.length())&#123;</span></span><br><span class="line"><span class="comment">//if(pts.charAt(i) == pms.charAt(j))&#123;</span></span><br><span class="line"><span class="comment">//i++;</span></span><br><span class="line"><span class="comment">//j++;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//i++;</span></span><br><span class="line"><span class="comment">//if(j!=0)&#123;</span></span><br><span class="line"><span class="comment">//j = next[j-1]+1;&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;pts.length();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pms.length() == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span> &amp;&amp; pts.charAt(i)!=pms.charAt(j))&#123;</span><br><span class="line">j = next[j-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(pts.charAt(i)==pms.charAt(j))&#123;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j == pms.length()) &#123;</span><br><span class="line">list.add(i - j + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//单行中有多个子串的情况</span></span><br><span class="line">j = next[j-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.1f5c826340a17136f098ed9af5156aed?rik=3KU7EwW%2fM5bVvQ&amp;amp;riu=http%3a%2f%2fwww.dxzy163.com%2fupload%2fimage%2f20200110%2f1578665177433932.jpg&amp;amp;ehk=qMAcUEtiRUVeczE%2fZkssALB9BJgmunT3%2ftFJOAjbXS4%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;模式匹配&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>模式串匹配算法-暴力破解</title>
    <link href="https://conquerorlei.github.io/posts/58e2d768/"/>
    <id>https://conquerorlei.github.io/posts/58e2d768/</id>
    <published>2021-09-01T15:19:47.000Z</published>
    <updated>2021-09-01T15:29:19.236Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20190520191842645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NwcmltZXNwbHVz,size_16,color_FFFFFF,t_70" alt="暴力法模式匹配"></p><span id="more"></span><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190520191842645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NwcmltZXNwbHVz,size_16,color_FFFFFF,t_70&quot; alt=&quot;暴力法模式匹配&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>hexo进阶(1):优化文章链接为数字编号</title>
    <link href="https://conquerorlei.github.io/posts/59826/"/>
    <id>https://conquerorlei.github.io/posts/59826/</id>
    <published>2021-08-21T13:00:50.000Z</published>
    <updated>2021-08-21T14:47:10.811Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="优化篇"></p><span id="more"></span><h3 id="问题描述"><a class="header-anchor" href="#问题描述">¶</a>问题描述</h3><p>下图为我的一篇文章的网址<img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212118319.png" alt="检索网址太长"></p><p>如果进行分享的话，就会出现以下情况</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://conquerorlei.github.io/2021/08/20/%E5%85%B3%E4%BA%8Enew%E5%92%8Cdelete%E7%9A%84%E9%97%AE%E9%A2%98/</span><br></pre></td></tr></table></figure><p>这样的话，其实本质上是没有问题的，但是为什么别人的网站网址就是干干净净的，我的小破站文章网址就这么长呢。我不甘心，于是就开始找方法进行修改。</p><h3 id="问题分析"><a class="header-anchor" href="#问题分析">¶</a>问题分析</h3><p>其实出现这种网址的情况，本质上是hexo的config的问题。在hexo的根目录下的_config.yml文件中，我发现了一下的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br></pre></td></tr></table></figure><p>这样的话，你的文章名就是<font color='red'>年份月份日期加题目</font></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212134814.jpeg" alt="这是什么？？？"></p><p>尽管这还可以，不影响正常使用，但是我要网址这么长干嘛</p><p>而且！！！由于编码的问题，我分享的时候，别人看见了还会问问后面的<font color='red'>%E5%85%B3%E4%BA%8E</font>是什么，这我能说什么，我写的汉字嘛？</p><p>还有一个问题就是，一旦我修改了文章名称以及日期什么的，链接就无效了。</p><p>这我能乐意嘛？不能🙉，不换掉干什么？留着下饭？😅</p><h3 id="解决方案"><a class="header-anchor" href="#解决方案">¶</a>解决方案</h3><p>下载个插件吧！<code>abbrlink</code>，这是他的<a href="https://github.com/rozbo/hexo-abbrlink"><font color='cornflowerblue'>github仓库地址</font></a></p><h4 id="安装abbrlink插件"><a class="header-anchor" href="#安装abbrlink插件">¶</a>安装abbrlink插件</h4><p>使用cmd命令提示符进入hexo的根目录(<font color='red'>也就是平常执行hexo命令的地方</font>)，输入以下命令使用<code>npm</code>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212156402.png" alt="安装完之后的命令提示"></p><h4 id="启用abbrlink插件"><a class="header-anchor" href="#启用abbrlink插件">¶</a>启用abbrlink插件</h4><p>使用文本编辑器打开hexo根目录下的_config.yml，找到并修改以下内容</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://conquerorlei.github.io/</span></span><br><span class="line"><span class="comment"># permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="comment"># permalink_defaults:</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> <span class="comment"># support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>   <span class="comment"># support dec(default) and hex</span></span><br></pre></td></tr></table></figure><h4 id="参数说明"><a class="header-anchor" href="#参数说明">¶</a>参数说明</h4><p>abbrlink一共有两个参数:</p><ul><li>alg – Algorithm：对应随机算法参数，可选值为crc16和crc32</li><li>rep – Represent：对应生成的数字表示方法，可选值为hex和dec</li></ul><p>以下为实例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crc16 &amp; hex</span></span><br><span class="line"><span class="string">/posts/66c8/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc16 &amp; dec</span></span><br><span class="line"><span class="string">/posts/65535/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc32 &amp; hex</span></span><br><span class="line"><span class="string">/posts/8ddf18fb/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc32 &amp; dec</span></span><br><span class="line"><span class="string">/posts/1690090958/</span></span><br></pre></td></tr></table></figure><div class="note success"><p><font color='red'>crc16算法产生的随机数最大值为65536</font></p></div><h4 id="使用abbrlink"><a class="header-anchor" href="#使用abbrlink">¶</a>使用abbrlink</h4><p>直接执行清除和渲染就可以啦</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>这样在原本markdown文档头部的yml内部就会产生一个随机数，专属于这篇文章的随机数</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212246514.png" alt="abbrlink随机数"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;优化篇&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/tags/Hexo/"/>
    
    <category term="Next" scheme="https://conquerorlei.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>关于new和delete的问题</title>
    <link href="https://conquerorlei.github.io/posts/36390/"/>
    <id>https://conquerorlei.github.io/posts/36390/</id>
    <published>2021-08-20T09:39:44.000Z</published>
    <updated>2021-08-21T14:41:42.123Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.75e864a4e25ca1c9c85e4a0ab8f2b5d1?rik=mDvqPbGZ%2blrDhA&amp;riu=http%3a%2f%2fpediaa.com%2fwp-content%2fuploads%2f2018%2f10%2fDifference-Between-new-and-delete-Operator-Comparison-Summary.jpg&amp;ehk=TUN%2fIoWa9NY8G3HdETaw5j%2f08sAVFfDeQ6e4482cQJA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="new and delete"></p><span id="more"></span><h1>问题描述</h1><p>今天在进行链表的学习的时候，进行单链表的初始化的时候遇见了一下问题，问题长这样</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108201746565.png" alt="cannot convert"></p><div class="note success"><p><font color='red'>cannot convert ‘LNode* *’ to ‘LinkedList’ {aka ‘LNode *’} in assignment</font></p></div><p>发生问题的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">initList</span><span class="params">(LinkedList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l = <span class="keyword">new</span> LinkedList; <span class="comment">//问题所在行</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体定义如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LNode, *LinkedList;</span><br></pre></td></tr></table></figure><h1>分析</h1><p>按照我对结构体的定义，<code>LNode *</code>和<code>LinkedList</code>，这两个进行声明结点的时候是等价的，都是生成了一个指针，指向新开辟的空间，这即是那个结点。</p><p>等等！</p><p>cpp使用new进行创建的时候也是创建的指针（<font color='red'>对象指针</font>），好家伙，那使用new在声明一个指针变量不就成了指针的指针了嘛，就像是你进行了以下谜之操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> *intp;</span><br><span class="line"><span class="keyword">int</span> *s = <span class="keyword">new</span> intp*;</span><br></pre></td></tr></table></figure><blockquote><p>对不起，我刚刚好像就做了😥</p></blockquote><div class="note primary"><p><font color='red'>typedef</font>那句相当于定义了<code>int *</code>为一个新的名称<code>intp</code>，而进行定义指针变量时使用了<code>intp *</code>，相当于新建了一个指针的指针变量，和前面的<code>int *</code>当然是不匹配的</p></div><p><font color='cornflowerblue'>需要注意的是，使用new时，要注意到它本身返回的就是一个指针对象</font></p><h1>改动</h1><p>就很简单啊，直接还成不是指针的<code>LNode</code>就好了啊</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l = <span class="keyword">new</span> LNode;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.75e864a4e25ca1c9c85e4a0ab8f2b5d1?rik=mDvqPbGZ%2blrDhA&amp;amp;riu=http%3a%2f%2fpediaa.com%2fwp-content%2fuploads%2f2018%2f10%2fDifference-Between-new-and-delete-Operator-Comparison-Summary.jpg&amp;amp;ehk=TUN%2fIoWa9NY8G3HdETaw5j%2f08sAVFfDeQ6e4482cQJA%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;new and delete&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/categories/Cpp/"/>
    
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/tags/Cpp/"/>
    
  </entry>
  
  <entry>
    <title>以O(1)的空间复杂度交换两个数据</title>
    <link href="https://conquerorlei.github.io/posts/18813/"/>
    <id>https://conquerorlei.github.io/posts/18813/</id>
    <published>2021-08-19T07:32:00.000Z</published>
    <updated>2021-08-21T14:41:42.121Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic3.zhimg.com/v2-96d58dc7ea889b98102cbad4c53bb91e_720w.jpg?source=172ae18b" alt="Algorithm"></p><span id="more"></span><h1>题目、要求、描述</h1><p>题目描述：要求对于顺序表l进行逆序操作，要求空间复杂度为O(1)。</p><p>要求：</p><ol><li>顺序表的结构已经被定义</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125; SqlList;</span><br></pre></td></tr></table></figure><p>解释：直接原地操作进行交换，也就是说在原来的空间消耗基础上，不消耗其他多余内存的情况下，原地交换数据</p><p>分析：最开始没有从计算机的底层实现去考虑如何交换，考虑的是如何从软件、代码、程序的角度绕过去，但是发现，做了了一堆无用功。为了简化思路，后来直接用a和b两个数，如何不利用第三个数c直接交换a和b呢？</p><h1>解决方案</h1><h2 id="使用基本的加减运算"><a class="header-anchor" href="#使用基本的加减运算">¶</a>使用基本的加减运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">    a = a + b;</span><br><span class="line">    b = a - b;</span><br><span class="line">    a = a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success"><ol><li><p>a = (a+b)，此时a的值已经改变，用<font color='cornflowerblue'>a<sub>(a+b)</sub></font>来表示，<font color='red'>下标表示现在的值</font></p></li><li><p><font color='cornflowerblue'>a<sub>(a+b)</sub></font>-b=<font color='cornflowerblue'>b<sub>a</sub></font>，这是得到a原来的值，此时b即为<font color='cornflowerblue'>b<sub>a</sub></font>，也就是上述第三行代码的由来；</p></li><li><p><font color='cornflowerblue'>a<sub>(a+b)</sub></font>-<font color='cornflowerblue'>b<sub>a</sub></font>=<font color='cornflowerblue'>a<sub>b</sub></font>，很显然，此时得到的是原本a的值</p></li></ol></div><h2 id="使用异或运算"><a class="header-anchor" href="#使用异或运算">¶</a>使用异或运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">    b = a ^ b;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note primary"><p>其实这边使用的思想很简单，利用的就是：</p><ul><li>两个相同的数异或为0</li><li>任何数异或0都为它本身</li><li>异或运算满足分配率</li></ul><p><font color='orange'>a ^ b ^ a = a ^ a ^ b = 0 ^ b = b</font></p><p>这样的话再简单一分析，其实很容易就得出来上述算法：</p><ol><li>a ^ b = <font color='cornflowerblue'>a<sub>(a^b)</sub></font>，<font color='red'>下标表示现在的值</font></li><li><font color='cornflowerblue'>a<sub>(a^b)</sub></font> ^ b = <font color='cornflowerblue'>b<sub>a</sub></font></li><li><font color='cornflowerblue'>a<sub>(a^b)</sub></font> ^ <font color='cornflowerblue'>b<sub>a</sub></font> = <font color='cornflowerblue'>a<sub>b</sub></font></li></ol></div><h1>实现代码</h1><h2 id="算法部分代码"><a class="header-anchor" href="#算法部分代码">¶</a>算法部分代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sequence_list.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">invertSequence</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 三次异或则交换数据</span></span><br><span class="line">        l.data[i] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">        l.data[l.length - i - <span class="number">1</span>] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">        l.data[i] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlList l;</span><br><span class="line">    <span class="built_in">initList</span>(l);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printList</span>(l);</span><br><span class="line">    <span class="built_in">invertSequence</span>(l);</span><br><span class="line">    <span class="built_in">printList</span>(l);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sequence-list-h"><a class="header-anchor" href="#sequence-list-h">¶</a>sequence_list.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __SEQUENCE_LIST__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __SEQUENCE_LIST__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> InitSize 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义顺序表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125; SqlList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表相关操作</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initList</span><span class="params">(SqlList &amp;l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">increaseSize</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">locateElem</span><span class="params">(SqlList l, <span class="keyword">int</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getElem</span><span class="params">(SqlList l, <span class="keyword">int</span> i, <span class="keyword">int</span> &amp;e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destoryList</span><span class="params">(SqlList &amp;l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printList</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="sequence-list-cpp"><a class="header-anchor" href="#sequence-list-cpp">¶</a>sequence_list.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sequence_list.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initList</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l.data = <span class="keyword">new</span> <span class="keyword">int</span>[InitSize];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; InitSize; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l.length = <span class="number">0</span>;</span><br><span class="line">    l.MaxSize = InitSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">increaseSize</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *p = l.data;</span><br><span class="line">    l.data = <span class="keyword">new</span> <span class="keyword">int</span>[l.MaxSize + len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[i] = p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    l.MaxSize += len;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    p = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l.length &gt;= l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = l.length; j &gt;= i; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[j] = l.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    l.data[i - <span class="number">1</span>] = e;</span><br><span class="line">    l.length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l.length &gt;= l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; l.length; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[j - <span class="number">1</span>] = l.data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    l.length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> l.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">locateElem</span><span class="params">(SqlList l, <span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (l.data[i] == e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getElem</span><span class="params">(SqlList l, <span class="keyword">int</span> i, <span class="keyword">int</span> &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = l.data[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destoryList</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> l.data;</span><br><span class="line">    l.data = <span class="literal">NULL</span>;</span><br><span class="line">    l.length = <span class="number">0</span>;</span><br><span class="line">    l.MaxSize = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printList</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;空顺序表&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, l.data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>运行结果</h1><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108192300998.png" alt="运行结果"></p><div class="note success"><p>第一排输出的是没有进行逆转之前的数据，从下标0开始输出</p><p>第二排输出的是进行逆转之后的数据，从下标0开始输出</p></div><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-96d58dc7ea889b98102cbad4c53bb91e_720w.jpg?source=172ae18b&quot; alt=&quot;Algorithm&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>vscode C/C++头文件问题</title>
    <link href="https://conquerorlei.github.io/posts/55983/"/>
    <id>https://conquerorlei.github.io/posts/55983/</id>
    <published>2021-08-18T07:41:35.000Z</published>
    <updated>2021-08-21T14:54:26.694Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://code.visualstudio.com/opengraphimg/opengraph-home.png" alt="VS code"></p><span id="more"></span><h1>头文件问题</h1><p>vscode本质上只是一个文本编辑器，但是由于其插件的丰富性及其轻量化的特性，我更偏向使vscode写算法和学习c/c++语言，今天关于vscode引入自定义头文件出现了很多的问题，在此对正确的完整的做法进行一次记录</p><h2 id="关于C-C-配置问题"><a class="header-anchor" href="#关于C-C-配置问题">¶</a>关于C/C++配置问题</h2><p>网络上有很多的阐述，这里不多解释，也可以直接根据vscode官网文档进行编写配置文件。</p><div class="note primary"><p>不愿意麻烦的小伙伴文末有相关的文件以及网盘下载地址，直接过去下载即可</p></div><h2 id="添加可编译的头文件配置"><a class="header-anchor" href="#添加可编译的头文件配置">¶</a>添加可编译的头文件配置</h2><div class="note primary"><p>我是用的是头文件只负责声明，声明的函数由实现文件进行实现</p></div><h3 id="头文件的写法"><a class="header-anchor" href="#头文件的写法">¶</a>头文件的写法</h3><p>我想这个便不需要多加说明，这边只给定一个格式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __ABC_H__ <span class="comment">//包拯不重复</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __ABC_H__ <span class="comment">//定义</span></span></span><br><span class="line">...</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//和ifndef配套使用</span></span></span><br></pre></td></tr></table></figure><h3 id="vscode-c-cpp-properties-json的更改"><a class="header-anchor" href="#vscode-c-cpp-properties-json的更改">¶</a>.vscode\c_cpp_properties.json的更改</h3><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181608431.png" alt="添加自定义includePath"></p><div class="note primary"><p>右侧方框内部的路径可以是绝对路径可以是相对路径。值得一提的是，<font color='red'>${workspaceFolder}</font>表示的是工作区文件夹，即为目前vscode中目前打开的文件夹。</p></div><h3 id="vscode-tasks-json的更改"><a class="header-anchor" href="#vscode-tasks-json的更改">¶</a>.vscode\tasks.json的更改</h3><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181629799.png" alt="添加args配置"></p><p>框内一共有三个内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;args&quot;</span>: [</span><br><span class="line"><span class="string">&quot;-g&quot;</span>,</span><br><span class="line"><span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.c&quot;</span>, <span class="comment">// 头文件的实现文件所在路径</span></span><br><span class="line">    <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>, <span class="comment">// 头文件所在路径</span></span><br><span class="line">    <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure><div class="note info"><p><font color='red'>${fileDirname}</font>表示的是当前打开的文件所在的目录</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181638044.png" alt="项目结构"></p><p>仍然存在的问题在于，当调用的头文件增加时，可能会有其他的未使用的头文件被编译，但是者相比写一个头文件的实现文件添加到编译路径显然要简便许多</p></div><h2 id="头文件、实现文件、调用文件"><a class="header-anchor" href="#头文件、实现文件、调用文件">¶</a>头文件、实现文件、调用文件</h2><h3 id="头文件"><a class="header-anchor" href="#头文件">¶</a>头文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LINEAR_LIST_TEST_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LINEAR_LIST_TEST_H__</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="实现文件"><a class="header-anchor" href="#实现文件">¶</a>实现文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;linear_list_test_impl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m best!%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;We&#x27;re best!%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用文件"><a class="header-anchor" href="#调用文件">¶</a>调用文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;linear_list_test_impl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x = <span class="number">1024</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;test函数内部 x=%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;调用test前 x=%d\n&quot;</span>, x);</span><br><span class="line">    test(x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;调用test后 x=%d\n&quot;</span>, x);</span><br><span class="line">    test_1(x);</span><br><span class="line">    test_2(x);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>vscode配置文件</h1><h2 id="vscode-c-cpp-properties-json"><a class="header-anchor" href="#vscode-c-cpp-properties-json">¶</a>.vscode\c_cpp_properties.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;MinGW64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;intelliSenseMode&quot;</span>: <span class="string">&quot;gcc-x64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;compilerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cStandard&quot;</span>: <span class="string">&quot;c11&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cppStandard&quot;</span>: <span class="string">&quot;c++17&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;includePath&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;/include&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;MinGW86&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;intelliSenseMode&quot;</span>: <span class="string">&quot;gcc-x64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;compilerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gcc.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cStandard&quot;</span>: <span class="string">&quot;c11&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cppStandard&quot;</span>: <span class="string">&quot;c++17&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;includePath&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;/include&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-launch-json"><a class="header-anchor" href="#vscode-launch-json">¶</a>.vscode\launch.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;gcc.exe - 生成和调试活动文件&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gdb.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;setupCommands&quot;</span>: [&#123;</span><br><span class="line">            <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;gcc&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;g++.exe - 生成和调试活动文件&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gdb.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;setupCommands&quot;</span>: [&#123;</span><br><span class="line">            <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;g++&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-settings-json"><a class="header-anchor" href="#vscode-settings-json">¶</a>.vscode\settings.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;files.associations&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;ostream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iomanip&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iostream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;array&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;atomic&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;*.tcc&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cctype&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;clocale&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cmath&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdarg&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstddef&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdint&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdio&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdlib&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstring&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cwchar&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cwctype&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;deque&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;unordered_map&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;vector&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;exception&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;algorithm&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;memory&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;memory_resource&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;optional&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;string&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;string_view&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;system_error&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tuple&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type_traits&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;utility&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;fstream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;initializer_list&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iosfwd&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;istream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;limits&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;new&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;sstream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;stdexcept&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;streambuf&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;typeinfo&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tidl_alg_int.h&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;test.h&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;linear_list_test_impl.h&quot;</span>: <span class="string">&quot;c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;C_Cpp.errorSquiggles&quot;</span>: <span class="string">&quot;Disabled&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-tasks-json"><a class="header-anchor" href="#vscode-tasks-json">¶</a>.vscode\tasks.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;gcc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gcc.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.c&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;presentation&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;echo&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;focus&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;panel&quot;</span>: <span class="string">&quot;shared&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;showReuseMessage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;clear&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;g++&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.cpp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;presentation&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;echo&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;focus&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;panel&quot;</span>: <span class="string">&quot;shared&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;showReuseMessage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;clear&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关配置文件网盘下载地址"><a class="header-anchor" href="#相关配置文件网盘下载地址">¶</a>相关配置文件网盘下载地址</h2><p><a href="https://pan.baidu.com/s/1BmGztNbEsKCRobqebeop1w"><font color='cornflowerblue'>网盘链接</font></a>：提取码：scil</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://code.visualstudio.com/opengraphimg/opengraph-home.png&quot; alt=&quot;VS code&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Software" scheme="https://conquerorlei.github.io/categories/Software/"/>
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Cpp/"/>
    
    <category term="Vscode" scheme="https://conquerorlei.github.io/categories/Software/Vscode/"/>
    
    
    <category term="Sundry" scheme="https://conquerorlei.github.io/tags/Sundry/"/>
    
    <category term="Vscode" scheme="https://conquerorlei.github.io/tags/Vscode/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署警告&#39;warning: LF will be replaced by CRLF&#39;去除</title>
    <link href="https://conquerorlei.github.io/posts/35421/"/>
    <id>https://conquerorlei.github.io/posts/35421/</id>
    <published>2021-08-01T10:13:39.000Z</published>
    <updated>2021-08-21T14:51:50.544Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210801184921.png" alt="warning: LF will be replaced by CRLF"></p><span id="more"></span><h1>问题描述</h1><p>在Windows环境下使用Hexo d 进行部署时，在命令提示符中会出现以下警告信息，一般情况下，都会弹出一大串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in tags/ECS/index.html.</span><br></pre></td></tr></table></figure><h1>问题分析</h1><p>其实警告意思很简单，就是Git会将CRLF将被替换为LF，因为每次部署他都会弹出一大堆，让我很恼火。所以我就想把它们关掉。最开始，因为我的Markdown文档是我本地编辑的，没有仔细看问题描述的情况下我直接使用了Notepad++进行了CRLF替换为LF，但是全部替换完了才发现hexo本身的很多网站配置文件例如.js文件里面采用的行尾也是CRLF，最终还是决定将此功能禁用。</p><h1>问题解决策略</h1><h2 id="notepad-修改CRLF为LF"><a class="header-anchor" href="#notepad-修改CRLF为LF">¶</a>notepad++修改CRLF为LF</h2><h3 id="打开视图显示行尾符"><a class="header-anchor" href="#打开视图显示行尾符">¶</a>打开视图显示行尾符</h3><p>按照以下路径寻址：视图-&gt;显示符号-&gt;显示行尾符</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802111831.png" alt="显示行尾符"></p><p>这样就可以查看行尾符是CRLF还是LF</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112135.png" alt="查看行尾符"></p><h3 id="使用替换修改"><a class="header-anchor" href="#使用替换修改">¶</a>使用替换修改</h3><ul><li>使用Ctrl+H打开替换面板</li><li>在查找目标中输入\r\n</li><li>在替换内容中输入\n</li><li>并且勾选正则表达式</li><li>点击全部替换就好</li></ul><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112646.png" alt="替换面板"></p><p>结果如下：</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112804.png" alt="替换结果"></p><h2 id="MinGW64面板直接禁用Git配置"><a class="header-anchor" href="#MinGW64面板直接禁用Git配置">¶</a>MinGW64面板直接禁用Git配置</h2><p>直接在MinGW64面板输入一下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><h1>总结</h1><p>其实就从根本上解决问题而言，第二种方法是最好的。</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/20210801184921.png&quot; alt=&quot;warning: LF will be replaced by CRLF&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Git" scheme="https://conquerorlei.github.io/categories/Git/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
    <category term="Git" scheme="https://conquerorlei.github.io/tags/Git/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot远程debug</title>
    <link href="https://conquerorlei.github.io/posts/29958/"/>
    <id>https://conquerorlei.github.io/posts/29958/</id>
    <published>2021-07-12T15:12:31.000Z</published>
    <updated>2021-08-21T14:41:42.099Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ucarecdn.com/df898380-25a5-4296-9633-0ed47a9c717d/-/autorotate/yes/" alt="SpringBoot"></p><span id="more"></span><h1>前言</h1><p>前段时间使用了解和学习SpringBoot的过程中，后端业务逻辑有一些问题，但是使用本地debug根本无法进入断点，后来经过网络学习获得远程debug的方法，特于此记录</p><p><strong>工具</strong></p><ul><li>IDEA</li><li>JDK14</li></ul><h1>过程</h1><h2 id="新建Remote-Jvm-Debug"><a class="header-anchor" href="#新建Remote-Jvm-Debug">¶</a>新建Remote Jvm Debug</h2><ol><li>点击Edit configuration</li><li>点击+</li><li>找到Remote Jvm Debug</li></ol><h2 id="添加参数"><a class="header-anchor" href="#添加参数">¶</a>添加参数</h2><p>基本上只需要修改一下名称、命令参数以及监听端口就可以啦，这边给个截图</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802121222.png" alt="Debug Configuration"></p><p>Jvm Command如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:<span class="number">5005</span></span><br></pre></td></tr></table></figure><p>点击应用，点击ok，这样就配置好了</p><h2 id="运行Remote-Debug"><a class="header-anchor" href="#运行Remote-Debug">¶</a>运行Remote Debug</h2><p>这边和本地Debug有些不同的是，远程Debug需要先使用Maven将项目打包为Jar，然后指定端口运行Jar。</p><h3 id="Jar包"><a class="header-anchor" href="#Jar包">¶</a>Jar包</h3><p>使用Maven的clean和package将项目打包为jar</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802234952.png" alt="使用Maven生成Jar"></p><p>在控制台中输入一下命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=<span class="number">5005</span>,suspend=n -jar demo.jar</span><br></pre></td></tr></table></figure><div class="note primary"><blockquote><p>其中<font color='red'>demo.jar</font>为你打包之后的jar包名称，自行更改即可</p><p>需要注意一下几点：</p><ol><li>5005端口被占用：参考此<a href="https://conquerorlei.github.io/2021/05/22/tomcatError/">博客</a></li></ol></blockquote></div><h3 id="运行Debug"><a class="header-anchor" href="#运行Debug">¶</a>运行Debug</h3><p>运行完Jar包之后记得点击Debug那个按钮</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210803000307.png" alt="Debug"></p><h3 id="断点"><a class="header-anchor" href="#断点">¶</a>断点</h3><p>这个就不用说了吧，本地断点就好啦，在浏览器中输入项目网址，运行的过程中会自动进入断点的</p><div class="note primary"><p>需要注意的是，此时监听端口为<font color='cornflowerblue'>5005</font>，记得更改8080为5005</p></div><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://ucarecdn.com/df898380-25a5-4296-9633-0ed47a9c717d/-/autorotate/yes/&quot; alt=&quot;SpringBoot&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="FrameWork" scheme="https://conquerorlei.github.io/categories/FrameWork/"/>
    
    <category term="SpringBoot" scheme="https://conquerorlei.github.io/categories/FrameWork/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="https://conquerorlei.github.io/tags/SpringBoot/"/>
    
    <category term="Debug" scheme="https://conquerorlei.github.io/tags/Debug/"/>
    
  </entry>
  
  <entry>
    <title>多版本java安装与更换</title>
    <link href="https://conquerorlei.github.io/posts/26428/"/>
    <id>https://conquerorlei.github.io/posts/26428/</id>
    <published>2021-07-12T08:59:54.000Z</published>
    <updated>2021-08-21T14:41:42.124Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.57RW8_Q_6IjmGeqg2ss8OgHaEo?pid=ImgDet&amp;rs=1" alt="Java"></p><span id="more"></span><h1>前言</h1><p>最近需要部署SpringBoot项目，但是原本装的jdk版本是1.8，运行jar要求的源发行版是52.0，jdk1.8是不满足要求的，主要是运行都运行不了，但是又不想卸载jdk1.8，这里提供java多版本切换的方法。</p><h1>Java下载</h1><p>这个原本不想说的，但是，唉，真正试过的都知道，好家伙，下载window x64 installer还需要登录，当然不怕麻烦的申请一个Orcle的号也行。如果不想申请，又想下载jdk，这边提供一个网址。</p><p><a href="http://bugmenot.com/view/oracle.com">下载账号网页</a></p><p>可能会和谐的哦，这边在提供一个账号和密码</p><div class="note primary"><blockquote><p><strong>用户名：</strong><code>2696671285@qq.com</code><strong>密码：</strong><code>Oracle123</code></p></blockquote></div><p>使用这些账号密码就可以了。</p><p>另外一些攻略提示可以通过监控网页元素，即F12进入开发者模式，获取下载链接，我试过了，或许下载链接后，进入迅雷，<font color='red'>提示有下载，但是访问不到资源</font></p><h1>Java安装</h1><p>这个就不用说了吧，按照<code>JDK</code>的安装程序提示一步一步做就好了，中间又有一个<code>JDK</code>的安装路径问题，我选择的是默认，即<code>C:\Program Files\Java</code></p><p>如果你在<code>JDK</code>安装过程中更改了路径，记得把这个路径记住。</p><p>另外，需要注意的是，自jdk11以来jdk的包里面就不包括jre文件夹了，需要自己生成一个</p><p>步骤如下：</p><ol><li>使用管理员权限打开cmd</li><li>进入jdk的安装路径</li><li>执行以下命令</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入安装路径</span></span><br><span class="line">cd C:\Program Files\Java\jdk-14.0.2</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成jre文件夹</span></span><br><span class="line">bin\jlink.exe --module-path jmods --add-modules java.desktop --output jre</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713203221.png" alt="生成jre文件夹"></p><h1>环境变量配置</h1><p>下面就是重头戏了，<font color='red'>敲黑板！！！</font></p><h2 id="修改JAVA-HOME为JAVA8-HOME"><a class="header-anchor" href="#修改JAVA-HOME为JAVA8-HOME">¶</a>修改JAVA_HOME为JAVA8_HOME</h2><p>按照以下路径检索高级系统设置：<font color='cornflowerblue'>设置-&gt;系统-&gt;关于-&gt;高级系统设置</font></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/image-20210713181617867.png" alt="高级系统寻址"></p><p>点击：<font color='cornflowerblue'>高级-&gt;环境变量-&gt;系统变量</font>，在这里将原本的<code>JAVA_HOME</code>改为<code>JAVA8_HOME</code></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713194556.png" alt="修改JAVA_HOME"></p><h2 id="添加你新安装的jdk"><a class="header-anchor" href="#添加你新安装的jdk">¶</a>添加你新安装的jdk</h2><p>我安装的是jdk-14.0.2，将系统变量命名为<code>JAVA14_HOME</code></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713194921.png" alt="添加新的JAVA_HOME"></p><div class="note primary"><blockquote><p><font color='red'>变量值即为你的安装路径</font></p></blockquote></div><h2 id="添加变量JAVA-HOME"><a class="header-anchor" href="#添加变量JAVA-HOME">¶</a>添加变量JAVA_HOME</h2><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713195341.png" alt="添加JAVA_HOME"></p><div class="note success"><blockquote><p>变量值结构为：<font color='red'>%变量名%</font></p><p>中间的变量名即为你想要使用的jdk版本</p></blockquote></div><p>之前配置过jdk1.8的都配置过紫色框框里面的内容，这里是不需要改的</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713203444.png" alt="环境变量"></p><h1>查看java版本</h1><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713203939.png" alt="查看java版本"></p><h1>错误解决方案</h1><h2 id="生成jre失败"><a class="header-anchor" href="#生成jre失败">¶</a>生成jre失败</h2><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713204256.png" alt="生成jre文件夹错误"></p><p>解决方案：</p><p><font color='red'>使用管理员权限打开cmd</font></p><h2 id="java和javac版本不一致"><a class="header-anchor" href="#java和javac版本不一致">¶</a>java和javac版本不一致</h2><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713204718.png" alt="java与javac版本不一致"></p><p>原因：</p><p>同时安装了jdk14.0.2和jre14.0.2，且PATH变量中，C:\WINDOWS\system32或者C:\Program Files (x86)\Common Files\Oracle\Java\javapath目录在%JAVA_HOME%\bin之前。在Windows命令行下执行命令时，先从当前目录搜素，然后按照PATH设置的路径依次查找命令，而JRE安装时会将java.exe安装到C:\WINDOWS\system32目录下，所以执行java -version命令时，查看的是jre的版本，而javac -version时查看的jdk的版本。</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210713204850.png" alt="环境变量"></p><p>解决方案：</p><p>将<code>%JAVA_HOME%\bin</code>和<code>%JAVA_HOME%\jre\bin</code>移动到所有包含java以及<code>C:\WINDOWS\system32</code>的目录前面，这样就可以完美解决了</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.57RW8_Q_6IjmGeqg2ss8OgHaEo?pid=ImgDet&amp;amp;rs=1&quot; alt=&quot;Java&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    
    <category term="Sundry" scheme="https://conquerorlei.github.io/tags/Sundry/"/>
    
  </entry>
  
  <entry>
    <title>Linux云服务器部署springboot项目</title>
    <link href="https://conquerorlei.github.io/posts/28022/"/>
    <id>https://conquerorlei.github.io/posts/28022/</id>
    <published>2021-07-08T06:13:19.000Z</published>
    <updated>2021-08-21T14:41:42.094Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.Gy9LurVhf8pLsRhWLsl7TwHaEh?pid=ImgDet&amp;rs=1" alt="SpringBoot"></p><span id="more"></span><h1>前言</h1><p>本次需要进行云服务器部署的是一个java Springboot项目，使用的是阿里云的<code>ecs</code>云服务器，具体配置如下一个标题所示。云服务器部署环节是项目发布的很重要一步，所以这里简单写一下Linux云服务器部署Springboot项目</p><h1>云服务器配置</h1><h2 id="购买云服务器"><a class="header-anchor" href="#购买云服务器">¶</a>购买云服务器</h2><p>二话不说，购买什么的就不提了奥，这里我选择的云服务器配置如下</p><table><thead><tr><th>描述</th><th>配置</th></tr></thead><tbody><tr><td>CPU&amp;内存</td><td>1核 2 GiB</td></tr><tr><td>操作系统</td><td>Ubuntu  18.04 64位</td></tr><tr><td>当前使用带宽</td><td>1Mbps</td></tr><tr><td>网络类型</td><td>专用网络</td></tr><tr><td>磁盘容量</td><td>40GB</td></tr><tr><td>服务器类型</td><td>ecs</td></tr></tbody></table><h2 id="xshell的使用"><a class="header-anchor" href="#xshell的使用">¶</a>xshell的使用</h2><h3 id="xshell简介"><a class="header-anchor" href="#xshell简介">¶</a>xshell简介</h3><p><code>XShell</code>是一个强大的安全终端模拟软件，它支持<code>SSH1</code>，<code>SSH2</code>，以及Microsoft Windows平台的TELNET协议。</p><p><code>XShell</code>可以在Windows界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。</p><p>当然亦可以访问虚拟接中的<code>Linux</code>系统。由于在虚拟机中操作<code>Linux</code>系统需要频繁切换鼠标，缺乏个性化设置，不支持中文显示，所以我们将使用<code>XShell</code>来连接并使用安装好Linux系统的虚拟机。</p><h3 id="xshell下载"><a class="header-anchor" href="#xshell下载">¶</a>xshell下载</h3><p><a href="https://www.netsarang.com/zh/xshell-download/">下载地址</a>:<a href="https://www.netsarang.com/zh/xshell-download/">https://www.netsarang.com/zh/xshell-download/</a></p><p>下载过程中可能会出现一些问题，由于它的企业版需要付款，但是我们只是个人使用，所以，我们需要注意以下我们的选项</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708143748.png" alt="xshell下载主页选择免费授权界面"></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708143906.png" alt="填写选项"></p><p>这样点击下载后<code>netsarang</code>官网就会将xshell下载地址发送到您的邮箱，点击下载地址并开始下载，下载后安装就好。</p><h3 id="xshell安装"><a class="header-anchor" href="#xshell安装">¶</a>xshell安装</h3><p>安装过程中没有什么好说的，按照他给你的提示安装就好，我个人建议在选择安装位置时，尽量不要选择系统盘。</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708151105.png" alt="xshell安装位置选择"></p><p>这个算是老生常谈，我也就提一句。以下内容就是xhsell的使用了。</p><h3 id="xshell连接阿里云"><a class="header-anchor" href="#xshell连接阿里云">¶</a>xshell连接阿里云</h3><p>打开xshell，新建会话</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708153012.png" alt="xshell新建会话"></p><p>属性值：</p><ul><li>名称：随便填写，表示的当前会话的名称</li><li>主机：填写购买的云服务器上面的公网ip</li></ul><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708153121.png" alt="xshell用户身份验证"></p><ul><li>用户名：root</li><li>密码：你在云服务器上面创建的实例的密码</li></ul><p>设置完成之后直接连接</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708181405.png" alt="连接成功之后的界面"></p><h2 id="云服务器软件安装"><a class="header-anchor" href="#云服务器软件安装">¶</a>云服务器软件安装</h2><p>以下的内容都是在<code>xshell</code>打开的会话中执行的。</p><h3 id="安装mysql"><a class="header-anchor" href="#安装mysql">¶</a>安装mysql</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更新apt-get软件源</span></span><br><span class="line">apt-get update</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装mysql-server</span></span><br><span class="line">apt-get install mysql-server</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装mysql-client</span></span><br><span class="line">apt-get install mysql-client</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装mysql library</span></span><br><span class="line">apt-get install libmysqlclient-dev</span><br></pre></td></tr></table></figure><div class="note success"><blockquote><p>一般而言，云服务器中是直接以root登录的，并且直接给定的root权限，没有sudo命令，所以不用sudo安装</p><p>安装过程中一般不会提醒设置密码，默认情况下是没有密码的</p></blockquote></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看是否成功安装//一般安装成功后就会自行启动</span></span><br><span class="line">netstat -tap | grep mysql</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708200204.png" alt="执行结果"></p><p>剩余的就是mysql的常用指令了，这里不再赘述，不了解mysql常用指令的同学请移步到<a href="https://conquerorlei.github.io/2021/05/25/mysql%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">这里</a></p><h3 id="安装java11"><a class="header-anchor" href="#安装java11">¶</a>安装java11</h3><p>在xshell中执行以下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openjdk-11-jdk</span><br></pre></td></tr></table></figure><p>安装过程中会让你输入一个Y或n的，输入Y就可以</p><p>下载完成之后，输入以下命令查看java版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708200015.png" alt="查看java版本"></p><h3 id="安装lrzsz"><a class="header-anchor" href="#安装lrzsz">¶</a>安装lrzsz</h3><h4 id="lrzsz简介"><a class="header-anchor" href="#lrzsz简介">¶</a>lrzsz简介</h4><p>lrzsz是一个unix通信套件提供的X，Y，和ZModem文件传输协议。</p><h4 id="lrzsz安装"><a class="header-anchor" href="#lrzsz安装">¶</a>lrzsz安装</h4><p>在shell中写入以下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install lrzsz</span><br></pre></td></tr></table></figure><p>安装过程中需要输入的看一下提示，输入Y或者n就可以，Y就代表yes，n就代表no</p><h4 id="lrzsz使用"><a class="header-anchor" href="#lrzsz使用">¶</a>lrzsz使用</h4><p>常用的有两个命令，rz和sz</p><p>其中rz是上传，sz是下载</p><p>没什么好说的，例如上传，直接输入rz然后回车就好</p><h5 id="上传命令rz"><a class="header-anchor" href="#上传命令rz">¶</a>上传命令rz</h5><p>一般而言，使用rz从本地上传到云服务器，可能会存在编码的问题，我们尽可能较少这么意外因素产生的影响，直接使用<code>-be</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz -be</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><p>-b：binary 用binary的方式上传下载，不解释字符为ASCII</p></li><li><p>-e ：强制escape 所有控制字符</p></li></ul><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708201921.png" alt="输入rz -be之后选择文件传输"></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708202436.png" alt="上传过程"></p><p>等他上传好即可，进入root下输入ls即可查看上传的文件</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708202713.png" alt="上传成功"></p><h5 id="下载命令sz"><a class="header-anchor" href="#下载命令sz">¶</a>下载命令sz</h5><p>下载命令不经常使用，但是依旧可以将云服务器上面的日志文件下载到本地</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708213519.png" alt="下载文件"></p><p>需要注意的是，需要输入文件的名称，然后选择文件的步骤和上传相同</p><p>下载到本地的日志文件</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708213654.png" alt="下载到本地的日志文件"></p><h1>springboot部署</h1><h2 id="生成jar包"><a class="header-anchor" href="#生成jar包">¶</a>生成jar包</h2><p>现在大多数springboot项目都在使用maven进行包管理，使用maven能够很简单地打包jar，我使用的是IDEA，按照下图顺序执行</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708203453.png" alt="maven打包"></p><p><strong>生成的jar路径</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708203704.png" alt="jar path"></p><h2 id="上传"><a class="header-anchor" href="#上传">¶</a>上传</h2><p>不需要多说，直接按照上面提到的rz指令上传</p><h2 id="运行"><a class="header-anchor" href="#运行">¶</a>运行</h2><p>进入root，运行一下jar包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar &lt;package-name&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708205713.png" alt="熟悉的spring项目启动界面"></p><h2 id="访问"><a class="header-anchor" href="#访问">¶</a>访问</h2><p>使用的公网IP访问你的项目，第一次都会很慢，遇见这个的时候不要慌张哦</p><h1>错误汇总</h1><h2 id="port-8080-are-already-in-use"><a class="header-anchor" href="#port-8080-are-already-in-use">¶</a>port 8080 are already in use</h2><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708204536.png" alt="port 8080 are already in use"></p><h3 id="解决办法"><a class="header-anchor" href="#解决办法">¶</a>解决办法</h3><p>输入一下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看端口8080占用情况</span></span><br><span class="line">netstat -tln | grep 8080</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">查看端口属于哪个程序,端口被哪个进程占用</span></span><br><span class="line">lsof -i :8080</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 杀掉这个进程</span></span><br><span class="line">kill -9 878</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 再次查看端口8080占用情况，没有任何输出则表示端口没有被占用</span></span><br><span class="line">netstat -tln | grep 8080</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708205128.png" alt="解决截图"></p><h2 id="公网IP无法访问"><a class="header-anchor" href="#公网IP无法访问">¶</a>公网IP无法访问</h2><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708210109.png" alt="公网IP无法访问"></p><h3 id="解决办法-v2"><a class="header-anchor" href="#解决办法-v2">¶</a>解决办法</h3><p>登录你的云服务器，我的是阿里云，进入控制台之后找到你出案件的实例，点击<code>安全组</code>，然后点击<code>配置规则</code></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708210343.png" alt="设置安全组规则1"></p><p><strong>添加安全组</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708210822.png" alt="添加安全组1"></p><p>然后！！！</p><p>这里是很需要很重要很重要的，重要的事情说三遍</p><p><font color='red'>重启云服务器</font></p><p><font color='red'>重启云服务器</font></p><p><font color='red'>重启云服务器</font></p><p>不然上面做的是不生效的</p><h2 id="关闭xshell后无法访问项目"><a class="header-anchor" href="#关闭xshell后无法访问项目">¶</a>关闭xshell后无法访问项目</h2><p>其实这个不算错误，也算啦</p><p>其实也没什么，要想在后台运行，需要借助<code>nohup</code></p><h3 id="nohup简介"><a class="header-anchor" href="#nohup简介">¶</a>nohup简介</h3><p>如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。</p><p>在缺省情况下该作业的所有输出都被重定向到同级文件夹下一个名为nohup.out的文件中。</p><h3 id="命令格式"><a class="header-anchor" href="#命令格式">¶</a>命令格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup Command [ Arg … ] [　&amp; ]</span><br></pre></td></tr></table></figure><h3 id="案例"><a class="header-anchor" href="#案例">¶</a>案例</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup command &gt; myout.file 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="nohup运行java-jar"><a class="header-anchor" href="#nohup运行java-jar">¶</a>nohup运行java -jar</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar association-0.0.1-SNAPSHOT.jar &gt; /root/output/association.log &amp;</span><br></pre></td></tr></table></figure><p>输出到<code>/root/output/association.log</code></p><h3 id="命令使用错误"><a class="header-anchor" href="#命令使用错误">¶</a>命令使用错误</h3><p>唉，这个说多了都是泪</p><p><font color='red'>没有加&amp;</font>，记得把<font color='red'>&amp;</font>补上，当时查这个错误查了半天，命令没问题就可以理所当然地退出<code>xshell</code>了</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708213228.png" alt="正确截图"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.Gy9LurVhf8pLsRhWLsl7TwHaEh?pid=ImgDet&amp;amp;rs=1&quot; alt=&quot;SpringBoot&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="Linux" scheme="https://conquerorlei.github.io/categories/Linux/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="运维" scheme="https://conquerorlei.github.io/categories/Linux/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="SpringBoot" scheme="https://conquerorlei.github.io/tags/SpringBoot/"/>
    
    <category term="ECS" scheme="https://conquerorlei.github.io/tags/ECS/"/>
    
  </entry>
  
  <entry>
    <title>git命令</title>
    <link href="https://conquerorlei.github.io/posts/36736/"/>
    <id>https://conquerorlei.github.io/posts/36736/</id>
    <published>2021-07-03T02:48:48.000Z</published>
    <updated>2021-08-21T14:44:51.005Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.ABjebgItCCVwn7kiCdItzAHaDF?pid=ImgDet&amp;rs=1" alt="git"></p><span id="more"></span><h1>git学习笔记</h1><h2 id="1-分布式基本结构"><a class="header-anchor" href="#1-分布式基本结构">¶</a>1 分布式基本结构</h2><p>工作区-暂存区-本地仓库-远程仓库</p><ul><li>工作区就是电脑本地就能看见的文件目录</li><li><code>git add</code> 命令将新增的文件添加到暂存区</li><li><code>git commit</code> 命令将暂存区的文件提交到本地版本库中</li><li>通过<code>git checkout</code>命令可以从本地版本库检查是否存在改动、新增、删除的文件或者对版本库的改动</li><li><code>git push</code> 命令将代码上传到远程代码库上并合并</li><li><code>git fetch</code> 和 <code>git clone</code> 命令可以将远程版本库克隆到本地，从远程获得代码库</li><li><code>git pull</code> 命令下载远程代码并合并</li></ul><h2 id="2-基本操作"><a class="header-anchor" href="#2-基本操作">¶</a>2 基本操作</h2><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">命令解释</th></tr></thead><tbody><tr><td style="text-align:left">git init</td><td style="text-align:left">仓库初始化</td></tr><tr><td style="text-align:left">git add</td><td style="text-align:left">添加文件到暂存区</td></tr><tr><td style="text-align:left">git commit</td><td style="text-align:left">提交代码到本地仓库</td></tr><tr><td style="text-align:left">git push</td><td style="text-align:left">将暂存区文件提交到远程仓库并和并</td></tr><tr><td style="text-align:left">git clone</td><td style="text-align:left">克隆一个版本库</td></tr><tr><td style="text-align:left">git log</td><td style="text-align:left">获取日志</td></tr><tr><td style="text-align:left">git status</td><td style="text-align:left">获取仓库当前的状态</td></tr><tr><td style="text-align:left">git diff</td><td style="text-align:left">比较工作区和暂存区的差异</td></tr><tr><td style="text-align:left">git config</td><td style="text-align:left">配置git</td></tr><tr><td style="text-align:left">git rm</td><td style="text-align:left">删除工作区文件</td></tr><tr><td style="text-align:left">git mv</td><td style="text-align:left">移动工作区文件</td></tr><tr><td style="text-align:left">git remote</td><td style="text-align:left">远程仓库操作</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><p>除上述命令之外的其他命令行命令，<strong>注意空格以及在使用命令时不能有&quot;&lt;&gt;&quot;</strong></p><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>mkdir <foldername></td><td>创建文件夹</td></tr><tr><td>touch <filename></td><td>创建文件</td></tr><tr><td>cd <path></td><td>进入路径</td></tr><tr><td>ls</td><td>查看当前目录下的文件</td></tr></tbody></table><h3 id="1-add-命令"><a class="header-anchor" href="#1-add-命令">¶</a>1 add 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git add <file1> <file2> &lt;…&gt;</td><td>添加多个文件到暂存区(注意文件之间以空格隔开)</td></tr><tr><td>git add <dir></td><td>添加指令目录到暂存区，包括暂存区所有文件</td></tr><tr><td>git add .</td><td>添加当前目录下所有文件到暂存区</td></tr></tbody></table><h3 id="2-commit-命令"><a class="header-anchor" href="#2-commit-命令">¶</a>2 commit 命令</h3><table><thead><tr><th>命令</th><th>命令解释(message 是一些备注信息)</th></tr></thead><tbody><tr><td>git commit -m “message”</td><td>提交暂存区内容到本地仓库</td></tr><tr><td>git commit <file1> <file2> -m “message”</td><td>提交指定文件到本地仓库</td></tr><tr><td>git commit -am “message”</td><td>跳过git add 直接提交</td></tr><tr><td>git commit -amend</td><td>重新提交(主要是小错误，例如忘记提交某一文件，或者提交信息小错误)</td></tr></tbody></table><h3 id="3-status-命令"><a class="header-anchor" href="#3-status-命令">¶</a>3 status 命令</h3><p>git status 命令主要查看上次提交后有没有再次修改</p><p>git commit -s 简短显示状态信息</p><h3 id="4-diff-命令"><a class="header-anchor" href="#4-diff-命令">¶</a>4 diff 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git diff <file></td><td>显示暂存区和工作区之间差异</td></tr><tr><td>git diff --cached <file></td><td>显示暂存区和上一次提交之间的差异(其中cached可以被stored代替)</td></tr><tr><td>git diff  <first-branch> <second-branch></td><td>显示两次提交之间的差异</td></tr></tbody></table><h3 id="5-reset-命令"><a class="header-anchor" href="#5-reset-命令">¶</a>5 reset 命令</h3><p>版本回退命令</p><p>基本格式如下</p><ul><li>git reset &lt;–soft|–mixed|–hard&gt; <HEAD> <file><ul><li>–mixed 为默认参数一般不需要说明，用于保持暂存区文件与上次提交的一致，工作区文件不变<ul><li><code>git reset HEAD^</code>      #回退到上一个版本</li><li><code>git reset HEAD^^</code>    #回退到上上一个版本</li><li><code>git reset HEAD^ hello.txt</code>    #回退 hello.txt 文件版本到上一个版本</li><li><code>git reset 052e</code>           #回退到指定版本</li></ul></li><li>–soft 用于回退到某个版本<ul><li><code>git reset --soft HEAD~3</code>       #回退到上上上一个版本</li><li><code>git reset --soft</code></li></ul></li><li>–hard 参数撤销工作区中所有为提交的修改内容，将工作区和暂存区所有文件都回退到上一个版本并删除所有的提交信息<ul><li><code>git reset --hard HEAD~3</code>     #回退到上上上个版本</li><li><code>git reset --hard origin/master</code>   #回退到和远程一致的版本</li><li><code>git reset --hard HEAD^</code>       #回退到上个版本</li></ul></li></ul></li></ul><p>执行git reset HEAD 命令已经取消之前的git add操作，但不希望包含在下一提交的<strong>快照</strong>中的缓存。使用git commit -am “message” 提交</p><p>解释：git reset 是版本回退命令，但是在执行它之后，远程库并不会因此而改变，这也从另一方面说明了分布式管理的好处：这在于一人撤销提交操作，不会影响到其他人的提交操作，既保证了合作也保证了独立。那么问题来了，怎样来合并不同的版本库呢？不停地使用git pull命令或者git fetch 和git merge从而保证远程库和本地库保持一致？</p><p>remarks:需要注意的是，可以使用git reflog来显示最近执行的commit操作以及reset操作，进而可以指定版本号进行回退。值得注意的是，本地版本库允许有多次不同的提交，使用reset命令只可以订从最早提交的开始到指定的提交结束从而进行上传或者是返回后对指定版本号下的内容进行修改。但是倘若已经提交到了远程库，这时候再在本地版本库长记性reset命令，会导致HEAD指针与当前origin/master不符，即HEAD指针落后于当前的origin/master是不行的。如果强行在上传后执行reset命令，再次提交时就会出现错误。错误提示信息如下：</p><p>! [rejected]        master -&gt; master (non-fast-forward)</p><p>error: failed to push some refs to ‘<a href="https://gitee.com/QingShanxl/lixianlei.git">https://gitee.com/QingShanxl/lixianlei.git</a>’</p><p>hint: <font color="red">Updates were rejected because the tip of your current branch is behind</font></p><p>hint: <font color="red">its remote counterpart. </font>Integrate the remote changes (e.g. ‘git pull …’) before pushing again.</p><p>hint: See the ‘Note about fast-forwards’ in ‘git push --help’ for details.</p><p><font color='cornflowerblue'>the main error has signed in color “red”</font></p><h3 id="6-rm-命令"><a class="header-anchor" href="#6-rm-命令">¶</a>6 rm 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git rm <file></td><td>删除工作区文件</td></tr><tr><td>git rm -f <file></td><td>强制删除文件(如果删除之前修改过并且保存到暂存区的话，必须强制删除)</td></tr><tr><td>git rm -cached <file></td><td>删除暂存区的文件(工作区保留)</td></tr><tr><td>git rm -f *</td><td>删除此目录下的所有文件和子目录</td></tr></tbody></table><p>可以递归删除，如果<file>是一个文件夹，则会递归删除此文件夹及其内部的子目录和所有文件</p><h3 id="7-mv-命令"><a class="header-anchor" href="#7-mv-命令">¶</a>7 mv 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git mv <file> <new file></td><td>重命名</td></tr><tr><td>git mv <file> <destination direction></td><td>移动文件到某一指定目录</td></tr><tr><td>git mv -f <file> <new file></td><td>重命名(新文件名已经存在，但依然要重命名)</td></tr></tbody></table><h3 id="8-log-命令"><a class="header-anchor" href="#8-log-命令">¶</a>8 log 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git log</td><td>显示提交历史</td></tr><tr><td>git log --oneline</td><td>按行显示提交历史</td></tr><tr><td>git log --graph</td><td>显示提交历史中什么时候出现分支以及分支合并</td></tr><tr><td>git log --reverse</td><td>反向显示提交历史</td></tr><tr><td>git log -p -num</td><td>显示最近num次提交历史中差异以及补丁信息</td></tr><tr><td>git log --author</td><td>指定作者显示提交信息</td></tr><tr><td>git log --stat</td><td>简要显示提交历史</td></tr><tr><td>git log --since</td><td>显示指定时间之后的提交历史(参数可以用–after代替)</td></tr><tr><td>git log --until</td><td>显示指定时间之前的提交历史(参数可以用–before代替)</td></tr></tbody></table><h3 id="9-remote命令"><a class="header-anchor" href="#9-remote命令">¶</a>9 remote命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git remote -v</td><td>显示所有远程仓库</td></tr><tr><td>git remote show <remote></td><td>显示指定远程仓库的信息</td></tr><tr><td>git remote add <shortname> <url></td><td>添加远程代码库</td></tr><tr><td>git remote rm <shortname></td><td>删除远程版本库(删除的是本地仓库对远程仓库的引用)</td></tr><tr><td>git remote rename <shortname> <new shortname></td><td>重命名</td></tr></tbody></table><h3 id="10-fetch命令"><a class="header-anchor" href="#10-fetch命令">¶</a>10 fetch命令</h3><p>git fetch命令用于从远程库下载修改内容，其后需要 git merge 命令用于合并代码库。保证在远程库中做出的修改在本地体现。</p><p>测试用例：</p><ul><li>在远程库中修改相关的Readme.txt</li><li><code>git fetch origin</code></li><li><code>git merge origin/master</code></li><li>最终在本地的Readme.txt 文件中显示了修改</li></ul><h3 id="11-push-命令"><a class="header-anchor" href="#11-push-命令">¶</a>11 push 命令</h3><table><thead><tr><th>命令</th><th>命令解释</th></tr></thead><tbody><tr><td>git push &lt;远程主机名&gt; &lt;本地分支名&gt;</td><td>上传代码到远程仓库</td></tr><tr><td>git push --force &lt;远程主机名&gt; &lt;本地分支名&gt;</td><td>强制上传</td></tr><tr><td>git push &lt;远程主机名&gt; --delete &lt;本地分支名&gt;</td><td>删除本地分支</td></tr></tbody></table><h3 id="12-pull-命令"><a class="header-anchor" href="#12-pull-命令">¶</a>12 pull 命令</h3><p>格式：<code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code></p><p>相当于 <code>git fetch</code> 和  <code>git merge</code> 的合成</p><h2 id="2-多人协作"><a class="header-anchor" href="#2-多人协作">¶</a>2 多人协作</h2><p>在多人协作方面，不同人并不可见当前其他成员正在建立或使用的分支，即使执行checkout命令，也不能转化到他进行操作的分支上。例如，一名成员创建了&quot;w#2&quot;分支，另外一名成员在进行分支跳转时只能跳转到以前的分支或者master分支，不能直接跳转到当前成员创建的&quot;w#2&quot;分支上，这样，有利于分支管理，不需要过多的合并操作。</p><p>或者说，本地用户建立的远程分支会提交到远程库上，可以通过git push origin 分支名来指定提交的分支。另外就是就是不同的用户想要在相同的分支上去操作，不必在本地新建同名的分支，只不过在提交的时候需要不同的指定，例如将更改从master提交到w#2，可以通过这样一条命令来制定操作：git push origin w#2,这样就从当前分支提交到了远程的w#2分支，但是本地看不到不同分支间的差距</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.ABjebgItCCVwn7kiCdItzAHaDF?pid=ImgDet&amp;amp;rs=1&quot; alt=&quot;git&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://conquerorlei.github.io/categories/Git/"/>
    
    
    <category term="Git" scheme="https://conquerorlei.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Vim配置美化</title>
    <link href="https://conquerorlei.github.io/posts/10774/"/>
    <id>https://conquerorlei.github.io/posts/10774/</id>
    <published>2021-06-30T06:30:48.000Z</published>
    <updated>2021-08-21T14:41:42.104Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708233232.png" alt="Gvim"></p><span id="more"></span><h1>简单描述</h1><p>描述就算了，直接看我目前的gvim界面</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210709005447.png" alt="当前gvim界面"></p><h1>vim使用说明</h1><h2 id="使用Vim打开文件"><a class="header-anchor" href="#使用Vim打开文件">¶</a>使用Vim打开文件</h2><p>win+R打开运行，在运行中输入cmd打开命令提示符，在命令提示符中输入一下代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim $&#123;FilePath&#125;</span><br></pre></td></tr></table></figure><div class="note success"><blockquote><p>这边需要主要的时候，以下代码是有<font color='red'>错误</font>的😮（直呼好家伙）</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/image-20210630145458519.png" alt="cmd-Vim打开文件"></p><p>原因是路径内部有<font color='cornflowerblue'>空格</font>，无法正确地寻址<code>IDEA workstation</code></p></blockquote></div><p><strong>正确实例</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/%E6%AD%A3%E7%A1%AE%E7%A4%BA%E4%BE%8B.png" alt="正确示例"></p><h2 id="四种模式"><a class="header-anchor" href="#四种模式">¶</a>四种模式</h2><p>vim 共分为四种模式，分别是普通模式（Normal mode）、底行模式(Last line mode)、输入模式（Insert mode）和可视化模式（Visual mode）</p><h3 id="普通模式"><a class="header-anchor" href="#普通模式">¶</a>普通模式</h3><p>这个模式一般用于浏览代码与进入底行模式输入命令，使用快捷键修改文章</p><h4 id="光标移动命令"><a class="header-anchor" href="#光标移动命令">¶</a>光标移动命令</h4><table><thead><tr><th>快捷键</th><th>效果</th></tr></thead><tbody><tr><td>h 或 向左箭头键(←)</td><td>光标向左移动一个字符</td></tr><tr><td>j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td>k 或 向上箭头键(↑)</td><td>光标向下移动一个字符</td></tr><tr><td>l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr></tbody></table><div class="note primary"><blockquote><p>很平常使用的编辑器光标移动规则差不多</p></blockquote></div><table><thead><tr><th>快捷键</th><th>效果</th></tr></thead><tbody><tr><td>[Ctrl] + [f]</td><td>屏幕向下移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td>[Ctrl] + [b]</td><td>屏幕向上移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td>[Ctrl] + [d]</td><td>屏幕向下移动半页</td></tr><tr><td>[Ctrl] + [u]</td><td>屏幕向上移动半页</td></tr><tr><td>+</td><td>光标移动到非空格符的下一行</td></tr><tr><td>-</td><td>光标移动到非空格符的上一行</td></tr><tr><td>n &lt; space &gt;</td><td>那个 n 表示数字，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。<br>例如 20&lt; space &gt; 则光标会向后面移动 20 个字符距离。</td></tr><tr><td>M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td>L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td>G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td>nG</td><td>n 为数字。移动到这个档案的第 n 行。<br>例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td>gg</td><td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td>n&lt; Enter &gt;</td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><h4 id="文档查询与替换命令"><a class="header-anchor" href="#文档查询与替换命令">¶</a>文档查询与替换命令</h4><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>/word</td><td>向光标之下寻找一个名称为 word 的字符串。<br>例如要在档案内搜寻 vbird 这个字符串，就输入 / vbird 即可！ (常用)</td></tr><tr><td>?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td>n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。<br>举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。<br>如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td>N</td><td>这个 N 是英文按键。与 n 刚好相反，为反向进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示向上搜寻 vbird 。</td></tr><tr><td>:n1,n2s/word1/word2/g</td><td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！<br>举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： <code>:100,200s/vbird/VBIRD/g</code>。(常用)</td></tr><tr><td>:1,$s/word1/word2/g 或 :%s/word1/word2/g</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td>:1,$s/word1/word2/gc 或 :%s/word1/word2/gc</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！<br>且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr></tbody></table><h4 id="增删改命令"><a class="header-anchor" href="#增删改命令">¶</a>增删改命令</h4><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符( 相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td>nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 10x。</td></tr><tr><td>dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td>ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td>d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td>dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td>d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td>d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td>yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td>nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td>y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td>yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td>y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td>y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td>p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！<br> 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td>J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td>c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td>u</td><td>复原前一个动作。(常用)</td></tr><tr><td>[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td>.</td><td><font color='red'>不要怀疑！这就是小数点！</font>意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点就好了！ (常用)</td></tr></tbody></table><h3 id="底行模式"><a class="header-anchor" href="#底行模式">¶</a>底行模式</h3><p>在Vim下面有一行，这一行是让你输入命令的，想要输入命令必须使用<code>\</code>或者<code>:</code>触发，<code>\</code>是用来查找内容的，严格说属于Normal模式，所以其实只有<code>:</code>开头的命令</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/image-20210701234633933.png" alt="Vim Gui结构1"></p><h4 id="常用命令"><a class="header-anchor" href="#常用命令">¶</a>常用命令</h4><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td>:w!</td><td>若文件属性为只读时，强制写入该档案。</td></tr><tr><td>:q</td><td>离开 vi (常用)</td></tr><tr><td>:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td>:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开</td></tr><tr><td>:w [filename]</td><td>将编辑的数据储存成另一个档案，相当于另存为</td></tr><tr><td>:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。<br>亦即将 filename 这个档案内容加到游标所在行后面</td></tr><tr><td>:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。(n1和n2表示行号)</td></tr><tr><td>:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！<br>例如 :! ls /home即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr></tbody></table><div class="note primary"><p>命令后加感叹号<font color='red'>！</font>一般情况下都表示强制执行</p></div><h2 id="输入模式"><a class="header-anchor" href="#输入模式">¶</a>输入模式</h2><p>insert模式就是输入模式，通过i，a，r，o触发，在普通模式下点击上述按键就可以触发，不同的字母表示的含义不同</p><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>i, I</td><td>i 为从目前光标所在处输入， <br>I 为在目前所在行的第一个非空格符处开始输入</td></tr><tr><td>a, A</td><td>a 为从目前光标所在的下一个字符处开始输入，<br> A 为从光标所在行的最后一个字符处开始输入</td></tr><tr><td>o, O</td><td>这是英文字母 o 的大小写。<br>o 为在目前光标所在的下一行处输入新的一行； <br>O 为在目前光标所在处的上一行输入新的一行</td></tr><tr><td>r, R</td><td>r 只会取代光标所在的那一个字符一次；<br>R会一直取代光标所在的文字，直到按下 ESC 为止</td></tr></tbody></table><h2 id="可视化模式"><a class="header-anchor" href="#可视化模式">¶</a>可视化模式</h2><p>ctrl+v可进入可视化模式</p><p>visual模式下的最有用的是批量注释和取消注释</p><h3 id="批量注释"><a class="header-anchor" href="#批量注释">¶</a>批量注释</h3><ol><li><p>在普通模式下使用Ctrl+V快捷键进入可视化模式</p></li><li><p>使用上下方向键选择要进行注释的行</p></li><li><p>使用快捷键Shift+I进入行首插入模式</p></li><li><p>在光标所在行行首插入该语言的注释符号例如<code>//</code>或者<code>#</code>或者<code>;</code></p></li><li><p>点击两次esc，结束了</p></li></ol><h3 id="取消注释"><a class="header-anchor" href="#取消注释">¶</a>取消注释</h3><ol><li>在普通模式下使用Ctrl+V快捷键进入可视化模式</li><li>选择注释符号，<font color='red'>注意<code>//</code>选择两个</font></li><li>按<code>d</code>删除</li><li><code>esc</code>保存退出</li></ol><h1>vim配置</h1><p>vim配置一般都存储在用户根目录下的<code>_vimrc</code>，我们做的很多配置都是在这个文件里面编写</p><h2 id="基础配置"><a class="header-anchor" href="#基础配置">¶</a>基础配置</h2><h3 id="设置快捷键打开-vimrc"><a class="header-anchor" href="#设置快捷键打开-vimrc">¶</a>设置快捷键打开_vimrc</h3><p>由于经常需要打开<code>_vimrc</code>，所以这里为<code>_vimrc</code>设置快捷键，在普通模式下直接输入rc即可打开文件<code>_vimrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map rc : e $HOME\_vimrc</span><br></pre></td></tr></table></figure><h3 id="为Vim配置默认编码"><a class="header-anchor" href="#为Vim配置默认编码">¶</a>为Vim配置默认编码</h3><p>将编码设置为UTF-8，方便以后我们中文注释的Coding</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set encoding=utf-8</span><br></pre></td></tr></table></figure><h3 id="为Vim配置代码高亮"><a class="header-anchor" href="#为Vim配置代码高亮">¶</a>为Vim配置代码高亮</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">syntax on </span><br></pre></td></tr></table></figure><h3 id="将gVim的语言修改为英文方便使用"><a class="header-anchor" href="#将gVim的语言修改为英文方便使用">¶</a>将gVim的语言修改为英文方便使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language C </span><br></pre></td></tr></table></figure><h3 id="向下兼容vi"><a class="header-anchor" href="#向下兼容vi">¶</a>向下兼容vi</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set nocompatible</span><br><span class="line">filetype on</span><br><span class="line">filetype indent on</span><br><span class="line">filetype plugin on</span><br></pre></td></tr></table></figure><h3 id="在可视化下兼容鼠标"><a class="header-anchor" href="#在可视化下兼容鼠标">¶</a>在可视化下兼容鼠标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set mouse=a</span><br></pre></td></tr></table></figure><h3 id="将缩进设置为空格"><a class="header-anchor" href="#将缩进设置为空格">¶</a>将缩进设置为空格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let &amp;t_ut=&#x27;&#x27;</span><br><span class="line">set expandtab </span><br></pre></td></tr></table></figure><h3 id="缩进配置为4空格"><a class="header-anchor" href="#缩进配置为4空格">¶</a>缩进配置为4空格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set tabstop=4</span><br><span class="line">set shiftwidth=4</span><br><span class="line">set softtabstop=4</span><br></pre></td></tr></table></figure><h3 id="渲染Tab和空格"><a class="header-anchor" href="#渲染Tab和空格">¶</a>渲染Tab和空格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set listchars=tab:▸\ ,trail:▫</span><br></pre></td></tr></table></figure><h3 id="设置光标滚动停止行"><a class="header-anchor" href="#设置光标滚动停止行">¶</a>设置光标滚动停止行</h3><p>就是往下滚的时候除非到行尾，保证当前选中行至少是倒数第五行，向上同理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set scrolloff=5</span><br></pre></td></tr></table></figure><h3 id="开启退格跨行退格"><a class="header-anchor" href="#开启退格跨行退格">¶</a>开启退格跨行退格</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set backspace=indent,eol,start</span><br></pre></td></tr></table></figure><h3 id="开启代码折叠"><a class="header-anchor" href="#开启代码折叠">¶</a>开启代码折叠</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set foldmethod=indent</span><br><span class="line">set foldlevel=99</span><br></pre></td></tr></table></figure><h3 id="在三种模式下采用三种光标-仅gVim"><a class="header-anchor" href="#在三种模式下采用三种光标-仅gVim">¶</a>在三种模式下采用三种光标[仅gVim]</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let &amp;t_SI = &quot;\&lt;Esc&gt;]50;CursorShape=1\x7&quot;</span><br><span class="line">let &amp;t_SR = &quot;\&lt;Esc&gt;]50;CursorShape=2\x7&quot;</span><br><span class="line">let &amp;t_EI = &quot;\&lt;Esc&gt;]50;CursorShape=0\x7&quot;</span><br></pre></td></tr></table></figure><h3 id="永远保留命令行"><a class="header-anchor" href="#永远保留命令行">¶</a>永远保留命令行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set laststatus=2</span><br></pre></td></tr></table></figure><h3 id="自动缩进"><a class="header-anchor" href="#自动缩进">¶</a>自动缩进</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set autoindent</span><br></pre></td></tr></table></figure><h3 id="设置字体-仅gVim"><a class="header-anchor" href="#设置字体-仅gVim">¶</a>设置字体[仅gVim]</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set guifont=Powerline_Consolas:h12:cANSI:qDRAFT</span><br></pre></td></tr></table></figure><h3 id="隐藏gVim的四个滚动条"><a class="header-anchor" href="#隐藏gVim的四个滚动条">¶</a>隐藏gVim的四个滚动条</h3><p>隐藏gVim的四个滚动条如果被激活了F2再次关闭</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">map &lt;silent&gt; &lt;F2&gt; :if &amp;guioptions =~# &#x27;T&#x27; &lt;Bar&gt;</span><br><span class="line">\set guioptions-=T &lt;Bar&gt;</span><br><span class="line">\set guioptions-=m &lt;bar&gt;</span><br><span class="line">\else &lt;Bar&gt;</span><br><span class="line">\set guioptions =T &lt;Bar&gt;</span><br><span class="line">\set guioptions =m &lt;Bar&gt;</span><br><span class="line">\endif&lt;CR&gt;</span><br><span class="line">set guioptions-=m   &quot;Hide Menu</span><br><span class="line">set guioptions-=T   &quot;Hide Tool-Bar</span><br><span class="line">set guioptions-=r   &quot;hide right scroll</span><br><span class="line">set guioptions-=b   &quot;hide buttom scoll</span><br><span class="line">set guioptions-=L   &quot;hide left scroll</span><br></pre></td></tr></table></figure><h3 id="设置相对行号"><a class="header-anchor" href="#设置相对行号">¶</a>设置相对行号</h3><p>尽管我觉得这个很不好用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set number</span><br><span class="line">set relativenumber</span><br></pre></td></tr></table></figure><h3 id="突出显示选中的字符所在行列"><a class="header-anchor" href="#突出显示选中的字符所在行列">¶</a>突出显示选中的字符所在行列</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set cursorline</span><br><span class="line">set cursorcolumn</span><br></pre></td></tr></table></figure><h3 id="自动换行"><a class="header-anchor" href="#自动换行">¶</a>自动换行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set wrap</span><br></pre></td></tr></table></figure><h3 id="显示输入的命令-右下角"><a class="header-anchor" href="#显示输入的命令-右下角">¶</a>显示输入的命令(右下角)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set showcmd</span><br></pre></td></tr></table></figure><h3 id="输入命令的时候Tab显示提示"><a class="header-anchor" href="#输入命令的时候Tab显示提示">¶</a>输入命令的时候Tab显示提示</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set wildmenu</span><br></pre></td></tr></table></figure><h3 id="智能查找-高亮显示结果"><a class="header-anchor" href="#智能查找-高亮显示结果">¶</a>智能查找 高亮显示结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set hlsearch</span><br><span class="line">exec &quot;nohlsearch&quot;</span><br><span class="line">set incsearch</span><br><span class="line">set ignorecase</span><br><span class="line">set smartcase</span><br></pre></td></tr></table></figure><h3 id="设置前缀建"><a class="header-anchor" href="#设置前缀建">¶</a>设置前缀建</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let mapleader = &quot;\&lt;space&gt;&quot;</span><br></pre></td></tr></table></figure><h3 id="复制粘贴到系统剪贴板"><a class="header-anchor" href="#复制粘贴到系统剪贴板">¶</a>复制粘贴到系统剪贴板</h3><p>注意的是我们的y和p只能在vim内部复制粘贴，想要复制粘贴到系统剪贴板需要用另一个命令，我把他换为<leader>+y,然后与y使用无异</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vnoremap &lt;Leader&gt;y &quot;+y</span><br><span class="line">nmap &lt;Leader&gt;p &quot;+p</span><br></pre></td></tr></table></figure><p>也就是说这边的应该为<code>空格+y</code>组合成复制粘贴到系统剪切板</p><h3 id="快捷保存-刷新"><a class="header-anchor" href="#快捷保存-刷新">¶</a>快捷保存 刷新</h3><p>这里用S保存但是要声明不适用于s</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">map S : w&lt;CR&gt;</span><br><span class="line">map s &lt;nop&gt;</span><br><span class="line">map Q :q&lt;CR&gt;</span><br><span class="line">map R :source $MYVIMRC&lt;CR&gt;</span><br><span class="line">noremap &lt;LEADER&gt;&lt;CR&gt;  :nohlsearch&lt;CR&gt;</span><br></pre></td></tr></table></figure><h3 id="设置分屏"><a class="header-anchor" href="#设置分屏">¶</a>设置分屏</h3><p>Vim下可以将窗口分为很多部分方便多代码同时调试，可以向上左下右扩展，但是命令有点长，我们直接写快捷键,sp+h/j/k/l就是分别向四个方向扩展</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">map spl :set splitright&lt;CR&gt;:vsplit&lt;CR&gt;</span><br><span class="line">map sph :set nosplitright&lt;CR&gt;:vsplit&lt;CR&gt;</span><br><span class="line">map spj :set splitbelow&lt;CR&gt;:split&lt;CR&gt;</span><br><span class="line">map spk :set nosplitbelow&lt;CR&gt;:split&lt;CR&gt;</span><br></pre></td></tr></table></figure><p>然后我们需要将光标在多个窗口间移动，设置快捷键，Alt+h/j/k/l是向四个方向移动光标</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">map &lt;A-h&gt; &lt;C-w&gt;h</span><br><span class="line">map &lt;A-j&gt; &lt;C-w&gt;j</span><br><span class="line">map &lt;A-k&gt; &lt;C-w&gt;k</span><br><span class="line">map &lt;A-l&gt; &lt;C-w&gt;l</span><br></pre></td></tr></table></figure><p>调整所在窗口的大小,Alt++/_是水平+/-,Alt±/=是垂直的,自己看下在键盘上的位置就知道了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">map &lt;A-=&gt; :vertical resize+5 &lt;CR&gt; </span><br><span class="line">map &lt;A--&gt; :vertical resize-5 &lt;CR&gt; </span><br><span class="line">map &lt;A-+&gt; :resize+5 &lt;CR&gt; </span><br><span class="line">map &lt;A-_&gt; :resize-5 &lt;CR&gt; </span><br></pre></td></tr></table></figure><p>转置窗口，左右边上下，上下变左右</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">map sv &lt;C-w&gt;t&lt;c-W&gt;H</span><br><span class="line">map sv &lt;C-w&gt;t&lt;c-W&gt;K</span><br></pre></td></tr></table></figure><h3 id="增加删除tabe标签"><a class="header-anchor" href="#增加删除tabe标签">¶</a>增加删除tabe标签</h3><p>Tabe是Vim中相当于浏览器的tab一样的东西分别是增加2，切换2，移动*2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">map tu :tabe&lt;CR&gt;</span><br><span class="line">map tc :tabc&lt;CR&gt;</span><br><span class="line">map tp :-tabnext&lt;CR&gt;</span><br><span class="line">map tn :+tabnext&lt;CR&gt;</span><br><span class="line">map tmn :-tabmove&lt;CR&gt;</span><br><span class="line">map tmi :+tabmove&lt;CR&gt;</span><br></pre></td></tr></table></figure><h3 id="插入模式移动光标"><a class="header-anchor" href="#插入模式移动光标">¶</a>插入模式移动光标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inoremap &lt;C-l&gt; &lt;Right&gt;</span><br></pre></td></tr></table></figure><h2 id="插件安装"><a class="header-anchor" href="#插件安装">¶</a>插件安装</h2><h3 id="插件管理器"><a class="header-anchor" href="#插件管理器">¶</a>插件管理器</h3><p>我选择的是vim-plugin，使用git克隆插件管理器github仓库，仓库主页：<a href="https://github.com/junegunn/vim-plug">junegunn/vim-plug: Minimalist Vim Plugin Manager (github.com)</a>，克隆地址：<a href="https://github.com/junegunn/vim-plug.git">https://github.com/junegunn/vim-plug.git</a></p><p>下载好之后在里面找到以下文件(<code>plug.vim</code>)并放到vim安装目录下</p><p>路径格式如下：[<font color='cornflowerblue'>vim安装根目录/vim82/autoload/</font>]</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210708234718.png" alt="我的plug.vim所在目录"></p><p>到目前为止，已经安装好插件管理器了，以下为你介绍vim插件如何安装</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/20210708233232.png&quot; alt=&quot;Gvim&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Software" scheme="https://conquerorlei.github.io/categories/Software/"/>
    
    <category term="Vim" scheme="https://conquerorlei.github.io/categories/Software/Vim/"/>
    
    
    <category term="Gvim" scheme="https://conquerorlei.github.io/tags/Gvim/"/>
    
    <category term="Vim" scheme="https://conquerorlei.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="https://conquerorlei.github.io/posts/48230/"/>
    <id>https://conquerorlei.github.io/posts/48230/</id>
    <published>2021-06-29T06:19:39.626Z</published>
    <updated>2021-08-21T14:41:42.095Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210629160414.png" alt="ubuntu系统"></p><span id="more"></span><h1>Linux系统指令以及快捷键</h1><h2 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h2><p>程序员职业生涯中少不了使用Linux系统，掌握一部分常用的Linux快捷键以及了解Linux命令行常用指令将会使你的工作事半功倍。以下为个人对经常使用的指令的总结，持续更新。</p><p>本文以ubuntu20.04作为操作版本进行操作，获取的截图都是ubuntu20.04系统下的。</p><h2 id="Linux文件系统目录结构"><a class="header-anchor" href="#Linux文件系统目录结构">¶</a>Linux文件系统目录结构</h2><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>/bin</td><td>可执行程序</td></tr><tr><td>/dev</td><td>块、字符设备结点文件</td></tr><tr><td>/etc</td><td>主要配置文件和初始化配置文件</td></tr><tr><td>/lib</td><td>基本的库文件，如：C库，内核模块(modules)</td></tr><tr><td>/mnt</td><td>挂载点，临时挂载文件系统用</td></tr><tr><td>/opt</td><td>附加的软件包</td></tr><tr><td>/proc</td><td>虚拟文件系统，用于内核与进程通信</td></tr><tr><td>/sbin</td><td>基本的系统管理程序</td></tr><tr><td>/tmp</td><td>临时文件目录</td></tr><tr><td>/usr</td><td>更多的用户程序，包括“X Server”</td></tr><tr><td>/sys</td><td>虚拟文件系统sysfs挂载点</td></tr><tr><td>/var</td><td>可变信息存储，如log等</td></tr></tbody></table><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210629154641.png" alt="Ubuntus20.04目录结构"></p><div class="note primary"><blockquote><p>大致上，ubuntu的文件目录结构基本是没有什么大的变化的，但是不同版本之间可能会有一些不同，例如，ubuntu20.04将lib文件夹分割为32和64的库文件以及公用部分lib。</p></blockquote></div><h2 id="Linux操作"><a class="header-anchor" href="#Linux操作">¶</a>Linux操作</h2><h3 id="bash快捷键"><a class="header-anchor" href="#bash快捷键">¶</a>bash快捷键</h3><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Ctrl+Alt+T</td><td>打开Terminal</td></tr><tr><td>Ctrl+‘+’</td><td>字体放大</td></tr><tr><td>Ctrl+‘-’</td><td>字体缩小</td></tr><tr><td>Ctrl+L</td><td>清屏</td></tr><tr><td>TAB</td><td>双击TAB将列出包含当前指令的命令</td></tr><tr><td>Ctrl+C</td><td>终端当前正在执行的指令(经常在进入到root之后)</td></tr></tbody></table><h3 id="Bash内部命令"><a class="header-anchor" href="#Bash内部命令">¶</a>Bash内部命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">History #显示历史命令</span><br><span class="line">history -c #清除历史命令</span><br><span class="line">History -w #保存历史命令道HISTFILE</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">Alias#</span><span class="bash">显示全部命令别名</span></span><br><span class="line">alias l=“ls -la”#赋予l ls -la含义</span><br><span class="line">unalias l #删除别名l</span><br><span class="line"></span><br><span class="line">echo ”I love u“ #屏幕输出，，，，</span><br><span class="line">export HELLO = &quot;HELLO WORLD&quot; #定义当前用户环境变量</span><br><span class="line">env #显示环境变量</span><br><span class="line">source #执行环境变量</span><br><span class="line">pwd #显示当前所在目录</span><br></pre></td></tr></table></figure><h3 id="部分系统命令"><a class="header-anchor" href="#部分系统命令">¶</a>部分系统命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dmesg   #启动日志</span><br><span class="line">uptime #用户登录信息，系统使用时间</span><br><span class="line">uname -a #显示系统信息</span><br><span class="line">df -T      #挂载分区使用情况</span><br></pre></td></tr></table></figure><h3 id="网络命令"><a class="header-anchor" href="#网络命令">¶</a>网络命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">netstat -tnlp #显示处于坚挺状态的TCP端口</span><br><span class="line">netstat -unlp #显示处于坚挺状态的UDP端口</span><br><span class="line">ifconfig #显示网卡参数</span><br><span class="line">ethtool eth0</span><br><span class="line">ifconfig eth1 add 192.168.0.1 up #配置eth1的Ip地址并使用</span><br><span class="line">ifup eht0 #启用</span><br><span class="line">ifdown #禁用</span><br><span class="line">ping 192.168.0.111 #向另一条计算机监测网络是否通信正常</span><br><span class="line">ping www.baidu.com</span><br><span class="line">route #显示路由表</span><br><span class="line">route add -net 192.168.1.0 netmask 225.225.225.0 gw 10.2.11</span><br><span class="line">#添加一条达到192.168.1.0网段的路由</span><br><span class="line">traceroute www.baidu.com #追综达到baidu的路由地址</span><br></pre></td></tr></table></figure><h3 id="安装包管理"><a class="header-anchor" href="#安装包管理">¶</a>安装包管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l #列出已经安装的全部软件包</span><br><span class="line">dpkg -l *vim* #列出包含vim字符的所有安装了的软件包</span><br><span class="line">dpkg -L vim #列出vim的文件</span><br><span class="line">dpkg -S file #查看文件夹中安装的软件包</span><br><span class="line">dpkg -i xxx.deb #安装软件包</span><br><span class="line">apt-cache search open #搜寻包含名字含有open的软件宝</span><br><span class="line">apt-file search file #搜寻file中包含的软件包</span><br><span class="line">apt-cache show openssh #展示软件openssh的发行信息</span><br><span class="line">apt-get install vim zip #安装vim，Zip两个软件</span><br><span class="line">apt-get --reinstall     #重新安装</span><br><span class="line">apt-get remove   #卸载但是保留配置信息</span><br><span class="line">apt-get purge #卸载并删除配置信息</span><br><span class="line">apt-get update #更新或者更改源信息后必须执行：同步源索引文件到本地（root权限）</span><br><span class="line">apt-get upgrade #全面升级（root权限）</span><br><span class="line">apt-get source vim #查看vim源代码</span><br><span class="line">apt-get build-dep  vim #构建编译vim所需环境</span><br><span class="line">apkg -buildpackage -rfakeroot #编译并生成软件</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a class="header-anchor" href="#常用命令">¶</a>常用命令</h3><h4 id="关机和重启"><a class="header-anchor" href="#关机和重启">¶</a>关机和重启</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> shutdown</span></span><br><span class="line">shutdown -h now #立即关机</span><br><span class="line">shutdown -h 10  #&quot;10分钟后关机&quot; </span><br><span class="line">shutdown -c #取消</span><br><span class="line">Shutdown -r 16:30 #指定时间重启</span><br><span class="line">shutdown -h 16:30 #指定时间关机</span><br><span class="line"></span><br><span class="line">reboot #立即重启</span><br><span class="line"></span><br><span class="line">halt poweroff #暴力关机</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sync和shutdown同时使用可能会好一些</span></span><br><span class="line">sync #磁盘高速缓存内容同步到磁盘</span><br><span class="line">Systemctl hibernate #进入睡眠</span><br></pre></td></tr></table></figure><h4 id="查看系统信息和历史命令"><a class="header-anchor" href="#查看系统信息和历史命令">¶</a>查看系统信息和历史命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname</span><br><span class="line">uname -r</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><p><strong>历史命令查看与管理</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history</span><br><span class="line">history -c</span><br><span class="line">history -s</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210629170332.png" alt="系统信息和历史命令"></p><h4 id="查看当前用户"><a class="header-anchor" href="#查看当前用户">¶</a>查看当前用户</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami#who am i 我是谁</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210629172431.png" alt="查看当前用户"></p><h4 id="查看目录下的内容"><a class="header-anchor" href="#查看目录下的内容">¶</a>查看目录下的内容</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls #查看简略信息</span><br><span class="line">ls -l #查看详细信息</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210629172726.png" alt="ls命令"></p><h4 id="路径命令"><a class="header-anchor" href="#路径命令">¶</a>路径命令</h4><h5 id="改变路径"><a class="header-anchor" href="#改变路径">¶</a>改变路径</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd 指定路径#跳转到指定路径</span><br><span class="line">cd 回车 #跳转到根目录</span><br><span class="line">cd .. #回到上一层</span><br></pre></td></tr></table></figure><div class="note primary"><blockquote><p>cd全称change directory，表示更改路径</p></blockquote></div><h5 id="查看当前路径"><a class="header-anchor" href="#查看当前路径">¶</a>查看当前路径</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd#查看当前路径</span><br></pre></td></tr></table></figure><h4 id="文件相关命令"><a class="header-anchor" href="#文件相关命令">¶</a>文件相关命令</h4><h5 id="文件夹命令"><a class="header-anchor" href="#文件夹命令">¶</a>文件夹命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建文件夹</span></span><br><span class="line">mkdir &#123;文件夹名称&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">删除文件夹</span></span><br><span class="line">rmdir &#123;文件夹名称&#125;</span><br></pre></td></tr></table></figure><h5 id="创建文件命令"><a class="header-anchor" href="#创建文件命令">¶</a>创建文件命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch 1.c   #新建一个空文件1.c</span><br><span class="line">touch 1.c   #该文件夹已有1.c ， 改变1.c的时间戳</span><br></pre></td></tr></table></figure><h5 id="拷贝文件命令"><a class="header-anchor" href="#拷贝文件命令">¶</a>拷贝文件命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /mnt/hgfs/arm-test/stack.c  .     #拷贝其他目录下的stack.c 到当前目录 </span><br></pre></td></tr></table></figure><h5 id="移动文件命令"><a class="header-anchor" href="#移动文件命令">¶</a>移动文件命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir testdir#创建文件夹testdir</span><br><span class="line"># 格式 mv &#123;文件名&#125; &#123;文件夹名称&#125;</span><br><span class="line">mv   1.c  testdir   #移动1.c 到文件夹 testdir</span><br><span class="line">cd   testdir</span><br><span class="line"># 格式 mv &#123;文件名称&#125; &#123;更改后的文件名称&#125;</span><br><span class="line">mv  1.c  2.c  #改名1.c  为 2.c</span><br></pre></td></tr></table></figure><h5 id="移除文件或者目录"><a class="header-anchor" href="#移除文件或者目录">¶</a>移除文件或者目录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm  1.c   #删除1.c</span><br><span class="line">cd .. </span><br><span class="line">rm -rf testdir  #删除一个文件夹 </span><br></pre></td></tr></table></figure><h5 id="更改文件权限命令"><a class="header-anchor" href="#更改文件权限命令">¶</a>更改文件权限命令</h5><p>Chmod命令主要用于修改、设置文件权限</p><p>chmod 修改文件权限主要有两种方式： 字母法与数字法</p><p>虽然数字法相对字母法简单，但是数字法是基于字母法，所以这里先介绍字母法。</p><h6 id="字母法：chmod-u-g-o-a-r-w-x-文件名"><a class="header-anchor" href="#字母法：chmod-u-g-o-a-r-w-x-文件名">¶</a>字母法：chmod  (u g o a)   (+ - =)   (r w x)   (文件名)</h6><p>以上是chmod的用法，每个括号是一个参数， 前三个括号主要放在一起使用即 chmod + 设置模式 + 文件名；下面先介绍这些参数的意义：</p><p>[u g o a]含义uuser 表示该文件的所有者ggroup 表示与该文件的所有者属于同一组( group )者，即用户组oother 表示其它用户组aall 表示这三者皆是</p><p>[+  -  =]含义</p><ul><li>[-] 增加权限</li></ul><ul><li>[+] 撤销权限</li><li>[=] 设定权限</li></ul><p>[r   w   x]含义rread 表示可读取，对于一个目录，如果没有r权限，那么就意味着不能通过ls查看这个目录的内容。wwrite 表示可写入，对于一个目录，如果没有w权限，那么就意味着不能在目录下创建新的文件。xexcute 表示可执行，对于一个目录，如果没有x权限，那么就意味着不能通过cd进入这个目录。</p><p>**用法：**chmod + 设置模式 + 文件名中间的设置模式，要分别对u(user), g(group), o(other)设置权限。</p><p>chmod u+rwx, g+rwx, o+rwx filename 改命令说明对filename文件， 赋予user、group、other均有read、write、excute的权限所以设置模式中应该包含对三种用户类型的权限设置，各自独立，互不影响。</p><p><strong>举例说明：</strong></p><p>chmod u+rw filename   说明对于filname, 只赋予user用户, read、write权限chmod u+rwx, g+rw  filename  说明对filename，赋予user用户read、write、excute权限；赋予group用户read、write权限</p><blockquote><p>（chmod + 设置模式 + 文件名）    设置模式中包含对三种类型用户（u、g、o）的权限设置，这三者各自独立，互不干扰。</p></blockquote><h6 id="数字法"><a class="header-anchor" href="#数字法">¶</a>数字法</h6><p>数字法是基于字母法的表示，如果字母法懂了，数字法就好懂，并且易于使用。</p><p>**用法：**chmod + 数字组合 + 文件名数字组合一般包含三个数字：</p><p>第一个数字对应字母法的用户u（user）</p><p>第二个数字对应字母法的用户g（group）</p><p>第三个数字对应字母法的用户o（other）</p><p><strong>另外：</strong></p><p>r  (read)     ----------------&gt;   4</p><p>w (write)    ----------------&gt;   2</p><p>x (excute)  ----------------&gt;   1</p><p><strong>示例详解：</strong></p><p>数字法：chmod  777   文件名   &lt;-----------对应--------------&gt;    字母法： chmod u+rwx, g+rwx, o+rwx  文件名</p><p>第一个数字7：代表用户 u 的权限 rwx， 4 ® + 2 (w) + 1 (x) =  7</p><p>第二个数字7：代表用户 g 的权限 rwx,    4 ® + 2 (w) + 1 (x) =  7</p><p>第三个数字7：代表用户 o 的权限 rwx,    4 ® + 2 (w) + 1 (x) =  7</p><p><strong>举例说明：</strong></p><p>数字法：chmod  755 filename    对应    字母法： chmod u+rwx, g+rx, o+rx filename数字法：chmod  751 filename    对应    字母法： chmod u+rwx, g+rx, o+x  filename数字法：chmod  765 filename    对应    字母法： chmod u+rwx, g+rw, o+rx filename</p><h4 id="打包命令"><a class="header-anchor" href="#打包命令">¶</a>打包命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf ../test.gz ./*  #打包当前目录所有文件， 生成包 ， 包是上级目录下的test.gz </span><br><span class="line">tar zxvf ../test.gz .    #解包上级目录下的test.gz ， 解包到当前目录 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">z ----------- 有压缩功能</span><br><span class="line">c ----------- create 产生文件包</span><br><span class="line">x ----------- extract 解包文件 </span><br><span class="line">v ----------- 打包或解包， 可以看到过程 </span><br></pre></td></tr></table></figure><p>到目前为止，常用的Linux快捷键以及命令行命令已经总结结束啦！</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/20210629160414.png&quot; alt=&quot;ubuntu系统&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://conquerorlei.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://conquerorlei.github.io/tags/Linux/"/>
    
    <category term="Terminal" scheme="https://conquerorlei.github.io/tags/Terminal/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot框架搭建</title>
    <link href="https://conquerorlei.github.io/posts/22603/"/>
    <id>https://conquerorlei.github.io/posts/22603/</id>
    <published>2021-06-28T08:12:11.000Z</published>
    <updated>2021-08-21T14:41:42.096Z</updated>
    
    
    
    
    <category term="FrameWork" scheme="https://conquerorlei.github.io/categories/FrameWork/"/>
    
    <category term="SpringBoot" scheme="https://conquerorlei.github.io/categories/FrameWork/SpringBoot/"/>
    
    
    <category term="SpringBoot" scheme="https://conquerorlei.github.io/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Spring是什么</title>
    <link href="https://conquerorlei.github.io/posts/46178/"/>
    <id>https://conquerorlei.github.io/posts/46178/</id>
    <published>2021-06-28T07:53:47.000Z</published>
    <updated>2021-08-21T14:41:42.101Z</updated>
    
    <content type="html"><![CDATA[<h1>前言</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
</summary>
      
    
    
    
    <category term="FrameWork" scheme="https://conquerorlei.github.io/categories/FrameWork/"/>
    
    <category term="Spring" scheme="https://conquerorlei.github.io/categories/FrameWork/Spring/"/>
    
    
    <category term="Spring" scheme="https://conquerorlei.github.io/tags/Spring/"/>
    
    <category term="LOC" scheme="https://conquerorlei.github.io/tags/LOC/"/>
    
    <category term="DI" scheme="https://conquerorlei.github.io/tags/DI/"/>
    
  </entry>
  
  <entry>
    <title>markdown表情总结</title>
    <link href="https://conquerorlei.github.io/posts/26923/"/>
    <id>https://conquerorlei.github.io/posts/26923/</id>
    <published>2021-06-14T12:35:26.000Z</published>
    <updated>2021-08-21T14:41:42.128Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210803001752.jpeg" alt="emoji"></p><span id="more"></span><h1>Markdown表情总结</h1><h2 id="如何在Markdown中使用表情"><a class="header-anchor" href="#如何在Markdown中使用表情">¶</a>如何在Markdown中使用表情</h2><ol><li>以下网站包含了大量的Emoji表情，可以在写Markdown时插入一些表情，使得文章更加有趣。</li><li><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">表情网站</a></li><li>语法  （Markdown中插入的表情符号格式是由冒号开始，冒号结尾。<code>:white_check_mark:</code>✅</li></ol><h2 id="如何在Hexo主题中使用Emoji表情"><a class="header-anchor" href="#如何在Hexo主题中使用Emoji表情">¶</a>如何在Hexo主题中使用Emoji表情</h2><p>写博客的时候发现有些内容不能很好的通过文字表达出来，这时候就需要表情的支持了。所以就研究了一下怎么在博客中加入emoji表情。网上有很多支持emoji的插件，但是都需要在浏览器端进行处理，考虑到使用的JS库已经够多了，所以尽量还是让Hexo提前渲染为好。</p><h3 id="修改Hexo渲染器"><a class="header-anchor" href="#修改Hexo渲染器">¶</a>修改Hexo渲染器</h3><p>Hexo默认的markdown渲染插件是<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>，也就是marked渲染器的Hexo版本，这个渲染器不支持插件扩展。在PR中也提到了要支持emoji，但是却迟迟没有marge进来。然后就是另外一个markdown渲染器<a href="https://github.com/celsomiranda/hexo-renderer-markdown-it">hexo-renderer-markdown-it</a>，这个渲染器支持插件配置可以使用<a href="https://github.com/markdown-it/markdown-it-emoji">markdown-it-emoji</a>插件来支持emoji。我们要将原来的markdown渲染器换成这个。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210626002550.png" alt="执行npm命令"></p><h3 id="安装Emoji插件"><a class="header-anchor" href="#安装Emoji插件">¶</a>安装Emoji插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210626002829.png" alt="安装Emoji插件"></p><h3 id="修改配置文件使Hexo兼容"><a class="header-anchor" href="#修改配置文件使Hexo兼容">¶</a>修改配置文件使Hexo兼容</h3><p>修改的是Hexo的配置文件哦，也就是根目录下的配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure><h2 id="表情列表"><a class="header-anchor" href="#表情列表">¶</a>表情列表</h2><h3 id="人物"><a class="header-anchor" href="#人物">¶</a>人物</h3><table><thead><tr><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th></tr></thead><tbody><tr><td style="text-align:center"><code>:bowtie:</code></td><td style="text-align:center">:bowtie:</td><td style="text-align:center"><code>:smile:</code></td><td style="text-align:center">😄</td><td style="text-align:center"><code>:laughing:</code></td><td style="text-align:center">😆</td></tr><tr><td style="text-align:center"><code>:blush:</code></td><td style="text-align:center">😊</td><td style="text-align:center"><code>:smiley:</code></td><td style="text-align:center">😃</td><td style="text-align:center"><code>:relaxed:</code></td><td style="text-align:center">☺️</td></tr><tr><td style="text-align:center"><code>:smirk:</code></td><td style="text-align:center">😏</td><td style="text-align:center"><code>:heart_eyes:</code></td><td style="text-align:center">😍</td><td style="text-align:center"><code>:kissing_heart:</code></td><td style="text-align:center">😘</td></tr><tr><td style="text-align:center"><code>:kissing_closed_eyes:</code></td><td style="text-align:center">😚</td><td style="text-align:center"><code>:flushed:</code></td><td style="text-align:center">😳</td><td style="text-align:center"><code>:relieved:</code></td><td style="text-align:center">😌</td></tr><tr><td style="text-align:center"><code>:satisfied:</code></td><td style="text-align:center">😆</td><td style="text-align:center"><code>:grin:</code></td><td style="text-align:center">😁</td><td style="text-align:center"><code>:wink:</code></td><td style="text-align:center">😉</td></tr><tr><td style="text-align:center"><code>:stuck_out_tongue_winking_eye:</code></td><td style="text-align:center">😜</td><td style="text-align:center"><code>:stuck_out_tongue_closed_eyes:</code></td><td style="text-align:center">😝</td><td style="text-align:center"><code>:grinning:</code></td><td style="text-align:center">😀</td></tr><tr><td style="text-align:center"><code>:kissing:</code></td><td style="text-align:center">😗</td><td style="text-align:center"><code>:kissing_smiling_eyes:</code></td><td style="text-align:center">😙</td><td style="text-align:center"><code>:stuck_out_tongue:</code></td><td style="text-align:center">😛</td></tr><tr><td style="text-align:center"><code>:sleeping:</code></td><td style="text-align:center">😴</td><td style="text-align:center"><code>:worried:</code></td><td style="text-align:center">😟</td><td style="text-align:center"><code>:frowning:</code></td><td style="text-align:center">😦</td></tr><tr><td style="text-align:center"><code>:anguished:</code></td><td style="text-align:center">😧</td><td style="text-align:center"><code>:open_mouth:</code></td><td style="text-align:center">😮</td><td style="text-align:center"><code>:grimacing:</code></td><td style="text-align:center">😬</td></tr><tr><td style="text-align:center"><code>:confused:</code></td><td style="text-align:center">😕</td><td style="text-align:center"><code>:hushed:</code></td><td style="text-align:center">😯</td><td style="text-align:center"><code>:expressionless:</code></td><td style="text-align:center">😑</td></tr><tr><td style="text-align:center"><code>:unamused:</code></td><td style="text-align:center">😒</td><td style="text-align:center"><code>:sweat_smile:</code></td><td style="text-align:center">😅</td><td style="text-align:center"><code>:sweat:</code></td><td style="text-align:center">😓</td></tr><tr><td style="text-align:center"><code>:disappointed_relieved:</code></td><td style="text-align:center">😥</td><td style="text-align:center"><code>:weary:</code></td><td style="text-align:center">😩</td><td style="text-align:center"><code>:pensive:</code></td><td style="text-align:center">😔</td></tr><tr><td style="text-align:center"><code>:disappointed:</code></td><td style="text-align:center">😞</td><td style="text-align:center"><code>:confounded:</code></td><td style="text-align:center">😖</td><td style="text-align:center"><code>:fearful:</code></td><td style="text-align:center">😨</td></tr><tr><td style="text-align:center"><code>:cold_sweat:</code></td><td style="text-align:center">😰</td><td style="text-align:center"><code>:persevere:</code></td><td style="text-align:center">😣</td><td style="text-align:center"><code>:cry:</code></td><td style="text-align:center">😢</td></tr><tr><td style="text-align:center"><code>:sob:</code></td><td style="text-align:center">😭</td><td style="text-align:center"><code>:joy:</code></td><td style="text-align:center">😂</td><td style="text-align:center"><code>:astonished:</code></td><td style="text-align:center">😲</td></tr><tr><td style="text-align:center"><code>:scream:</code></td><td style="text-align:center">😱</td><td style="text-align:center"><code>:neckbeard:</code></td><td style="text-align:center">:neckbeard:</td><td style="text-align:center"><code>:tired_face:</code></td><td style="text-align:center">😫</td></tr><tr><td style="text-align:center"><code>:angry:</code></td><td style="text-align:center">😠</td><td style="text-align:center"><code>:rage:</code></td><td style="text-align:center">😡</td><td style="text-align:center"><code>:triumph:</code></td><td style="text-align:center">😤</td></tr><tr><td style="text-align:center"><code>:sleepy:</code></td><td style="text-align:center">😪</td><td style="text-align:center"><code>:yum:</code></td><td style="text-align:center">😋</td><td style="text-align:center"><code>:mask:</code></td><td style="text-align:center">😷</td></tr><tr><td style="text-align:center"><code>:sunglasses:</code></td><td style="text-align:center">😎</td><td style="text-align:center"><code>:dizzy_face:</code></td><td style="text-align:center">😵</td><td style="text-align:center"><code>:imp:</code></td><td style="text-align:center">👿</td></tr><tr><td style="text-align:center"><code>:smiling_imp:</code></td><td style="text-align:center">😈</td><td style="text-align:center"><code>:neutral_face:</code></td><td style="text-align:center">😐</td><td style="text-align:center"><code>:no_mouth:</code></td><td style="text-align:center">😶</td></tr><tr><td style="text-align:center"><code>:innocent:</code></td><td style="text-align:center">😇</td><td style="text-align:center"><code>:alien:</code></td><td style="text-align:center">👽</td><td style="text-align:center"><code>:yellow_heart:</code></td><td style="text-align:center">💛</td></tr><tr><td style="text-align:center"><code>:blue_heart:</code></td><td style="text-align:center">💙</td><td style="text-align:center"><code>:purple_heart:</code></td><td style="text-align:center">💜</td><td style="text-align:center"><code>:heart:</code></td><td style="text-align:center">❤️</td></tr><tr><td style="text-align:center"><code>:green_heart:</code></td><td style="text-align:center">💚</td><td style="text-align:center"><code>:broken_heart:</code></td><td style="text-align:center">💔</td><td style="text-align:center"><code>:heartbeat:</code></td><td style="text-align:center">💓</td></tr><tr><td style="text-align:center"><code>:heartpulse:</code></td><td style="text-align:center">💗</td><td style="text-align:center"><code>:two_hearts:</code></td><td style="text-align:center">💕</td><td style="text-align:center"><code>:revolving_hearts:</code></td><td style="text-align:center">💞</td></tr><tr><td style="text-align:center"><code>:cupid:</code></td><td style="text-align:center">💘</td><td style="text-align:center"><code>:sparkling_heart:</code></td><td style="text-align:center">💖</td><td style="text-align:center"><code>:sparkles:</code></td><td style="text-align:center">✨</td></tr><tr><td style="text-align:center"><code>:star:</code></td><td style="text-align:center">⭐</td><td style="text-align:center"><code>:star2:</code></td><td style="text-align:center">🌟</td><td style="text-align:center"><code>:dizzy:</code></td><td style="text-align:center">💫</td></tr><tr><td style="text-align:center"><code>:boom:</code></td><td style="text-align:center">💥</td><td style="text-align:center"><code>:collision:</code></td><td style="text-align:center">💥</td><td style="text-align:center"><code>:anger:</code></td><td style="text-align:center">💢</td></tr><tr><td style="text-align:center"><code>:exclamation:</code></td><td style="text-align:center">❗</td><td style="text-align:center"><code>:question:</code></td><td style="text-align:center">❓</td><td style="text-align:center"><code>:grey_exclamation:</code></td><td style="text-align:center">❕</td></tr><tr><td style="text-align:center"><code>:grey_question:</code></td><td style="text-align:center">❔</td><td style="text-align:center"><code>:zzz:</code></td><td style="text-align:center">💤</td><td style="text-align:center"><code>:dash:</code></td><td style="text-align:center">💨</td></tr><tr><td style="text-align:center"><code>:sweat_drops:</code></td><td style="text-align:center">💦</td><td style="text-align:center"><code>:notes:</code></td><td style="text-align:center">🎶</td><td style="text-align:center"><code>:musical_note:</code></td><td style="text-align:center">🎵</td></tr><tr><td style="text-align:center"><code>:fire:</code></td><td style="text-align:center">🔥</td><td style="text-align:center"><code>:hankey:</code></td><td style="text-align:center">💩</td><td style="text-align:center"><code>:poop:</code></td><td style="text-align:center">💩</td></tr><tr><td style="text-align:center"><code>::</code></td><td style="text-align:center">💩</td><td style="text-align:center"><code>:+1:</code></td><td style="text-align:center">👍</td><td style="text-align:center"><code>:thumbsup:</code></td><td style="text-align:center">👍</td></tr><tr><td style="text-align:center"><code>:-1:</code></td><td style="text-align:center">👎</td><td style="text-align:center"><code>:thumbsdown:</code></td><td style="text-align:center">👎</td><td style="text-align:center"><code>:ok_hand:</code></td><td style="text-align:center">👌</td></tr><tr><td style="text-align:center"><code>:punch:</code></td><td style="text-align:center">👊</td><td style="text-align:center"><code>:facepunch:</code></td><td style="text-align:center">👊</td><td style="text-align:center"><code>:fist:</code></td><td style="text-align:center">✊</td></tr><tr><td style="text-align:center"><code>:v:</code></td><td style="text-align:center">✌️</td><td style="text-align:center"><code>:wave:</code></td><td style="text-align:center">👋</td><td style="text-align:center"><code>:hand:</code></td><td style="text-align:center">✋</td></tr><tr><td style="text-align:center"><code>:raised_hand:</code></td><td style="text-align:center">✋</td><td style="text-align:center"><code>:open_hands:</code></td><td style="text-align:center">👐</td><td style="text-align:center"><code>:point_up:</code></td><td style="text-align:center">☝️</td></tr><tr><td style="text-align:center"><code>:point_down:</code></td><td style="text-align:center">👇</td><td style="text-align:center"><code>:point_left:</code></td><td style="text-align:center">👈</td><td style="text-align:center"><code>:point_right:</code></td><td style="text-align:center">👉</td></tr><tr><td style="text-align:center"><code>:raised_hands:</code></td><td style="text-align:center">🙌</td><td style="text-align:center"><code>:pray:</code></td><td style="text-align:center">🙏</td><td style="text-align:center"><code>:point_up_2:</code></td><td style="text-align:center">👆</td></tr><tr><td style="text-align:center"><code>:clap:</code></td><td style="text-align:center">👏</td><td style="text-align:center"><code>:muscle:</code></td><td style="text-align:center">💪</td><td style="text-align:center"><code>:metal:</code></td><td style="text-align:center">🤘</td></tr><tr><td style="text-align:center"><code>:fu:</code></td><td style="text-align:center">🖕</td><td style="text-align:center"><code>:walking:</code></td><td style="text-align:center">🚶</td><td style="text-align:center"><code>:runner:</code></td><td style="text-align:center">🏃</td></tr><tr><td style="text-align:center"><code>:running:</code></td><td style="text-align:center">🏃</td><td style="text-align:center"><code>:couple:</code></td><td style="text-align:center">👫</td><td style="text-align:center"><code>:family:</code></td><td style="text-align:center">👪</td></tr><tr><td style="text-align:center"><code>:two_men_holding_hands:</code></td><td style="text-align:center">👬</td><td style="text-align:center"><code>:two_women_holding_hands:</code></td><td style="text-align:center">👭</td><td style="text-align:center"><code>:dancer:</code></td><td style="text-align:center">💃</td></tr><tr><td style="text-align:center"><code>:dancers:</code></td><td style="text-align:center">👯</td><td style="text-align:center"><code>:ok_woman:</code></td><td style="text-align:center">🙆‍♀️</td><td style="text-align:center"><code>:no_good:</code></td><td style="text-align:center">🙅</td></tr><tr><td style="text-align:center"><code>:information_desk_person:</code></td><td style="text-align:center">💁</td><td style="text-align:center"><code>:raising_hand:</code></td><td style="text-align:center">🙋</td><td style="text-align:center"><code>:bride_with_veil:</code></td><td style="text-align:center">👰‍♀️</td></tr><tr><td style="text-align:center"><code>:person_with_pouting_face:</code></td><td style="text-align:center">🙎</td><td style="text-align:center"><code>:person_frowning:</code></td><td style="text-align:center">🙍</td><td style="text-align:center"><code>:bow:</code></td><td style="text-align:center">🙇</td></tr><tr><td style="text-align:center"><code>:couplekiss:</code></td><td style="text-align:center">💏</td><td style="text-align:center"><code>:couple_with_heart:</code></td><td style="text-align:center">💑</td><td style="text-align:center"><code>:massage:</code></td><td style="text-align:center">💆</td></tr><tr><td style="text-align:center"><code>:haircut:</code></td><td style="text-align:center">💇</td><td style="text-align:center"><code>:nail_care:</code></td><td style="text-align:center">💅</td><td style="text-align:center"><code>:boy:</code></td><td style="text-align:center">👦</td></tr><tr><td style="text-align:center"><code>:girl:</code></td><td style="text-align:center">👧</td><td style="text-align:center"><code>:woman:</code></td><td style="text-align:center">👩</td><td style="text-align:center"><code>:man:</code></td><td style="text-align:center">👨</td></tr><tr><td style="text-align:center"><code>:baby:</code></td><td style="text-align:center">👶</td><td style="text-align:center"><code>:older_woman:</code></td><td style="text-align:center">👵</td><td style="text-align:center"><code>:older_man:</code></td><td style="text-align:center">👴</td></tr><tr><td style="text-align:center"><code>:person_with_blond_hair:</code></td><td style="text-align:center">👱</td><td style="text-align:center"><code>:man_with_gua_pi_mao:</code></td><td style="text-align:center">👲</td><td style="text-align:center"><code>:man_with_turban:</code></td><td style="text-align:center">👳‍♂️</td></tr><tr><td style="text-align:center"><code>:construction_worker:</code></td><td style="text-align:center">👷</td><td style="text-align:center"><code>:cop:</code></td><td style="text-align:center">👮</td><td style="text-align:center"><code>:angel:</code></td><td style="text-align:center">👼</td></tr><tr><td style="text-align:center"><code>:princess:</code></td><td style="text-align:center">👸</td><td style="text-align:center"><code>:smiley_cat:</code></td><td style="text-align:center">😺</td><td style="text-align:center"><code>:smile_cat:</code></td><td style="text-align:center">😸</td></tr><tr><td style="text-align:center"><code>:heart_eyes_cat:</code></td><td style="text-align:center">😻</td><td style="text-align:center"><code>:kissing_cat:</code></td><td style="text-align:center">😽</td><td style="text-align:center"><code>:smirk_cat:</code></td><td style="text-align:center">😼</td></tr><tr><td style="text-align:center"><code>:scream_cat:</code></td><td style="text-align:center">🙀</td><td style="text-align:center"><code>:crying_cat_face:</code></td><td style="text-align:center">😿</td><td style="text-align:center"><code>:joy_cat:</code></td><td style="text-align:center">😹</td></tr><tr><td style="text-align:center"><code>:pouting_cat:</code></td><td style="text-align:center">😾</td><td style="text-align:center"><code>:japanese_ogre:</code></td><td style="text-align:center">👹</td><td style="text-align:center"><code>:japanese_goblin:</code></td><td style="text-align:center">👺</td></tr><tr><td style="text-align:center"><code>:see_no_evil:</code></td><td style="text-align:center">🙈</td><td style="text-align:center"><code>:hear_no_evil:</code></td><td style="text-align:center">🙉</td><td style="text-align:center"><code>:speak_no_evil:</code></td><td style="text-align:center">🙊</td></tr><tr><td style="text-align:center"><code>:guardsman:</code></td><td style="text-align:center">💂‍♂️</td><td style="text-align:center"><code>:skull:</code></td><td style="text-align:center">💀</td><td style="text-align:center"><code>:feet:</code></td><td style="text-align:center">🐾</td></tr><tr><td style="text-align:center"><code>:lips:</code></td><td style="text-align:center">👄</td><td style="text-align:center"><code>:kiss:</code></td><td style="text-align:center">💋</td><td style="text-align:center"><code>:droplet:</code></td><td style="text-align:center">💧</td></tr><tr><td style="text-align:center"><code>:ear:</code></td><td style="text-align:center">👂</td><td style="text-align:center"><code>:eyes:</code></td><td style="text-align:center">👀</td><td style="text-align:center"><code>:nose:</code></td><td style="text-align:center">👃</td></tr><tr><td style="text-align:center"><code>:tongue:</code></td><td style="text-align:center">👅</td><td style="text-align:center"><code>:love_letter:</code></td><td style="text-align:center">💌</td><td style="text-align:center"><code>:bust_in_silhouette:</code></td><td style="text-align:center">👤</td></tr><tr><td style="text-align:center"><code>:busts_in_silhouette:</code></td><td style="text-align:center">👥</td><td style="text-align:center"><code>:speech_balloon:</code></td><td style="text-align:center">💬</td><td style="text-align:center"><code>:thought_balloon:</code></td><td style="text-align:center">💭</td></tr></tbody></table><h3 id="自然"><a class="header-anchor" href="#自然">¶</a>自然</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">syntax</td><td style="text-align:center">preview</td><td style="text-align:center">syntax</td><td style="text-align:center">preview</td><td style="text-align:center">syntax</td><td style="text-align:center">preview</td></tr><tr><td style="text-align:center"><code>:sunny:</code></td><td style="text-align:center">☀️</td><td style="text-align:center"><code>:umbrella:</code></td><td style="text-align:center">☔</td><td style="text-align:center"><code>:cloud:</code></td><td style="text-align:center">☁️</td></tr><tr><td style="text-align:center"><code>:snowflake:</code></td><td style="text-align:center">❄️</td><td style="text-align:center"><code>:snowman:</code></td><td style="text-align:center">⛄</td><td style="text-align:center"><code>:zap:</code></td><td style="text-align:center">⚡</td></tr><tr><td style="text-align:center"><code>:cyclone:</code></td><td style="text-align:center">🌀</td><td style="text-align:center"><code>:foggy:</code></td><td style="text-align:center">🌁</td><td style="text-align:center"><code>:ocean:</code></td><td style="text-align:center">🌊</td></tr><tr><td style="text-align:center"><code>:cat:</code></td><td style="text-align:center">🐱</td><td style="text-align:center"><code>:dog:</code></td><td style="text-align:center">🐶</td><td style="text-align:center"><code>:mouse:</code></td><td style="text-align:center">🐭</td></tr><tr><td style="text-align:center"><code>:hamster:</code></td><td style="text-align:center">🐹</td><td style="text-align:center"><code>:rabbit:</code></td><td style="text-align:center">🐰</td><td style="text-align:center"><code>:wolf:</code></td><td style="text-align:center">🐺</td></tr><tr><td style="text-align:center"><code>:frog:</code></td><td style="text-align:center">🐸</td><td style="text-align:center"><code>:tiger:</code></td><td style="text-align:center">🐯</td><td style="text-align:center"><code>:koala:</code></td><td style="text-align:center">🐨</td></tr><tr><td style="text-align:center"><code>:bear:</code></td><td style="text-align:center">🐻</td><td style="text-align:center"><code>:pig:</code></td><td style="text-align:center">🐷</td><td style="text-align:center"><code>:pig_nose:</code></td><td style="text-align:center">🐽</td></tr><tr><td style="text-align:center"><code>:cow:</code></td><td style="text-align:center">🐮</td><td style="text-align:center"><code>:boar:</code></td><td style="text-align:center">🐗</td><td style="text-align:center"><code>:monkey_face:</code></td><td style="text-align:center">🐵</td></tr><tr><td style="text-align:center"><code>:monkey:</code></td><td style="text-align:center">🐒</td><td style="text-align:center"><code>:horse:</code></td><td style="text-align:center">🐴</td><td style="text-align:center"><code>:racehorse:</code></td><td style="text-align:center">🐎</td></tr><tr><td style="text-align:center"><code>:camel:</code></td><td style="text-align:center">🐫</td><td style="text-align:center"><code>:sheep:</code></td><td style="text-align:center">🐑</td><td style="text-align:center"><code>:elephant:</code></td><td style="text-align:center">🐘</td></tr><tr><td style="text-align:center"><code>:panda_face:</code></td><td style="text-align:center">🐼</td><td style="text-align:center"><code>:snake:</code></td><td style="text-align:center">🐍</td><td style="text-align:center"><code>:bird:</code></td><td style="text-align:center">🐦</td></tr><tr><td style="text-align:center"><code>:baby_chick:</code></td><td style="text-align:center">🐤</td><td style="text-align:center"><code>:hatched_chick:</code></td><td style="text-align:center">🐥</td><td style="text-align:center"><code>:hatching_chick:</code></td><td style="text-align:center">🐣</td></tr><tr><td style="text-align:center"><code>:chicken:</code></td><td style="text-align:center">🐔</td><td style="text-align:center"><code>:penguin:</code></td><td style="text-align:center">🐧</td><td style="text-align:center"><code>:turtle:</code></td><td style="text-align:center">🐢</td></tr><tr><td style="text-align:center"><code>:bug:</code></td><td style="text-align:center">🐛</td><td style="text-align:center"><code>:honeybee:</code></td><td style="text-align:center">🐝</td><td style="text-align:center"><code>:ant:</code></td><td style="text-align:center">🐜</td></tr><tr><td style="text-align:center"><code>:beetle:</code></td><td style="text-align:center">🪲</td><td style="text-align:center"><code>:snail:</code></td><td style="text-align:center">🐌</td><td style="text-align:center"><code>:octopus:</code></td><td style="text-align:center">🐙</td></tr><tr><td style="text-align:center"><code>:tropical_fish:</code></td><td style="text-align:center">🐠</td><td style="text-align:center"><code>:fish:</code></td><td style="text-align:center">🐟</td><td style="text-align:center"><code>:whale:</code></td><td style="text-align:center">🐳</td></tr><tr><td style="text-align:center"><code>:whale2:</code></td><td style="text-align:center">🐋</td><td style="text-align:center"><code>:dolphin:</code></td><td style="text-align:center">🐬</td><td style="text-align:center"><code>:cow2:</code></td><td style="text-align:center">🐄</td></tr><tr><td style="text-align:center"><code>:ram:</code></td><td style="text-align:center">🐏</td><td style="text-align:center"><code>:rat:</code></td><td style="text-align:center">🐀</td><td style="text-align:center"><code>:water_buffalo:</code></td><td style="text-align:center">🐃</td></tr><tr><td style="text-align:center"><code>:tiger2:</code></td><td style="text-align:center">🐅</td><td style="text-align:center"><code>:rabbit2:</code></td><td style="text-align:center">🐇</td><td style="text-align:center"><code>:dragon:</code></td><td style="text-align:center">🐉</td></tr><tr><td style="text-align:center"><code>:goat:</code></td><td style="text-align:center">🐐</td><td style="text-align:center"><code>:rooster:</code></td><td style="text-align:center">🐓</td><td style="text-align:center"><code>:dog2:</code></td><td style="text-align:center">🐕</td></tr><tr><td style="text-align:center"><code>:pig2:</code></td><td style="text-align:center">🐖</td><td style="text-align:center"><code>:mouse2:</code></td><td style="text-align:center">🐁</td><td style="text-align:center"><code>:ox:</code></td><td style="text-align:center">🐂</td></tr><tr><td style="text-align:center"><code>:dragon_face:</code></td><td style="text-align:center">🐲</td><td style="text-align:center"><code>:blowfish:</code></td><td style="text-align:center">🐡</td><td style="text-align:center"><code>:crocodile:</code></td><td style="text-align:center">🐊</td></tr><tr><td style="text-align:center"><code>:dromedary_camel:</code></td><td style="text-align:center">🐪</td><td style="text-align:center"><code>:leopard:</code></td><td style="text-align:center">🐆</td><td style="text-align:center"><code>:cat2:</code></td><td style="text-align:center">🐈</td></tr><tr><td style="text-align:center"><code>:poodle:</code></td><td style="text-align:center">🐩</td><td style="text-align:center"><code>:paw_prints:</code></td><td style="text-align:center">🐾</td><td style="text-align:center"><code>:bouquet:</code></td><td style="text-align:center">💐</td></tr><tr><td style="text-align:center"><code>:cherry_blossom:</code></td><td style="text-align:center">🌸</td><td style="text-align:center"><code>:tulip:</code></td><td style="text-align:center">🌷</td><td style="text-align:center"><code>:four_leaf_clover:</code></td><td style="text-align:center">🍀</td></tr><tr><td style="text-align:center"><code>:rose:</code></td><td style="text-align:center">🌹</td><td style="text-align:center"><code>:sunflower:</code></td><td style="text-align:center">🌻</td><td style="text-align:center"><code>:hibiscus:</code></td><td style="text-align:center">🌺</td></tr><tr><td style="text-align:center"><code>:maple_leaf:</code></td><td style="text-align:center">🍁</td><td style="text-align:center"><code>:leaves:</code></td><td style="text-align:center">🍃</td><td style="text-align:center"><code>:fallen_leaf:</code></td><td style="text-align:center">🍂</td></tr><tr><td style="text-align:center"><code>:herb:</code></td><td style="text-align:center">🌿</td><td style="text-align:center"><code>:mushroom:</code></td><td style="text-align:center">🍄</td><td style="text-align:center"><code>:cactus:</code></td><td style="text-align:center">🌵</td></tr><tr><td style="text-align:center"><code>:palm_tree:</code></td><td style="text-align:center">🌴</td><td style="text-align:center"><code>:evergreen_tree:</code></td><td style="text-align:center">🌲</td><td style="text-align:center"><code>:deciduous_tree:</code></td><td style="text-align:center">🌳</td></tr><tr><td style="text-align:center"><code>:chestnut:</code></td><td style="text-align:center">🌰</td><td style="text-align:center"><code>:seedling:</code></td><td style="text-align:center">🌱</td><td style="text-align:center"><code>:blossom:</code></td><td style="text-align:center">🌼</td></tr><tr><td style="text-align:center"><code>:ear_of_rice:</code></td><td style="text-align:center">🌾</td><td style="text-align:center"><code>:shell:</code></td><td style="text-align:center">🐚</td><td style="text-align:center"><code>:globe_with_meridians:</code></td><td style="text-align:center">🌐</td></tr><tr><td style="text-align:center"><code>:sun_with_face:</code></td><td style="text-align:center">🌞</td><td style="text-align:center"><code>:full_moon_with_face:</code></td><td style="text-align:center">🌝</td><td style="text-align:center"><code>:new_moon_with_face:</code></td><td style="text-align:center">🌚</td></tr><tr><td style="text-align:center"><code>:new_moon:</code></td><td style="text-align:center">🌑</td><td style="text-align:center"><code>:waxing_crescent_moon:</code></td><td style="text-align:center">🌒</td><td style="text-align:center"><code>:first_quarter_moon:</code></td><td style="text-align:center">🌓</td></tr><tr><td style="text-align:center"><code>:full_moon:</code></td><td style="text-align:center">🌕</td><td style="text-align:center"><code>:waning_gibbous_moon:</code></td><td style="text-align:center">🌖</td><td style="text-align:center"><code>:last_quarter_moon:</code></td><td style="text-align:center">🌗</td></tr><tr><td style="text-align:center"><code>:waning_crescent_moon:</code></td><td style="text-align:center">🌘</td><td style="text-align:center"><code>:last_quarter_moon_with_face:</code></td><td style="text-align:center">🌜</td><td style="text-align:center"><code>:first_quarter_moon_with_face:</code></td><td style="text-align:center">🌛</td></tr><tr><td style="text-align:center"><code>:moon:</code></td><td style="text-align:center">🌔</td><td style="text-align:center"><code>:earth_africa:</code></td><td style="text-align:center">🌍</td><td style="text-align:center"><code>:earth_americas:</code></td><td style="text-align:center">🌎</td></tr><tr><td style="text-align:center"><code>:earth_asia:</code></td><td style="text-align:center">🌏</td><td style="text-align:center"><code>:volcano:</code></td><td style="text-align:center">🌋</td><td style="text-align:center"><code>:milky_way:</code></td><td style="text-align:center">🌌</td></tr><tr><td style="text-align:center"><code>:partly_sunny:</code></td><td style="text-align:center">⛅</td><td style="text-align:center"><code>:octocat:</code></td><td style="text-align:center">:octocat:</td><td style="text-align:center"><code>:squirrel:</code></td><td style="text-align:center">:squirrel:</td></tr><tr><td style="text-align:center"><code>:waxing_gibbous_moon:</code></td><td style="text-align:center">🌔</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="物体"><a class="header-anchor" href="#物体">¶</a>物体</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center">syntax</td><td style="text-align:center">preview</td><td style="text-align:center">syntax</td><td style="text-align:center">preview</td><td style="text-align:center">syntax</td><td style="text-align:center">preview</td></tr><tr><td style="text-align:center"><code>:bamboo:</code></td><td style="text-align:center">🎍</td><td style="text-align:center"><code>:gift_heart:</code></td><td style="text-align:center">💝</td><td style="text-align:center"><code>:dolls:</code></td><td style="text-align:center">🎎</td></tr><tr><td style="text-align:center"><code>:school_satchel:</code></td><td style="text-align:center">🎒</td><td style="text-align:center"><code>:mortar_board:</code></td><td style="text-align:center">🎓</td><td style="text-align:center"><code>:flags:</code></td><td style="text-align:center">🎏</td></tr><tr><td style="text-align:center"><code>:fireworks:</code></td><td style="text-align:center">🎆</td><td style="text-align:center"><code>:sparkler:</code></td><td style="text-align:center">🎇</td><td style="text-align:center"><code>:wind_chime:</code></td><td style="text-align:center">🎐</td></tr><tr><td style="text-align:center"><code>:rice_scene:</code></td><td style="text-align:center">🎑</td><td style="text-align:center"><code>:jack_o_lantern:</code></td><td style="text-align:center">🎃</td><td style="text-align:center"><code>:ghost:</code></td><td style="text-align:center">👻</td></tr><tr><td style="text-align:center"><code>:santa:</code></td><td style="text-align:center">🎅</td><td style="text-align:center"><code>:christmas_tree:</code></td><td style="text-align:center">🎄</td><td style="text-align:center"><code>:gift:</code></td><td style="text-align:center">🎁</td></tr><tr><td style="text-align:center"><code>:bell:</code></td><td style="text-align:center">🔔</td><td style="text-align:center"><code>:no_bell:</code></td><td style="text-align:center">🔕</td><td style="text-align:center"><code>:tanabata_tree:</code></td><td style="text-align:center">🎋</td></tr><tr><td style="text-align:center"><code>:tada:</code></td><td style="text-align:center">🎉</td><td style="text-align:center"><code>:confetti_ball:</code></td><td style="text-align:center">🎊</td><td style="text-align:center"><code>:balloon:</code></td><td style="text-align:center">🎈</td></tr><tr><td style="text-align:center"><code>:crystal_ball:</code></td><td style="text-align:center">🔮</td><td style="text-align:center"><code>:cd:</code></td><td style="text-align:center">💿</td><td style="text-align:center"><code>:dvd:</code></td><td style="text-align:center">📀</td></tr><tr><td style="text-align:center"><code>:floppy_disk:</code></td><td style="text-align:center">💾</td><td style="text-align:center"><code>:camera:</code></td><td style="text-align:center">📷</td><td style="text-align:center"><code>:video_camera:</code></td><td style="text-align:center">📹</td></tr><tr><td style="text-align:center"><code>:movie_camera:</code></td><td style="text-align:center">🎥</td><td style="text-align:center"><code>:computer:</code></td><td style="text-align:center">💻</td><td style="text-align:center"><code>:tv:</code></td><td style="text-align:center">📺</td></tr><tr><td style="text-align:center"><code>:iphone:</code></td><td style="text-align:center">📱</td><td style="text-align:center"><code>:phone:</code></td><td style="text-align:center">☎️</td><td style="text-align:center"><code>:telephone:</code></td><td style="text-align:center">☎️</td></tr><tr><td style="text-align:center"><code>:telephone_receiver:</code></td><td style="text-align:center">📞</td><td style="text-align:center"><code>:pager:</code></td><td style="text-align:center">📟</td><td style="text-align:center"><code>:fax:</code></td><td style="text-align:center">📠</td></tr><tr><td style="text-align:center"><code>:minidisc:</code></td><td style="text-align:center">💽</td><td style="text-align:center"><code>:vhs:</code></td><td style="text-align:center">📼</td><td style="text-align:center"><code>:sound:</code></td><td style="text-align:center">🔉</td></tr><tr><td style="text-align:center"><code>:speaker:</code></td><td style="text-align:center">🔈</td><td style="text-align:center"><code>:mute:</code></td><td style="text-align:center">🔇</td><td style="text-align:center"><code>:loudspeaker:</code></td><td style="text-align:center">📢</td></tr><tr><td style="text-align:center"><code>:mega:</code></td><td style="text-align:center">📣</td><td style="text-align:center"><code>:hourglass:</code></td><td style="text-align:center">⌛</td><td style="text-align:center"><code>:hourglass_flowing_sand:</code></td><td style="text-align:center">⏳</td></tr><tr><td style="text-align:center"><code>:alarm_clock:</code></td><td style="text-align:center">⏰</td><td style="text-align:center"><code>:watch:</code></td><td style="text-align:center">⌚</td><td style="text-align:center"><code>:radio:</code></td><td style="text-align:center">📻</td></tr><tr><td style="text-align:center"><code>:satellite:</code></td><td style="text-align:center">📡</td><td style="text-align:center"><code>:loop:</code></td><td style="text-align:center">➿</td><td style="text-align:center"><code>:mag:</code></td><td style="text-align:center">🔍</td></tr><tr><td style="text-align:center"><code>:mag_right:</code></td><td style="text-align:center">🔎</td><td style="text-align:center"><code>:unlock:</code></td><td style="text-align:center">🔓</td><td style="text-align:center"><code>:lock:</code></td><td style="text-align:center">🔒</td></tr><tr><td style="text-align:center"><code>:lock_with_ink_pen:</code></td><td style="text-align:center">🔏</td><td style="text-align:center"><code>:closed_lock_with_key:</code></td><td style="text-align:center">🔐</td><td style="text-align:center"><code>:key:</code></td><td style="text-align:center">🔑</td></tr><tr><td style="text-align:center"><code>:bulb:</code></td><td style="text-align:center">💡</td><td style="text-align:center"><code>:flashlight:</code></td><td style="text-align:center">🔦</td><td style="text-align:center"><code>:high_brightness:</code></td><td style="text-align:center">🔆</td></tr><tr><td style="text-align:center"><code>:low_brightness:</code></td><td style="text-align:center">🔅</td><td style="text-align:center"><code>:electric_plug:</code></td><td style="text-align:center">🔌</td><td style="text-align:center"><code>:battery:</code></td><td style="text-align:center">🔋</td></tr><tr><td style="text-align:center"><code>:calling:</code></td><td style="text-align:center">📲</td><td style="text-align:center"><code>:email:</code></td><td style="text-align:center">📧</td><td style="text-align:center"><code>:mailbox:</code></td><td style="text-align:center">📫</td></tr><tr><td style="text-align:center"><code>:postbox:</code></td><td style="text-align:center">📮</td><td style="text-align:center"><code>:bath:</code></td><td style="text-align:center">🛀</td><td style="text-align:center"><code>:bathtub:</code></td><td style="text-align:center">🛁</td></tr><tr><td style="text-align:center"><code>:shower:</code></td><td style="text-align:center">🚿</td><td style="text-align:center"><code>:toilet:</code></td><td style="text-align:center">🚽</td><td style="text-align:center"><code>:wrench:</code></td><td style="text-align:center">🔧</td></tr><tr><td style="text-align:center"><code>:nut_and_bolt:</code></td><td style="text-align:center">🔩</td><td style="text-align:center"><code>:hammer:</code></td><td style="text-align:center">🔨</td><td style="text-align:center"><code>:seat:</code></td><td style="text-align:center">💺</td></tr><tr><td style="text-align:center"><code>:moneybag:</code></td><td style="text-align:center">💰</td><td style="text-align:center"><code>:yen:</code></td><td style="text-align:center">💴</td><td style="text-align:center"><code>:dollar:</code></td><td style="text-align:center">💵</td></tr><tr><td style="text-align:center"><code>:pound:</code></td><td style="text-align:center">💷</td><td style="text-align:center"><code>:euro:</code></td><td style="text-align:center">💶</td><td style="text-align:center"><code>:credit_card:</code></td><td style="text-align:center">💳</td></tr><tr><td style="text-align:center"><code>:money_with_wings:</code></td><td style="text-align:center">💸</td><td style="text-align:center"><code>:e-mail:</code></td><td style="text-align:center">📧</td><td style="text-align:center"><code>:inbox_tray:</code></td><td style="text-align:center">📥</td></tr><tr><td style="text-align:center"><code>:outbox_tray:</code></td><td style="text-align:center">📤</td><td style="text-align:center"><code>:envelope:</code></td><td style="text-align:center">✉️</td><td style="text-align:center"><code>:incoming_envelope:</code></td><td style="text-align:center">📨</td></tr><tr><td style="text-align:center"><code>:postal_horn:</code></td><td style="text-align:center">📯</td><td style="text-align:center"><code>:mailbox_closed:</code></td><td style="text-align:center">📪</td><td style="text-align:center"><code>:mailbox_with_mail:</code></td><td style="text-align:center">📬</td></tr><tr><td style="text-align:center"><code>:mailbox_with_no_mail:</code></td><td style="text-align:center">📭</td><td style="text-align:center"><code>:door:</code></td><td style="text-align:center">🚪</td><td style="text-align:center"><code>:smoking:</code></td><td style="text-align:center">🚬</td></tr><tr><td style="text-align:center"><code>:bomb:</code></td><td style="text-align:center">💣</td><td style="text-align:center"><code>:gun:</code></td><td style="text-align:center">🔫</td><td style="text-align:center"><code>:hocho:</code></td><td style="text-align:center">🔪</td></tr><tr><td style="text-align:center"><code>:pill:</code></td><td style="text-align:center">💊</td><td style="text-align:center"><code>:syringe:</code></td><td style="text-align:center">💉</td><td style="text-align:center"><code>:page_facing_up:</code></td><td style="text-align:center">📄</td></tr><tr><td style="text-align:center"><code>:page_with_curl:</code></td><td style="text-align:center">📃</td><td style="text-align:center"><code>:bookmark_tabs:</code></td><td style="text-align:center">📑</td><td style="text-align:center"><code>:bar_chart:</code></td><td style="text-align:center">📊</td></tr><tr><td style="text-align:center"><code>:chart_with_upwards_trend:</code></td><td style="text-align:center">📈</td><td style="text-align:center"><code>:chart_with_downwards_trend:</code></td><td style="text-align:center">📉</td><td style="text-align:center"><code>:scroll:</code></td><td style="text-align:center">📜</td></tr><tr><td style="text-align:center"><code>:clipboard:</code></td><td style="text-align:center">📋</td><td style="text-align:center"><code>:calendar:</code></td><td style="text-align:center">📆</td><td style="text-align:center"><code>:date:</code></td><td style="text-align:center">📅</td></tr><tr><td style="text-align:center"><code>:card_index:</code></td><td style="text-align:center">📇</td><td style="text-align:center"><code>:file_folder:</code></td><td style="text-align:center">📁</td><td style="text-align:center"><code>:open_file_folder:</code></td><td style="text-align:center">📂</td></tr><tr><td style="text-align:center"><code>:scissors:</code></td><td style="text-align:center">✂️</td><td style="text-align:center"><code>:pushpin:</code></td><td style="text-align:center">📌</td><td style="text-align:center"><code>:paperclip:</code></td><td style="text-align:center">📎</td></tr><tr><td style="text-align:center"><code>:black_nib:</code></td><td style="text-align:center">✒️</td><td style="text-align:center"><code>:pencil2:</code></td><td style="text-align:center">✏️</td><td style="text-align:center"><code>:straight_ruler:</code></td><td style="text-align:center">📏</td></tr><tr><td style="text-align:center"><code>:triangular_ruler:</code></td><td style="text-align:center">📐</td><td style="text-align:center"><code>:closed_book:</code></td><td style="text-align:center">📕</td><td style="text-align:center"><code>:green_book:</code></td><td style="text-align:center">📗</td></tr><tr><td style="text-align:center"><code>:blue_book:</code></td><td style="text-align:center">📘</td><td style="text-align:center"><code>:orange_book:</code></td><td style="text-align:center">📙</td><td style="text-align:center"><code>:notebook:</code></td><td style="text-align:center">📓</td></tr><tr><td style="text-align:center"><code>:notebook_with_decorative_cover:</code></td><td style="text-align:center">📔</td><td style="text-align:center"><code>:ledger:</code></td><td style="text-align:center">📒</td><td style="text-align:center"><code>:books:</code></td><td style="text-align:center">📚</td></tr><tr><td style="text-align:center"><code>:bookmark:</code></td><td style="text-align:center">🔖</td><td style="text-align:center"><code>:microscope:</code></td><td style="text-align:center">🔬</td><td style="text-align:center"><code>:telescope:</code></td><td style="text-align:center">🔭</td></tr><tr><td style="text-align:center"><code>:name_badge:</code></td><td style="text-align:center">📛</td><td style="text-align:center"><code>:newspaper:</code></td><td style="text-align:center">📰</td><td style="text-align:center"><code>:football:</code></td><td style="text-align:center">🏈</td></tr><tr><td style="text-align:center"><code>:basketball:</code></td><td style="text-align:center">🏀</td><td style="text-align:center"><code>:soccer:</code></td><td style="text-align:center">⚽</td><td style="text-align:center"><code>:baseball:</code></td><td style="text-align:center">⚾</td></tr><tr><td style="text-align:center"><code>:tennis:</code></td><td style="text-align:center">🎾</td><td style="text-align:center"><code>:8ball:</code></td><td style="text-align:center">🎱</td><td style="text-align:center"><code>:rugby_football:</code></td><td style="text-align:center">🏉</td></tr><tr><td style="text-align:center"><code>:bowling:</code></td><td style="text-align:center">🎳</td><td style="text-align:center"><code>:golf:</code></td><td style="text-align:center">⛳</td><td style="text-align:center"><code>:mountain_bicyclist:</code></td><td style="text-align:center">🚵</td></tr><tr><td style="text-align:center"><code>:bicyclist:</code></td><td style="text-align:center">🚴</td><td style="text-align:center"><code>:horse_racing:</code></td><td style="text-align:center">🏇</td><td style="text-align:center"><code>:snowboarder:</code></td><td style="text-align:center">🏂</td></tr><tr><td style="text-align:center"><code>:swimmer:</code></td><td style="text-align:center">🏊</td><td style="text-align:center"><code>:surfer:</code></td><td style="text-align:center">🏄</td><td style="text-align:center"><code>:ski:</code></td><td style="text-align:center">🎿</td></tr><tr><td style="text-align:center"><code>:spades:</code></td><td style="text-align:center">♠️</td><td style="text-align:center"><code>:hearts:</code></td><td style="text-align:center">♥️</td><td style="text-align:center"><code>:clubs:</code></td><td style="text-align:center">♣️</td></tr><tr><td style="text-align:center"><code>:diamonds:</code></td><td style="text-align:center">♦️</td><td style="text-align:center"><code>:gem:</code></td><td style="text-align:center">💎</td><td style="text-align:center"><code>:ring:</code></td><td style="text-align:center">💍</td></tr><tr><td style="text-align:center"><code>:trophy:</code></td><td style="text-align:center">🏆</td><td style="text-align:center"><code>:musical_score:</code></td><td style="text-align:center">🎼</td><td style="text-align:center"><code>:musical_keyboard:</code></td><td style="text-align:center">🎹</td></tr><tr><td style="text-align:center"><code>:violin:</code></td><td style="text-align:center">🎻</td><td style="text-align:center"><code>:space_invader:</code></td><td style="text-align:center">👾</td><td style="text-align:center"><code>:video_game:</code></td><td style="text-align:center">🎮</td></tr><tr><td style="text-align:center"><code>:black_joker:</code></td><td style="text-align:center">🃏</td><td style="text-align:center"><code>:flower_playing_cards:</code></td><td style="text-align:center">🎴</td><td style="text-align:center"><code>:game_die:</code></td><td style="text-align:center">🎲</td></tr><tr><td style="text-align:center"><code>:dart:</code></td><td style="text-align:center">🎯</td><td style="text-align:center"><code>:mahjong:</code></td><td style="text-align:center">🀄</td><td style="text-align:center"><code>:clapper:</code></td><td style="text-align:center">🎬</td></tr><tr><td style="text-align:center"><code>:memo:</code></td><td style="text-align:center">📝</td><td style="text-align:center"><code>:pencil:</code></td><td style="text-align:center">📝</td><td style="text-align:center"><code>:book:</code></td><td style="text-align:center">📖</td></tr><tr><td style="text-align:center"><code>:art:</code></td><td style="text-align:center">🎨</td><td style="text-align:center"><code>:microphone:</code></td><td style="text-align:center">🎤</td><td style="text-align:center"><code>:headphones:</code></td><td style="text-align:center">🎧</td></tr><tr><td style="text-align:center"><code>:trumpet:</code></td><td style="text-align:center">🎺</td><td style="text-align:center"><code>:saxophone:</code></td><td style="text-align:center">🎷</td><td style="text-align:center"><code>:guitar:</code></td><td style="text-align:center">🎸</td></tr><tr><td style="text-align:center"><code>:shoe:</code></td><td style="text-align:center">👞</td><td style="text-align:center"><code>:sandal:</code></td><td style="text-align:center">👡</td><td style="text-align:center"><code>:high_heel:</code></td><td style="text-align:center">👠</td></tr><tr><td style="text-align:center"><code>:lipstick:</code></td><td style="text-align:center">💄</td><td style="text-align:center"><code>:boot:</code></td><td style="text-align:center">👢</td><td style="text-align:center"><code>:shirt:</code></td><td style="text-align:center">👕</td></tr><tr><td style="text-align:center"><code>:tshirt:</code></td><td style="text-align:center">👕</td><td style="text-align:center"><code>:necktie:</code></td><td style="text-align:center">👔</td><td style="text-align:center"><code>:womans_clothes:</code></td><td style="text-align:center">👚</td></tr><tr><td style="text-align:center"><code>:dress:</code></td><td style="text-align:center">👗</td><td style="text-align:center"><code>:running_shirt_with_sash:</code></td><td style="text-align:center">🎽</td><td style="text-align:center"><code>:jeans:</code></td><td style="text-align:center">👖</td></tr><tr><td style="text-align:center"><code>:kimono:</code></td><td style="text-align:center">👘</td><td style="text-align:center"><code>:bikini:</code></td><td style="text-align:center">👙</td><td style="text-align:center"><code>:ribbon:</code></td><td style="text-align:center">🎀</td></tr><tr><td style="text-align:center"><code>:tophat:</code></td><td style="text-align:center">🎩</td><td style="text-align:center"><code>:crown:</code></td><td style="text-align:center">👑</td><td style="text-align:center"><code>:womans_hat:</code></td><td style="text-align:center">👒</td></tr><tr><td style="text-align:center"><code>:mans_shoe:</code></td><td style="text-align:center">👞</td><td style="text-align:center"><code>:closed_umbrella:</code></td><td style="text-align:center">🌂</td><td style="text-align:center"><code>:briefcase:</code></td><td style="text-align:center">💼</td></tr><tr><td style="text-align:center"><code>:handbag:</code></td><td style="text-align:center">👜</td><td style="text-align:center"><code>:pouch:</code></td><td style="text-align:center">👝</td><td style="text-align:center"><code>:purse:</code></td><td style="text-align:center">👛</td></tr><tr><td style="text-align:center"><code>:eyeglasses:</code></td><td style="text-align:center">👓</td><td style="text-align:center"><code>:fishing_pole_and_fish:</code></td><td style="text-align:center">🎣</td><td style="text-align:center"><code>:coffee:</code></td><td style="text-align:center">☕</td></tr><tr><td style="text-align:center"><code>:tea:</code></td><td style="text-align:center">🍵</td><td style="text-align:center"><code>:sake:</code></td><td style="text-align:center">🍶</td><td style="text-align:center"><code>:baby_bottle:</code></td><td style="text-align:center">🍼</td></tr><tr><td style="text-align:center"><code>:beer:</code></td><td style="text-align:center">🍺</td><td style="text-align:center"><code>:beers:</code></td><td style="text-align:center">🍻</td><td style="text-align:center"><code>:cocktail:</code></td><td style="text-align:center">🍸</td></tr><tr><td style="text-align:center"><code>:tropical_drink:</code></td><td style="text-align:center">🍹</td><td style="text-align:center"><code>:wine_glass:</code></td><td style="text-align:center">🍷</td><td style="text-align:center"><code>:fork_and_knife:</code></td><td style="text-align:center">🍴</td></tr><tr><td style="text-align:center"><code>:pizza:</code></td><td style="text-align:center">🍕</td><td style="text-align:center"><code>:hamburger:</code></td><td style="text-align:center">🍔</td><td style="text-align:center"><code>:fries:</code></td><td style="text-align:center">🍟</td></tr><tr><td style="text-align:center"><code>:poultry_leg:</code></td><td style="text-align:center">🍗</td><td style="text-align:center"><code>:meat_on_bone:</code></td><td style="text-align:center">🍖</td><td style="text-align:center"><code>:spaghetti:</code></td><td style="text-align:center">🍝</td></tr><tr><td style="text-align:center"><code>:curry:</code></td><td style="text-align:center">🍛</td><td style="text-align:center"><code>:fried_shrimp:</code></td><td style="text-align:center">🍤</td><td style="text-align:center"><code>:bento:</code></td><td style="text-align:center">🍱</td></tr><tr><td style="text-align:center"><code>:sushi:</code></td><td style="text-align:center">🍣</td><td style="text-align:center"><code>:fish_cake:</code></td><td style="text-align:center">🍥</td><td style="text-align:center"><code>:rice_ball:</code></td><td style="text-align:center">🍙</td></tr><tr><td style="text-align:center"><code>:rice_cracker:</code></td><td style="text-align:center">🍘</td><td style="text-align:center"><code>:rice:</code></td><td style="text-align:center">🍚</td><td style="text-align:center"><code>:ramen:</code></td><td style="text-align:center">🍜</td></tr><tr><td style="text-align:center"><code>:stew:</code></td><td style="text-align:center">🍲</td><td style="text-align:center"><code>:oden:</code></td><td style="text-align:center">🍢</td><td style="text-align:center"><code>:dango:</code></td><td style="text-align:center">🍡</td></tr><tr><td style="text-align:center"><code>:egg:</code></td><td style="text-align:center">🥚</td><td style="text-align:center"><code>:bread:</code></td><td style="text-align:center">🍞</td><td style="text-align:center"><code>:doughnut:</code></td><td style="text-align:center">🍩</td></tr><tr><td style="text-align:center"><code>:custard:</code></td><td style="text-align:center">🍮</td><td style="text-align:center"><code>:icecream:</code></td><td style="text-align:center">🍦</td><td style="text-align:center"><code>:ice_cream:</code></td><td style="text-align:center">🍨</td></tr><tr><td style="text-align:center"><code>:shaved_ice:</code></td><td style="text-align:center">🍧</td><td style="text-align:center"><code>:birthday:</code></td><td style="text-align:center">🎂</td><td style="text-align:center"><code>:cake:</code></td><td style="text-align:center">🍰</td></tr><tr><td style="text-align:center"><code>:cookie:</code></td><td style="text-align:center">🍪</td><td style="text-align:center"><code>:chocolate_bar:</code></td><td style="text-align:center">🍫</td><td style="text-align:center"><code>:candy:</code></td><td style="text-align:center">🍬</td></tr><tr><td style="text-align:center"><code>:lollipop:</code></td><td style="text-align:center">🍭</td><td style="text-align:center"><code>:honey_pot:</code></td><td style="text-align:center">🍯</td><td style="text-align:center"><code>:apple:</code></td><td style="text-align:center">🍎</td></tr><tr><td style="text-align:center"><code>:green_apple:</code></td><td style="text-align:center">🍏</td><td style="text-align:center"><code>:tangerine:</code></td><td style="text-align:center">🍊</td><td style="text-align:center"><code>:lemon:</code></td><td style="text-align:center">🍋</td></tr><tr><td style="text-align:center"><code>:cherries:</code></td><td style="text-align:center">🍒</td><td style="text-align:center"><code>:grapes:</code></td><td style="text-align:center">🍇</td><td style="text-align:center"><code>:watermelon:</code></td><td style="text-align:center">🍉</td></tr><tr><td style="text-align:center"><code>:strawberry:</code></td><td style="text-align:center">🍓</td><td style="text-align:center"><code>:peach:</code></td><td style="text-align:center">🍑</td><td style="text-align:center"><code>:melon:</code></td><td style="text-align:center">🍈</td></tr><tr><td style="text-align:center"><code>:banana:</code></td><td style="text-align:center">🍌</td><td style="text-align:center"><code>:pear:</code></td><td style="text-align:center">🍐</td><td style="text-align:center"><code>:pineapple:</code></td><td style="text-align:center">🍍</td></tr><tr><td style="text-align:center"><code>:sweet_potato:</code></td><td style="text-align:center">🍠</td><td style="text-align:center"><code>:eggplant:</code></td><td style="text-align:center">🍆</td><td style="text-align:center"><code>:tomato:</code></td><td style="text-align:center">🍅</td></tr><tr><td style="text-align:center"><code>:corn:</code></td><td style="text-align:center">🌽</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="地点"><a class="header-anchor" href="#地点">¶</a>地点</h3><table><thead><tr><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th></tr></thead><tbody><tr><td style="text-align:center"><code>:house:</code></td><td style="text-align:center">🏠</td><td style="text-align:center"><code>:house_with_garden:</code></td><td style="text-align:center">🏡</td><td style="text-align:center"><code>:school:</code></td><td style="text-align:center">🏫</td></tr><tr><td style="text-align:center"><code>:office:</code></td><td style="text-align:center">🏢</td><td style="text-align:center"><code>:post_office:</code></td><td style="text-align:center">🏣</td><td style="text-align:center"><code>:hospital:</code></td><td style="text-align:center">🏥</td></tr><tr><td style="text-align:center"><code>:bank:</code></td><td style="text-align:center">🏦</td><td style="text-align:center"><code>:convenience_store:</code></td><td style="text-align:center">🏪</td><td style="text-align:center"><code>:love_hotel:</code></td><td style="text-align:center">🏩</td></tr><tr><td style="text-align:center"><code>:hotel:</code></td><td style="text-align:center">🏨</td><td style="text-align:center"><code>:wedding:</code></td><td style="text-align:center">💒</td><td style="text-align:center"><code>:church:</code></td><td style="text-align:center">⛪</td></tr><tr><td style="text-align:center"><code>:department_store:</code></td><td style="text-align:center">🏬</td><td style="text-align:center"><code>:european_post_office:</code></td><td style="text-align:center">🏤</td><td style="text-align:center"><code>:city_sunrise:</code></td><td style="text-align:center">🌇</td></tr><tr><td style="text-align:center"><code>:city_sunset:</code></td><td style="text-align:center">🌆</td><td style="text-align:center"><code>:japanese_castle:</code></td><td style="text-align:center">🏯</td><td style="text-align:center"><code>:european_castle:</code></td><td style="text-align:center">🏰</td></tr><tr><td style="text-align:center"><code>:tent:</code></td><td style="text-align:center">⛺</td><td style="text-align:center"><code>:factory:</code></td><td style="text-align:center">🏭</td><td style="text-align:center"><code>:tokyo_tower:</code></td><td style="text-align:center">🗼</td></tr><tr><td style="text-align:center"><code>:japan:</code></td><td style="text-align:center">🗾</td><td style="text-align:center"><code>:mount_fuji:</code></td><td style="text-align:center">🗻</td><td style="text-align:center"><code>:sunrise_over_mountains:</code></td><td style="text-align:center">🌄</td></tr><tr><td style="text-align:center"><code>:sunrise:</code></td><td style="text-align:center">🌅</td><td style="text-align:center"><code>:stars:</code></td><td style="text-align:center">🌠</td><td style="text-align:center"><code>:statue_of_liberty:</code></td><td style="text-align:center">🗽</td></tr><tr><td style="text-align:center"><code>:bridge_at_night:</code></td><td style="text-align:center">🌉</td><td style="text-align:center"><code>:carousel_horse:</code></td><td style="text-align:center">🎠</td><td style="text-align:center"><code>:rainbow:</code></td><td style="text-align:center">🌈</td></tr><tr><td style="text-align:center"><code>:ferris_wheel:</code></td><td style="text-align:center">🎡</td><td style="text-align:center"><code>:fountain:</code></td><td style="text-align:center">⛲</td><td style="text-align:center"><code>:roller_coaster:</code></td><td style="text-align:center">🎢</td></tr><tr><td style="text-align:center"><code>:ship:</code></td><td style="text-align:center">🚢</td><td style="text-align:center"><code>:speedboat:</code></td><td style="text-align:center">🚤</td><td style="text-align:center"><code>:boat:</code></td><td style="text-align:center">⛵</td></tr><tr><td style="text-align:center"><code>:sailboat:</code></td><td style="text-align:center">⛵</td><td style="text-align:center"><code>:rowboat:</code></td><td style="text-align:center">🚣</td><td style="text-align:center"><code>:anchor:</code></td><td style="text-align:center">⚓</td></tr><tr><td style="text-align:center"><code>:rocket:</code></td><td style="text-align:center">🚀</td><td style="text-align:center"><code>:airplane:</code></td><td style="text-align:center">✈️</td><td style="text-align:center"><code>:helicopter:</code></td><td style="text-align:center">🚁</td></tr><tr><td style="text-align:center"><code>:steam_locomotive:</code></td><td style="text-align:center">🚂</td><td style="text-align:center"><code>:tram:</code></td><td style="text-align:center">🚊</td><td style="text-align:center"><code>:mountain_railway:</code></td><td style="text-align:center">🚞</td></tr><tr><td style="text-align:center"><code>:bike:</code></td><td style="text-align:center">🚲</td><td style="text-align:center"><code>:aerial_tramway:</code></td><td style="text-align:center">🚡</td><td style="text-align:center"><code>:suspension_railway:</code></td><td style="text-align:center">🚟</td></tr><tr><td style="text-align:center"><code>:mountain_cableway:</code></td><td style="text-align:center">🚠</td><td style="text-align:center"><code>:tractor:</code></td><td style="text-align:center">🚜</td><td style="text-align:center"><code>:blue_car:</code></td><td style="text-align:center">🚙</td></tr><tr><td style="text-align:center"><code>:oncoming_automobile:</code></td><td style="text-align:center">🚘</td><td style="text-align:center"><code>:car:</code></td><td style="text-align:center">🚗</td><td style="text-align:center"><code>:red_car:</code></td><td style="text-align:center">🚗</td></tr><tr><td style="text-align:center"><code>:taxi:</code></td><td style="text-align:center">🚕</td><td style="text-align:center"><code>:oncoming_taxi:</code></td><td style="text-align:center">🚖</td><td style="text-align:center"><code>:articulated_lorry:</code></td><td style="text-align:center">🚛</td></tr><tr><td style="text-align:center"><code>:bus:</code></td><td style="text-align:center">🚌</td><td style="text-align:center"><code>:oncoming_bus:</code></td><td style="text-align:center">🚍</td><td style="text-align:center"><code>:rotating_light:</code></td><td style="text-align:center">🚨</td></tr><tr><td style="text-align:center"><code>:police_car:</code></td><td style="text-align:center">🚓</td><td style="text-align:center"><code>:oncoming_police_car:</code></td><td style="text-align:center">🚔</td><td style="text-align:center"><code>:fire_engine:</code></td><td style="text-align:center">🚒</td></tr><tr><td style="text-align:center"><code>:ambulance:</code></td><td style="text-align:center">🚑</td><td style="text-align:center"><code>:minibus:</code></td><td style="text-align:center">🚐</td><td style="text-align:center"><code>:truck:</code></td><td style="text-align:center">🚚</td></tr><tr><td style="text-align:center"><code>:train:</code></td><td style="text-align:center">🚋</td><td style="text-align:center"><code>:station:</code></td><td style="text-align:center">🚉</td><td style="text-align:center"><code>:train2:</code></td><td style="text-align:center">🚆</td></tr><tr><td style="text-align:center"><code>:bullettrain_front:</code></td><td style="text-align:center">🚅</td><td style="text-align:center"><code>:bullettrain_side:</code></td><td style="text-align:center">🚄</td><td style="text-align:center"><code>:light_rail:</code></td><td style="text-align:center">🚈</td></tr><tr><td style="text-align:center"><code>:monorail:</code></td><td style="text-align:center">🚝</td><td style="text-align:center"><code>:railway_car:</code></td><td style="text-align:center">🚃</td><td style="text-align:center"><code>:trolleybus:</code></td><td style="text-align:center">🚎</td></tr><tr><td style="text-align:center"><code>:ticket:</code></td><td style="text-align:center">🎫</td><td style="text-align:center"><code>:fuelpump:</code></td><td style="text-align:center">⛽</td><td style="text-align:center"><code>:vertical_traffic_light:</code></td><td style="text-align:center">🚦</td></tr><tr><td style="text-align:center"><code>:traffic_light:</code></td><td style="text-align:center">🚥</td><td style="text-align:center"><code>:warning:</code></td><td style="text-align:center">⚠️</td><td style="text-align:center"><code>:construction:</code></td><td style="text-align:center">🚧</td></tr><tr><td style="text-align:center"><code>:beginner:</code></td><td style="text-align:center">🔰</td><td style="text-align:center"><code>:atm:</code></td><td style="text-align:center">🏧</td><td style="text-align:center"><code>:slot_machine:</code></td><td style="text-align:center">🎰</td></tr><tr><td style="text-align:center"><code>:busstop:</code></td><td style="text-align:center">🚏</td><td style="text-align:center"><code>:barber:</code></td><td style="text-align:center">💈</td><td style="text-align:center"><code>:hotsprings:</code></td><td style="text-align:center">♨️</td></tr><tr><td style="text-align:center"><code>:checkered_flag:</code></td><td style="text-align:center">🏁</td><td style="text-align:center"><code>:crossed_flags:</code></td><td style="text-align:center">🎌</td><td style="text-align:center"><code>:izakaya_lantern:</code></td><td style="text-align:center">🏮</td></tr><tr><td style="text-align:center"><code>:moyai:</code></td><td style="text-align:center">🗿</td><td style="text-align:center"><code>:circus_tent:</code></td><td style="text-align:center">🎪</td><td style="text-align:center"><code>:performing_arts:</code></td><td style="text-align:center">🎭</td></tr><tr><td style="text-align:center"><code>:round_pushpin:</code></td><td style="text-align:center">📍</td><td style="text-align:center"><code>:triangular_flag_on_post:</code></td><td style="text-align:center">🚩</td><td style="text-align:center"><code>:jp:</code></td><td style="text-align:center">🇯🇵</td></tr><tr><td style="text-align:center"><code>:kr:</code></td><td style="text-align:center">🇰🇷</td><td style="text-align:center"><code>:cn:</code></td><td style="text-align:center">🇨🇳</td><td style="text-align:center"><code>:us:</code></td><td style="text-align:center">🇺🇸</td></tr><tr><td style="text-align:center"><code>:fr:</code></td><td style="text-align:center">🇫🇷</td><td style="text-align:center"><code>:es:</code></td><td style="text-align:center">🇪🇸</td><td style="text-align:center"><code>:it:</code></td><td style="text-align:center">🇮🇹</td></tr><tr><td style="text-align:center"><code>:ru:</code></td><td style="text-align:center">🇷🇺</td><td style="text-align:center"><code>:gb:</code></td><td style="text-align:center">🇬🇧</td><td style="text-align:center"><code>:uk:</code></td><td style="text-align:center">🇬🇧</td></tr><tr><td style="text-align:center"><code>:de:</code></td><td style="text-align:center">🇩🇪</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="符号"><a class="header-anchor" href="#符号">¶</a>符号</h3><table><thead><tr><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th><th style="text-align:center">syntax</th><th style="text-align:center">preview</th></tr></thead><tbody><tr><td style="text-align:center"><code>:one:</code></td><td style="text-align:center">1️⃣</td><td style="text-align:center"><code>:two:</code></td><td style="text-align:center">2️⃣</td><td style="text-align:center"><code>:three:</code></td><td style="text-align:center">3️⃣</td></tr><tr><td style="text-align:center"><code>:four:</code></td><td style="text-align:center">4️⃣</td><td style="text-align:center"><code>:five:</code></td><td style="text-align:center">5️⃣</td><td style="text-align:center"><code>:six:</code></td><td style="text-align:center">6️⃣</td></tr><tr><td style="text-align:center"><code>:seven:</code></td><td style="text-align:center">7️⃣</td><td style="text-align:center"><code>:eight:</code></td><td style="text-align:center">8️⃣</td><td style="text-align:center"><code>:nine:</code></td><td style="text-align:center">9️⃣</td></tr><tr><td style="text-align:center"><code>:keycap_ten:</code></td><td style="text-align:center">🔟</td><td style="text-align:center"><code>:1234:</code></td><td style="text-align:center">🔢</td><td style="text-align:center"><code>:zero:</code></td><td style="text-align:center">0️⃣</td></tr><tr><td style="text-align:center"><code>:hash:</code></td><td style="text-align:center">#️⃣</td><td style="text-align:center"><code>:symbols:</code></td><td style="text-align:center">🔣</td><td style="text-align:center"><code>:arrow_backward:</code></td><td style="text-align:center">◀️</td></tr><tr><td style="text-align:center"><code>:arrow_down:</code></td><td style="text-align:center">⬇️</td><td style="text-align:center"><code>:arrow_forward:</code></td><td style="text-align:center">▶️</td><td style="text-align:center"><code>:arrow_left:</code></td><td style="text-align:center">⬅️</td></tr><tr><td style="text-align:center"><code>:capital_abcd:</code></td><td style="text-align:center">🔠</td><td style="text-align:center"><code>:abcd:</code></td><td style="text-align:center">🔡</td><td style="text-align:center"><code>:abc:</code></td><td style="text-align:center">🔤</td></tr><tr><td style="text-align:center"><code>:arrow_lower_left:</code></td><td style="text-align:center">↙️</td><td style="text-align:center"><code>:arrow_lower_right:</code></td><td style="text-align:center">↘️</td><td style="text-align:center"><code>:arrow_right:</code></td><td style="text-align:center">➡️</td></tr><tr><td style="text-align:center"><code>:arrow_up:</code></td><td style="text-align:center">⬆️</td><td style="text-align:center"><code>:arrow_upper_left:</code></td><td style="text-align:center">↖️</td><td style="text-align:center"><code>:arrow_upper_right:</code></td><td style="text-align:center">↗️</td></tr><tr><td style="text-align:center"><code>:arrow_double_down:</code></td><td style="text-align:center">⏬</td><td style="text-align:center"><code>:arrow_double_up:</code></td><td style="text-align:center">⏫</td><td style="text-align:center"><code>:arrow_down_small:</code></td><td style="text-align:center">🔽</td></tr><tr><td style="text-align:center"><code>:arrow_heading_down:</code></td><td style="text-align:center">⤵️</td><td style="text-align:center"><code>:arrow_heading_up:</code></td><td style="text-align:center">⤴️</td><td style="text-align:center"><code>:leftwards_arrow_with_hook:</code></td><td style="text-align:center">↩️</td></tr><tr><td style="text-align:center"><code>:arrow_right_hook:</code></td><td style="text-align:center">↪️</td><td style="text-align:center"><code>:left_right_arrow:</code></td><td style="text-align:center">↔️</td><td style="text-align:center"><code>:arrow_up_down:</code></td><td style="text-align:center">↕️</td></tr><tr><td style="text-align:center"><code>:arrow_up_small:</code></td><td style="text-align:center">🔼</td><td style="text-align:center"><code>:arrows_clockwise:</code></td><td style="text-align:center">🔃</td><td style="text-align:center"><code>:arrows_counterclockwise:</code></td><td style="text-align:center">🔄</td></tr><tr><td style="text-align:center"><code>:rewind:</code></td><td style="text-align:center">⏪</td><td style="text-align:center"><code>:fast_forward:</code></td><td style="text-align:center">⏩</td><td style="text-align:center"><code>:information_source:</code></td><td style="text-align:center">ℹ️</td></tr><tr><td style="text-align:center"><code>:ok:</code></td><td style="text-align:center">🆗</td><td style="text-align:center"><code>:twisted_rightwards_arrows:</code></td><td style="text-align:center">🔀</td><td style="text-align:center"><code>:repeat:</code></td><td style="text-align:center">🔁</td></tr><tr><td style="text-align:center"><code>:repeat_one:</code></td><td style="text-align:center">🔂</td><td style="text-align:center"><code>:new:</code></td><td style="text-align:center">🆕</td><td style="text-align:center"><code>:top:</code></td><td style="text-align:center">🔝</td></tr><tr><td style="text-align:center"><code>:up:</code></td><td style="text-align:center">🆙</td><td style="text-align:center"><code>:cool:</code></td><td style="text-align:center">🆒</td><td style="text-align:center"><code>:free:</code></td><td style="text-align:center">🆓</td></tr><tr><td style="text-align:center"><code>:ng:</code></td><td style="text-align:center">🆖</td><td style="text-align:center"><code>:cinema:</code></td><td style="text-align:center">🎦</td><td style="text-align:center"><code>:koko:</code></td><td style="text-align:center">🈁</td></tr><tr><td style="text-align:center"><code>:signal_strength:</code></td><td style="text-align:center">📶</td><td style="text-align:center"><code>:u5272:</code></td><td style="text-align:center">:u5272:</td><td style="text-align:center"><code>:u5408:</code></td><td style="text-align:center">:u5408:</td></tr><tr><td style="text-align:center"><code>:u55b6:</code></td><td style="text-align:center">:u55b6:</td><td style="text-align:center"><code>:u6307:</code></td><td style="text-align:center">:u6307:</td><td style="text-align:center"><code>:u6708:</code></td><td style="text-align:center">:u6708:</td></tr><tr><td style="text-align:center"><code>:u6709:</code></td><td style="text-align:center">:u6709:</td><td style="text-align:center"><code>:u6e80:</code></td><td style="text-align:center">🈵</td><td style="text-align:center"><code>:u7121:</code></td><td style="text-align:center">:u7121:</td></tr><tr><td style="text-align:center"><code>:u7533:</code></td><td style="text-align:center">:u7533:</td><td style="text-align:center"><code>:u7a7a:</code></td><td style="text-align:center">:u7a7a:</td><td style="text-align:center"><code>:u7981:</code></td><td style="text-align:center">:u7981:</td></tr><tr><td style="text-align:center"><code>:sa:</code></td><td style="text-align:center">🈂️</td><td style="text-align:center"><code>:restroom:</code></td><td style="text-align:center">🚻</td><td style="text-align:center"><code>:mens:</code></td><td style="text-align:center">🚹</td></tr><tr><td style="text-align:center"><code>:womens:</code></td><td style="text-align:center">🚺</td><td style="text-align:center"><code>:baby_symbol:</code></td><td style="text-align:center">🚼</td><td style="text-align:center"><code>:no_smoking:</code></td><td style="text-align:center">🚭</td></tr><tr><td style="text-align:center"><code>:parking:</code></td><td style="text-align:center">🅿️</td><td style="text-align:center"><code>:wheelchair:</code></td><td style="text-align:center">♿</td><td style="text-align:center"><code>:metro:</code></td><td style="text-align:center">🚇</td></tr><tr><td style="text-align:center"><code>:baggage_claim:</code></td><td style="text-align:center">🛄</td><td style="text-align:center"><code>:accept:</code></td><td style="text-align:center">🉑</td><td style="text-align:center"><code>:wc:</code></td><td style="text-align:center">🚾</td></tr><tr><td style="text-align:center"><code>:potable_water:</code></td><td style="text-align:center">🚰</td><td style="text-align:center"><code>:put_litter_in_its_place:</code></td><td style="text-align:center">🚮</td><td style="text-align:center"><code>:secret:</code></td><td style="text-align:center">㊙️</td></tr><tr><td style="text-align:center"><code>:congratulations:</code></td><td style="text-align:center">㊗️</td><td style="text-align:center"><code>:m:</code></td><td style="text-align:center">Ⓜ️</td><td style="text-align:center"><code>:passport_control:</code></td><td style="text-align:center">🛂</td></tr><tr><td style="text-align:center"><code>:left_luggage:</code></td><td style="text-align:center">🛅</td><td style="text-align:center"><code>:customs:</code></td><td style="text-align:center">🛃</td><td style="text-align:center"><code>:ideograph_advantage:</code></td><td style="text-align:center">🉐</td></tr><tr><td style="text-align:center"><code>:cl:</code></td><td style="text-align:center">🆑</td><td style="text-align:center"><code>:sos:</code></td><td style="text-align:center">🆘</td><td style="text-align:center"><code>:id:</code></td><td style="text-align:center">🆔</td></tr><tr><td style="text-align:center"><code>:no_entry_sign:</code></td><td style="text-align:center">🚫</td><td style="text-align:center"><code>:underage:</code></td><td style="text-align:center">🔞</td><td style="text-align:center"><code>:no_mobile_phones:</code></td><td style="text-align:center">📵</td></tr><tr><td style="text-align:center"><code>:do_not_litter:</code></td><td style="text-align:center">🚯</td><td style="text-align:center"><code>:non-potable_water:</code></td><td style="text-align:center">🚱</td><td style="text-align:center"><code>:no_bicycles:</code></td><td style="text-align:center">🚳</td></tr><tr><td style="text-align:center"><code>:no_pedestrians:</code></td><td style="text-align:center">🚷</td><td style="text-align:center"><code>:children_crossing:</code></td><td style="text-align:center">🚸</td><td style="text-align:center"><code>:no_entry:</code></td><td style="text-align:center">⛔</td></tr><tr><td style="text-align:center"><code>:eight_spoked_asterisk:</code></td><td style="text-align:center">✳️</td><td style="text-align:center"><code>:eight_pointed_black_star:</code></td><td style="text-align:center">✴️</td><td style="text-align:center"><code>:heart_decoration:</code></td><td style="text-align:center">💟</td></tr><tr><td style="text-align:center"><code>:vs:</code></td><td style="text-align:center">🆚</td><td style="text-align:center"><code>:vibration_mode:</code></td><td style="text-align:center">📳</td><td style="text-align:center"><code>:mobile_phone_off:</code></td><td style="text-align:center">📴</td></tr><tr><td style="text-align:center"><code>:chart:</code></td><td style="text-align:center">💹</td><td style="text-align:center"><code>:currency_exchange:</code></td><td style="text-align:center">💱</td><td style="text-align:center"><code>:aries:</code></td><td style="text-align:center">♈</td></tr><tr><td style="text-align:center"><code>:taurus:</code></td><td style="text-align:center">♉</td><td style="text-align:center"><code>:gemini:</code></td><td style="text-align:center">♊</td><td style="text-align:center"><code>:cancer:</code></td><td style="text-align:center">♋</td></tr><tr><td style="text-align:center"><code>:leo:</code></td><td style="text-align:center">♌</td><td style="text-align:center"><code>:virgo:</code></td><td style="text-align:center">♍</td><td style="text-align:center"><code>:libra:</code></td><td style="text-align:center">♎</td></tr><tr><td style="text-align:center"><code>:scorpius:</code></td><td style="text-align:center">♏</td><td style="text-align:center"><code>:sagittarius:</code></td><td style="text-align:center">♐</td><td style="text-align:center"><code>:capricorn:</code></td><td style="text-align:center">♑</td></tr><tr><td style="text-align:center"><code>:aquarius:</code></td><td style="text-align:center">♒</td><td style="text-align:center"><code>:pisces:</code></td><td style="text-align:center">♓</td><td style="text-align:center"><code>:ophiuchus:</code></td><td style="text-align:center">⛎</td></tr><tr><td style="text-align:center"><code>:six_pointed_star:</code></td><td style="text-align:center">🔯</td><td style="text-align:center"><code>:negative_squared_cross_mark:</code></td><td style="text-align:center">❎</td><td style="text-align:center"><code>:a:</code></td><td style="text-align:center">🅰️</td></tr><tr><td style="text-align:center"><code>:b:</code></td><td style="text-align:center">🅱️</td><td style="text-align:center"><code>:ab:</code></td><td style="text-align:center">🆎</td><td style="text-align:center"><code>:o2:</code></td><td style="text-align:center">🅾️</td></tr><tr><td style="text-align:center"><code>:diamond_shape_with_a_dot_inside:</code></td><td style="text-align:center">💠</td><td style="text-align:center"><code>:recycle:</code></td><td style="text-align:center">♻️</td><td style="text-align:center"><code>:end:</code></td><td style="text-align:center">🔚</td></tr><tr><td style="text-align:center"><code>:on:</code></td><td style="text-align:center">🔛</td><td style="text-align:center"><code>:soon:</code></td><td style="text-align:center">🔜</td><td style="text-align:center"><code>:clock1:</code></td><td style="text-align:center">🕐</td></tr><tr><td style="text-align:center"><code>:clock130:</code></td><td style="text-align:center">🕜</td><td style="text-align:center"><code>:clock10:</code></td><td style="text-align:center">🕙</td><td style="text-align:center"><code>:clock1030:</code></td><td style="text-align:center">🕥</td></tr><tr><td style="text-align:center"><code>:clock11:</code></td><td style="text-align:center">🕚</td><td style="text-align:center"><code>:clock1130:</code></td><td style="text-align:center">🕦</td><td style="text-align:center"><code>:clock12:</code></td><td style="text-align:center">🕛</td></tr><tr><td style="text-align:center"><code>:clock1230:</code></td><td style="text-align:center">🕧</td><td style="text-align:center"><code>:clock2:</code></td><td style="text-align:center">🕑</td><td style="text-align:center"><code>:clock230:</code></td><td style="text-align:center">🕝</td></tr><tr><td style="text-align:center"><code>:clock3:</code></td><td style="text-align:center">🕒</td><td style="text-align:center"><code>:clock330:</code></td><td style="text-align:center">🕞</td><td style="text-align:center"><code>:clock4:</code></td><td style="text-align:center">🕓</td></tr><tr><td style="text-align:center"><code>:clock430:</code></td><td style="text-align:center">🕟</td><td style="text-align:center"><code>:clock5:</code></td><td style="text-align:center">🕔</td><td style="text-align:center"><code>:clock530:</code></td><td style="text-align:center">🕠</td></tr><tr><td style="text-align:center"><code>:clock6:</code></td><td style="text-align:center">🕕</td><td style="text-align:center"><code>:clock630:</code></td><td style="text-align:center">🕡</td><td style="text-align:center"><code>:clock7:</code></td><td style="text-align:center">🕖</td></tr><tr><td style="text-align:center"><code>:clock730:</code></td><td style="text-align:center">🕢</td><td style="text-align:center"><code>:clock8:</code></td><td style="text-align:center">🕗</td><td style="text-align:center"><code>:clock830:</code></td><td style="text-align:center">🕣</td></tr><tr><td style="text-align:center"><code>:clock9:</code></td><td style="text-align:center">🕘</td><td style="text-align:center"><code>:clock930:</code></td><td style="text-align:center">🕤</td><td style="text-align:center"><code>:heavy_dollar_sign:</code></td><td style="text-align:center">💲</td></tr><tr><td style="text-align:center"><code>:copyright:</code></td><td style="text-align:center">©️</td><td style="text-align:center"><code>:registered:</code></td><td style="text-align:center">®️</td><td style="text-align:center"><code>:tm:</code></td><td style="text-align:center">™️</td></tr><tr><td style="text-align:center"><code>:x:</code></td><td style="text-align:center">❌</td><td style="text-align:center"><code>:heavy_exclamation_mark:</code></td><td style="text-align:center">❗</td><td style="text-align:center"><code>:bangbang:</code></td><td style="text-align:center">‼️</td></tr><tr><td style="text-align:center"><code>:interrobang:</code></td><td style="text-align:center">⁉️</td><td style="text-align:center"><code>:o:</code></td><td style="text-align:center">⭕</td><td style="text-align:center"><code>:heavy_multiplication_x:</code></td><td style="text-align:center">✖️</td></tr><tr><td style="text-align:center"><code>:heavy_plus_sign:</code></td><td style="text-align:center">➕</td><td style="text-align:center"><code>:heavy_minus_sign:</code></td><td style="text-align:center">➖</td><td style="text-align:center"><code>:heavy_division_sign:</code></td><td style="text-align:center">➗</td></tr><tr><td style="text-align:center"><code>:white_flower:</code></td><td style="text-align:center">💮</td><td style="text-align:center"><code>:100:</code></td><td style="text-align:center">💯</td><td style="text-align:center"><code>:heavy_check_mark:</code></td><td style="text-align:center">✔️</td></tr><tr><td style="text-align:center"><code>:ballot_box_with_check:</code></td><td style="text-align:center">☑️</td><td style="text-align:center"><code>:radio_button:</code></td><td style="text-align:center">🔘</td><td style="text-align:center"><code>:link:</code></td><td style="text-align:center">🔗</td></tr><tr><td style="text-align:center"><code>:curly_loop:</code></td><td style="text-align:center">➰</td><td style="text-align:center"><code>:wavy_dash:</code></td><td style="text-align:center">〰️</td><td style="text-align:center"><code>:part_alternation_mark:</code></td><td style="text-align:center">〽️</td></tr><tr><td style="text-align:center"><code>:trident:</code></td><td style="text-align:center">🔱</td><td style="text-align:center"><code>:black_large_square:</code></td><td style="text-align:center">⬛</td><td style="text-align:center"><code>:white_large_square:</code></td><td style="text-align:center">⬜</td></tr><tr><td style="text-align:center"><code>:white_check_mark:</code></td><td style="text-align:center">✅</td><td style="text-align:center"><code>:white_square_button:</code></td><td style="text-align:center">🔳</td><td style="text-align:center"><code>:black_square_button:</code></td><td style="text-align:center">🔲</td></tr><tr><td style="text-align:center"><code>:black_circle:</code></td><td style="text-align:center">⚫</td><td style="text-align:center"><code>:white_circle:</code></td><td style="text-align:center">⚪</td><td style="text-align:center"><code>:red_circle:</code></td><td style="text-align:center">🔴</td></tr><tr><td style="text-align:center"><code>:large_blue_circle:</code></td><td style="text-align:center">🔵</td><td style="text-align:center"><code>:large_blue_diamond:</code></td><td style="text-align:center">🔷</td><td style="text-align:center"><code>:large_orange_diamond:</code></td><td style="text-align:center">🔶</td></tr><tr><td style="text-align:center"><code>:small_blue_diamond:</code></td><td style="text-align:center">🔹</td><td style="text-align:center"><code>:small_orange_diamond:</code></td><td style="text-align:center">🔸</td><td style="text-align:center"><code>:small_red_triangle:</code></td><td style="text-align:center">🔺</td></tr><tr><td style="text-align:center"><code>:small_red_triangle_down:</code></td><td style="text-align:center">🔻</td><td style="text-align:center"><code>:shipit:</code></td><td style="text-align:center">:shipit:</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/20210803001752.jpeg&quot; alt=&quot;emoji&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Software" scheme="https://conquerorlei.github.io/categories/Software/"/>
    
    <category term="Markdown" scheme="https://conquerorlei.github.io/categories/Software/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://conquerorlei.github.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
