<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>conquerorLei</title>
  
  <subtitle>further study make me better</subtitle>
  <link href="https://conquerorlei.github.io/atom.xml" rel="self"/>
  
  <link href="https://conquerorlei.github.io/"/>
  <updated>2021-09-16T14:35:29.366Z</updated>
  <id>https://conquerorlei.github.io/</id>
  
  <author>
    <name>conquerorLei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>x的平方根</title>
    <link href="https://conquerorlei.github.io/posts/e0a96f5e/"/>
    <id>https://conquerorlei.github.io/posts/e0a96f5e/</id>
    <published>2021-09-16T12:09:29.000Z</published>
    <updated>2021-09-16T14:35:29.366Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.onlinewebfonts.com/svg/img_488274.png" alt="sqrt"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/sqrtx/">69. x 的平方根 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析与代码"><a class="header-anchor" href="#题目分析与代码">¶</a>题目分析与代码</h4><p>我的想法是在最开始，直接调用Math.sqrt()岂不是省时省力，为什么有这种题目？后来才想到这个题目考察的是你独立解决底层数据运算的能力。最开始，计算机不知道怎么开方，编程语言也不知道，写代码教电脑怎么开方呗</p><p>废话少说，直接说想法。</p><p>后面的想法就是，暴力，反正<font color='red'>一个非负整数的根永远不可能大于他的一半</font>，也就是$$\sqrt{x} \leqslant \frac {x}{2}$$基于此，就有以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>;i&lt;=x/<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((x == i*i)||(x&gt;i*i &amp;&amp; x&lt;Math.pow((i+<span class="number">1</span>),<span class="number">2</span>)))&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109162013400.png" alt="力扣地址"></p><p>但是这样时间复杂度为O(n)，执行用时比较长，所以不得不选择一个时间复杂度比较低的算法进行运算。</p><p>我们对整个算法的过程进行复盘，不难发现，其实我们就是在寻找一个数k，使得以下关系成立$$k = max{k_i|k_i^2 \leqslant x} ,i \geqslant 1$$这样的话，其实我们就可以对k进行二分查找，二分查找的时间复杂度比较低，只有O(logn)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>,right = x,ans = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = left + (right - left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>((<span class="keyword">long</span>)mid*mid &lt;= x)&#123;</span><br><span class="line">                ans = mid;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109162157798.png" alt="二分法力扣提交结果"></p><hr><p>未完待续，关于牛顿迭代法</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.onlinewebfonts.com/svg/img_488274.png&quot; alt=&quot;sqrt&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="二分法" scheme="https://conquerorlei.github.io/categories/Algorithm/%E4%BA%8C%E5%88%86%E6%B3%95/"/>
    
    <category term="暴力法" scheme="https://conquerorlei.github.io/categories/Algorithm/%E4%BA%8C%E5%88%86%E6%B3%95/%E6%9A%B4%E5%8A%9B%E6%B3%95/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
  </entry>
  
  <entry>
    <title>hexo进阶(2):渲染MathJax数学公式</title>
    <link href="https://conquerorlei.github.io/posts/383f09c9/"/>
    <id>https://conquerorlei.github.io/posts/383f09c9/</id>
    <published>2021-09-15T15:12:46.000Z</published>
    <updated>2021-09-16T10:38:46.878Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="优化篇"></p><span id="more"></span><h3 id="问题描述"><a class="header-anchor" href="#问题描述">¶</a>问题描述</h3><p>使用MarkDown语法描述问题时，难免会书写一些技术文档，技术文档中包含一些数学公式。但是Hexo在渲染MarkDown文档为Html时，就会遇见一些格式方面的问题。</p><h3 id="问题分析"><a class="header-anchor" href="#问题分析">¶</a>问题分析</h3><p>Hexo默认使用&quot;hexo-renderer-marked&quot;引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签。比如说对于下划线，在MarkDown语法中对应的斜体，这样的话渲染成Html标签就是<code>&lt;em&gt;</code>，但是在MathJax下划线有很深层次的含义。</p><h3 id="解决办法"><a class="header-anchor" href="#解决办法">¶</a>解决办法</h3><h4 id="查看npm安装的插件"><a class="header-anchor" href="#查看npm安装的插件">¶</a>查看npm安装的插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls -dept 0</span><br></pre></td></tr></table></figure><h4 id="更换渲染引擎"><a class="header-anchor" href="#更换渲染引擎">¶</a>更换渲染引擎</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果npm安装的插件列表里面有hexo-renderer-marked就卸载</span></span><br><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm insatll hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><h4 id="修改-config-yml"><a class="header-anchor" href="#修改-config-yml">¶</a>修改_config.yml</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax</span></span><br><span class="line"> <span class="comment"># Docs: https://github.com/hsfzxjy/hexo-renderer-kramed</span></span><br><span class="line"> <span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">perpage:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure><h4 id="front-matter添加标签"><a class="header-anchor" href="#front-matter添加标签">¶</a>front-matter添加标签</h4><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109161836025.png" alt="front标签添加"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;优化篇&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/tags/Hexo/"/>
    
    <category term="Next" scheme="https://conquerorlei.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>上楼梯</title>
    <link href="https://conquerorlei.github.io/posts/f0ef69bc/"/>
    <id>https://conquerorlei.github.io/posts/f0ef69bc/</id>
    <published>2021-09-15T14:40:57.000Z</published>
    <updated>2021-09-16T14:34:39.640Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ss0.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2588865287,1293565697&amp;fm=26&amp;gp=0.jpg" alt="上楼梯"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/climbing-stairs/">70. 爬楼梯 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析"><a class="header-anchor" href="#题目分析">¶</a>题目分析</h4><p>其实我的思路最开始很简单，一共有n节台阶，假设上n节有f(n)种上法</p><ul><li>迈1节，一种迈法，就是上一节，即n==1时，f(1) = 1</li><li>迈2节，两种迈法，一种是两次一节，一种是一次两节，即n==2时，f(2)==2</li></ul><p>而且很容易得出递推公式$$f(n) = f(n-1) + f(n-2)$$这样的话，直接就是一个递归啊</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> climbStairs(n-<span class="number">1</span>)+climbStairs(n-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，这样的话，时间复杂度是O(2^n)。由于算法是受时间限制的，当n=45的时候，代码直接被卡了<font color='red'>N/A</font>，我简直恨死这个东西了</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109161852878.png" alt="你喜欢这个嘛？"></p><p>但是，肯定还是自己的算法不可以啊，不行？？？那就换😕</p><p>那换个啥方法，不知道？那就先来个数学归纳吧</p><ul><li>n==1   f(1) = 1</li><li>n==2   f(2) = 2</li><li>n==3   f(3) = 3</li><li>n==4   f(4) = 5</li><li>n==5   f(5) = 8</li><li>…</li></ul><p>有没发现，从第三项开始，每一项都是前两项的和，你想到了什么，斐波那契数列啊😲</p><p>想一想，斐波那契数列怎么实现？</p><p>（1）公式实现$$f(n) = \frac {1}{\sqrt{5}}\left[\left(\frac{1+\sqrt{5}}{2}\right)^n - \left(\frac{1-\sqrt{5}}{2}\right)^n\right]$$至于具体怎么实现的，中间涉及了高等数学齐次线性和特征方程的概念，想要了解得同学，移步。</p><p>（2）动态规划</p><p>根据递推公式，我只需要记录三项的值，第三项的值由前两项得出，O(n)的时间复杂度就可以得出结果</p><h4 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a>代码实现</h4><h5 id="公式法"><a class="header-anchor" href="#公式法">¶</a>公式法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sqrt5 = Math.sqrt(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">double</span> fib = Math.pow((<span class="number">1</span>+sqrt5)/<span class="number">2</span>,n+<span class="number">1</span>) - Math.pow((<span class="number">1</span>-sqrt5)/<span class="number">2</span>, n+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)(fib/sqrt5);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info"><p>很多同学对第四行为什么是<font color='red'>n+1</font>而不是<font color='red'>n</font>有疑问，其实这个就在于对斐波那契数列的了解程度了，其实对于斐波那契数列，最开始的两项应该是0和1，但是0+1=1，这样的话，最开始那一项对我们的结果没有什么影响，所以，我们的斐波那契数列，应该是这个样子的$$1,1,2,3,5,8,13,21,34,\cdots$$但是我们的算法第一项是1，第二项就是2，故而此时第n项就应该是第<font color='red'>n+1</font>项斐波那契数列的值，ok，分析结束😉</p></div><p><strong>结果</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109161943774.png" alt="公式法结果"></p><h5 id="动态规划"><a class="header-anchor" href="#动态规划">¶</a>动态规划</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">1</span>,q = <span class="number">2</span>,r = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">2</span>)<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            r = p + q;</span><br><span class="line">            p = q;</span><br><span class="line">            q = r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果</strong></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109161956443.png" alt="动态规划力扣结果"></p><h4 id="结语"><a class="header-anchor" href="#结语">¶</a>结语</h4><p>这个深刻的解释了，<font color='cornflowerblue'>算法的本质是数学</font>。加油！！！</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://ss0.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2588865287,1293565697&amp;amp;fm=26&amp;amp;gp=0.jpg&quot; alt=&quot;上楼梯&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="动态规划" scheme="https://conquerorlei.github.io/categories/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="递归" scheme="https://conquerorlei.github.io/categories/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%80%92%E5%BD%92/"/>
    
    <category term="斐波那契数列" scheme="https://conquerorlei.github.io/categories/Algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E9%80%92%E5%BD%92/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
  </entry>
  
  <entry>
    <title>MySQL CRUD:Delete(删除)</title>
    <link href="https://conquerorlei.github.io/posts/1d5160cb/"/>
    <id>https://conquerorlei.github.io/posts/1d5160cb/</id>
    <published>2021-09-15T03:32:01.000Z</published>
    <updated>2021-09-15T05:12:28.094Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://static2.makeuseofimages.com/wp-content/uploads/2014/03/delete-file.jpg" alt="delete"></p><span id="more"></span><h3 id="删除数据-delete"><a class="header-anchor" href="#删除数据-delete">¶</a>删除数据(delete)</h3><h4 id="删除指定数据"><a class="header-anchor" href="#删除指定数据">¶</a>删除指定数据</h4><h5 id="案例表数据与结构"><a class="header-anchor" href="#案例表数据与结构">¶</a>案例表数据与结构</h5><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109151126299.png" alt="exam_result数据"></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109151128884.png" alt="exam_result结构"></p><h5 id="删除指定行"><a class="header-anchor" href="#删除指定行">¶</a>删除指定行</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> exam_result <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;宋公明&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> exam_result <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;宋公明&#x27;</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="删除整张表"><a class="header-anchor" href="#删除整张表">¶</a>删除整张表</h4><h5 id="测试表数据与结构"><a class="header-anchor" href="#测试表数据与结构">¶</a>测试表数据与结构</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">describe</span> for_delete;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_delete;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> C    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="删除"><a class="header-anchor" href="#删除">¶</a>删除</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> for_delete;</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_delete;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h5 id="删除之后再插入"><a class="header-anchor" href="#删除之后再插入">¶</a>删除之后再插入</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> for_delete(name) <span class="keyword">values</span>(<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_delete;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> D    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><div class="note primary"><p>需要注意的是，尽管delete删除了整个表，但他是对数据进行操作的，表结构没有更改，在进行再次插入的时候，自增的键会从上次最后一个值(也就是原值)开始增加</p></div><h3 id="截断表-truncate"><a class="header-anchor" href="#截断表-truncate">¶</a>截断表(truncate)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> [<span class="keyword">table</span>] table_name</span><br></pre></td></tr></table></figure><div class="note success"><ol><li>只能对整个表进行操作，不能像delete对指定数据或者指定行进行操作</li><li>实际上MySQL没有对数据进行操作，所以比delete快</li><li>会重置auto_increment，</li></ol></div><h4 id="测试表结构和数据"><a class="header-anchor" href="#测试表结构和数据">¶</a>测试表结构和数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_truncate;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> C    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">describe</span> for_truncate;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h4 id="使用truncate命令"><a class="header-anchor" href="#使用truncate命令">¶</a>使用truncate命令</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">truncate</span> for_truncate;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_truncate;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> for_truncate(name) <span class="keyword">values</span>(<span class="string">&#x27;D&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_truncate;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> D    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><div class="note info"><blockquote><ol><li>截断整张表影响的行数是0，所以没有对数据进行操作</li><li>执行truncate之后再插入，自增清零重新增长</li></ol></blockquote></div><div class="note primary"><p>关于truncate的具体原理，这里不具体提及。truncate不会逐个清除用户数据块上的数据，而仅仅重置数据字典和元数据块上的元数据。换个方式理解的话，就是对映射关系进行了重置，但是本来存储在指定物理结构中的数据还是存在的，这些数据已经无效，所占用的物理空间等待系统回收。</p></div><p>由于truncate删除的数据存在，所以按理论来说是有回复的可能的。但是整个过程是非常麻烦的。所以一般我们在使用truncate命令之前，一般都会先将信息复制一遍</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> for_truncate;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> C    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> copy_for_truncate <span class="keyword">like</span> for_truncate;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.05</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> copy_for_truncate</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">distinct</span> <span class="operator">*</span> <span class="keyword">from</span> for_truncate;</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> copy_for_truncate;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> A    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> B    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> C    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>然后之后再恢复的时候，再按照流程走一遍就好了。这个坏处就是，不能线上恢复，不然数据正在被使用，然后truncate，直接崩。这个命令，还是不要轻易使用。还有就是，这样的话，其实没有完成任何操作，形成了一个闭环。</p><h3 id="重命名"><a class="header-anchor" href="#重命名">¶</a>重命名</h3><p>重命名也可以删除表，这个删除是假的，表重命名了而已。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_test_0906 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> copy_for_truncate   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> exam_result         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> for_delete          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> for_truncate        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> student             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> rename <span class="keyword">table</span> copy_for_truncate <span class="keyword">to</span> table1;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.03</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_test_0906 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> exam_result         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> for_delete          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> for_truncate        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> student             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> table1              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><div class="note success"><p><font color='red'>妈妈，他骗我！！！！！</font></p></div><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://static2.makeuseofimages.com/wp-content/uploads/2014/03/delete-file.jpg&quot; alt=&quot;delete&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="https://conquerorlei.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/tags/MySQL/"/>
    
    <category term="CRUD" scheme="https://conquerorlei.github.io/tags/CRUD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL CRUD:Update(更新)</title>
    <link href="https://conquerorlei.github.io/posts/a54a76b0/"/>
    <id>https://conquerorlei.github.io/posts/a54a76b0/</id>
    <published>2021-09-15T03:31:33.000Z</published>
    <updated>2021-09-16T15:12:51.396Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse2-mm.cn.bing.net/th/id/OIP-C.KvdS1VFn8-gxlmTEWh_nPwHaFz?pid=ImgDet&amp;rs=1" alt="update"></p><span id="more"></span><h3 id="数据表和结构"><a class="header-anchor" href="#数据表和结构">¶</a>数据表和结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; describe exam_result;</span><br><span class="line">+---------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field   | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+---------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id      | int         | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name    | varchar(20) | NO   |     | NULL    |                |</span><br><span class="line">| chinese | float       | YES  |     | 0       |                |</span><br><span class="line">| math    | float       | YES  |     | 0       |                |</span><br><span class="line">| english | float       | YES  |     | 0       |                |</span><br><span class="line">+---------+-------------+------+-----+---------+----------------+</span><br><span class="line">5 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from exam_result;</span><br><span class="line">+----+--------+---------+------+---------+</span><br><span class="line">| id | name   | chinese | math | english |</span><br><span class="line">+----+--------+---------+------+---------+</span><br><span class="line">|  1 | 唐三藏 |      67 |   98 |      56 |</span><br><span class="line">|  2 | 孙悟空 |      87 |   78 |      77 |</span><br><span class="line">|  3 | 猪悟能 |      88 |   98 |      90 |</span><br><span class="line">|  4 | 曹孟德 |      82 |   84 |      67 |</span><br><span class="line">|  5 | 刘玄德 |      55 |   85 |      45 |</span><br><span class="line">|  6 | 孙策   |      70 |   73 |      78 |</span><br><span class="line">+----+--------+---------+------+---------+</span><br><span class="line">6 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="语法和作用"><a class="header-anchor" href="#语法和作用">¶</a>语法和作用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update table_name <span class="keyword">set</span> <span class="keyword">column</span> <span class="operator">=</span> expr [, <span class="keyword">column</span> <span class="operator">=</span> expe,...] [<span class="keyword">where</span> ...] [<span class="keyword">order</span> <span class="keyword">by</span> ...] [limit ...]</span><br></pre></td></tr></table></figure><p>作用：对查询到的结果进行列植更新</p><h3 id="实例"><a class="header-anchor" href="#实例">¶</a>实例</h3><h4 id="将孙悟空同学的数学成绩变为80"><a class="header-anchor" href="#将孙悟空同学的数学成绩变为80">¶</a>将孙悟空同学的数学成绩变为80</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> update exam_result <span class="keyword">set</span> math <span class="operator">=</span> <span class="number">80</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;孙悟空&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> math <span class="keyword">from</span> exam_result <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;孙悟空&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> math <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">80</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h4 id="将曹孟德的数学成绩变为50，语文成绩变为78"><a class="header-anchor" href="#将曹孟德的数学成绩变为50，语文成绩变为78">¶</a>将曹孟德的数学成绩变为50，语文成绩变为78</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> update exam_result <span class="keyword">set</span> math <span class="operator">=</span> <span class="number">50</span>,chinese <span class="operator">=</span> <span class="number">78</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;曹孟德&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">1</span>  Changed: <span class="number">1</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> name,chinese,math <span class="keyword">from</span> exam_result <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;曹孟德&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+------+</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> chinese <span class="operator">|</span> math <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+------+</span></span><br><span class="line"><span class="operator">|</span> 曹孟德 <span class="operator">|</span>      <span class="number">78</span> <span class="operator">|</span>   <span class="number">50</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4 id="将总成绩倒数前三的同学数学加上30分"><a class="header-anchor" href="#将总成绩倒数前三的同学数学加上30分">¶</a>将总成绩倒数前三的同学数学加上30分</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> update exam_result <span class="keyword">set</span> math <span class="operator">=</span> math <span class="operator">+</span> <span class="number">30</span> <span class="keyword">order</span> <span class="keyword">by</span> chinese <span class="operator">+</span> math <span class="operator">+</span> english limit <span class="number">3</span>;</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">3</span>  Changed: <span class="number">3</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure><div class="note info"><p>需要注意的是，MySQL不支持<font color='red'>+=</font>语法</p></div><h4 id="将所有同学的语文成绩乘2"><a class="header-anchor" href="#将所有同学的语文成绩乘2">¶</a>将所有同学的语文成绩乘2</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> name,chinese <span class="keyword">from</span> exam_result;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> chinese <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> 唐三藏 <span class="operator">|</span>      <span class="number">67</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙悟空 <span class="operator">|</span>      <span class="number">87</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 猪悟能 <span class="operator">|</span>      <span class="number">88</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 曹孟德 <span class="operator">|</span>      <span class="number">78</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 刘玄德 <span class="operator">|</span>      <span class="number">55</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙策   <span class="operator">|</span>      <span class="number">70</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> update exam_result <span class="keyword">set</span> chinese <span class="operator">=</span> chinese <span class="operator">*</span> <span class="number">2</span>;</span><br><span class="line">Query OK, <span class="number">6</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"><span class="keyword">Rows</span> matched: <span class="number">6</span>  Changed: <span class="number">6</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> name,chinese <span class="keyword">from</span> exam_result;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> chinese <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="operator">|</span> 唐三藏 <span class="operator">|</span>     <span class="number">134</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙悟空 <span class="operator">|</span>     <span class="number">174</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 猪悟能 <span class="operator">|</span>     <span class="number">176</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 曹孟德 <span class="operator">|</span>     <span class="number">156</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 刘玄德 <span class="operator">|</span>     <span class="number">110</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 孙策   <span class="operator">|</span>     <span class="number">140</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><div class="note warning"><p>对整个表更新的操作需要慎用</p></div><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse2-mm.cn.bing.net/th/id/OIP-C.KvdS1VFn8-gxlmTEWh_nPwHaFz?pid=ImgDet&amp;amp;rs=1&quot; alt=&quot;update&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="https://conquerorlei.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/tags/MySQL/"/>
    
    <category term="CRUD" scheme="https://conquerorlei.github.io/tags/CRUD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL CRUD:Retrieve(检索)</title>
    <link href="https://conquerorlei.github.io/posts/b23f0e36/"/>
    <id>https://conquerorlei.github.io/posts/b23f0e36/</id>
    <published>2021-09-15T03:30:53.000Z</published>
    <updated>2021-09-15T10:51:47.825Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse4-mm.cn.bing.net/th/id/OIP-C.FxU8bkrfIqTnzEfvIXNxDAHaFj?pid=ImgDet&amp;rs=1" alt="Retrieve"></p><span id="more"></span><h3 id="数据库数据"><a class="header-anchor" href="#数据库数据">¶</a>数据库数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> exam_result(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">chinese <span class="type">float</span> <span class="keyword">default</span> <span class="number">0.0</span> comment <span class="string">&#x27;语文成绩&#x27;</span>,</span><br><span class="line">math <span class="type">float</span> <span class="keyword">default</span> <span class="number">0.0</span> comment <span class="string">&#x27;数学成绩&#x27;</span>,</span><br><span class="line">english <span class="type">float</span> <span class="keyword">default</span> <span class="number">0.0</span> comment <span class="string">&#x27;英语成绩&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> exam_result(name,chinese,math,english) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;唐三藏&#x27;</span>,<span class="number">67</span>,<span class="number">98</span>,<span class="number">56</span>),</span><br><span class="line">(<span class="string">&#x27;孙悟空&#x27;</span>,<span class="number">87</span>,<span class="number">78</span>,<span class="number">77</span>),</span><br><span class="line">(<span class="string">&#x27;猪悟能&#x27;</span>,<span class="number">88</span>,<span class="number">98</span>,<span class="number">90</span>),</span><br><span class="line">(<span class="string">&#x27;曹孟德&#x27;</span>,<span class="number">82</span>,<span class="number">84</span>,<span class="number">67</span>),</span><br><span class="line">(<span class="string">&#x27;刘玄德&#x27;</span>,<span class="number">55</span>,<span class="number">85</span>,<span class="number">45</span>),</span><br><span class="line">(<span class="string">&#x27;孙策&#x27;</span>,<span class="number">70</span>,<span class="number">73</span>,<span class="number">78</span>),</span><br><span class="line">(<span class="string">&#x27;宋公明&#x27;</span>,<span class="number">75</span>,<span class="number">65</span>,<span class="number">30</span>);</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse4-mm.cn.bing.net/th/id/OIP-C.FxU8bkrfIqTnzEfvIXNxDAHaFj?pid=ImgDet&amp;amp;rs=1&quot; alt=&quot;Retrieve&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="https://conquerorlei.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/tags/MySQL/"/>
    
    <category term="CRUD" scheme="https://conquerorlei.github.io/tags/CRUD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL CRUD:Create(创建)</title>
    <link href="https://conquerorlei.github.io/posts/ef37b8e4/"/>
    <id>https://conquerorlei.github.io/posts/ef37b8e4/</id>
    <published>2021-09-15T03:29:25.000Z</published>
    <updated>2021-09-16T15:54:11.832Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.7eb6f1b75e1bf1c6fa326235ecb3ca51?rik=%2faUb4dT1FhGsnQ&amp;riu=http%3a%2f%2fwww.beautifulwalldecals.com%2fimages%2fT%2fCUS656Create.jpg&amp;ehk=UDJoDEcyMOtVjLGORv3jFvd4fO9Yhy96HlwA63Kr9Hg%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="create"></p><span id="more"></span><h3 id="数据以及表结构"><a class="header-anchor" href="#数据以及表结构">¶</a>数据以及表结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">describe</span> students;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sn    <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> YES  <span class="operator">|</span> UNI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> qq    <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> students;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="单行数据-全列插入"><a class="header-anchor" href="#单行数据-全列插入">¶</a>单行数据+全列插入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="number">100</span>,<span class="number">10000</span>,<span class="string">&#x27;唐三&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="number">101</span>,<span class="number">10001</span>,<span class="string">&#x27;小舞&#x27;</span>,<span class="string">&#x27;11111&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> students;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> sn    <span class="operator">|</span> name <span class="operator">|</span> qq    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">100</span> <span class="operator">|</span> <span class="number">10000</span> <span class="operator">|</span> 唐三 <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> <span class="number">10001</span> <span class="operator">|</span> 小舞 <span class="operator">|</span> <span class="number">11111</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="多行数据-指定列插入"><a class="header-anchor" href="#多行数据-指定列插入">¶</a>多行数据+指定列插入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students(id,sn,name) <span class="keyword">values</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">102</span>,<span class="number">10003</span>,<span class="string">&#x27;朱竹青&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">103</span>,<span class="number">10004</span>,<span class="string">&#x27;奥斯卡&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">Records: <span class="number">2</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span><span class="operator">*</span> <span class="keyword">from</span> students;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> sn    <span class="operator">|</span> name   <span class="operator">|</span> qq    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">100</span> <span class="operator">|</span> <span class="number">10000</span> <span class="operator">|</span> 唐三   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> <span class="number">10001</span> <span class="operator">|</span> 小舞   <span class="operator">|</span> <span class="number">11111</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> <span class="number">10003</span> <span class="operator">|</span> 朱竹青 <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span> <span class="operator">|</span> <span class="number">10004</span> <span class="operator">|</span> 奥斯卡 <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="插入否则更新"><a class="header-anchor" href="#插入否则更新">¶</a>插入否则更新</h3><div class="note danger"><p>由于主键或者唯一约束对应的值已经存在而导致的插入失败</p></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span><span class="operator">*</span> <span class="keyword">from</span> students;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> sn    <span class="operator">|</span> name   <span class="operator">|</span> qq    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">100</span> <span class="operator">|</span> <span class="number">10000</span> <span class="operator">|</span> 唐三   <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">101</span> <span class="operator">|</span> <span class="number">10001</span> <span class="operator">|</span> 小舞   <span class="operator">|</span> <span class="number">11111</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">102</span> <span class="operator">|</span> <span class="number">10003</span> <span class="operator">|</span> 朱竹青 <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">103</span> <span class="operator">|</span> <span class="number">10004</span> <span class="operator">|</span> 奥斯卡 <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 主键约束冲突</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="number">100</span>,<span class="number">10010</span>,<span class="string">&#x27;唐大师&#x27;</span>,<span class="number">22222</span>);</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;100&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;students.PRIMARY&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 唯一键约束冲突</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span>(<span class="number">104</span>,<span class="number">10000</span>,<span class="string">&#x27;唐大师&#x27;</span>,<span class="number">22222</span>);</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;10000&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;students.sn&#x27;</span></span><br></pre></td></tr></table></figure><div class="note success"><p>分两种情况</p><ul><li>如果没有冲突，则直接插入</li><li>如果有冲突，则对他的整个一行的值进行部分列更新</li></ul></div><p>冲突的情况下使用的是<font color='red'>on duplicate key update</font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> students <span class="keyword">values</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">100</span>,<span class="number">10010</span>,<span class="string">&#x27;唐大师&#x27;</span>,<span class="number">22222</span>)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">on</span> duplicate key update name <span class="operator">=</span> <span class="keyword">values</span>(name), qq <span class="operator">=</span> <span class="keyword">values</span>(qq),sn <span class="operator">=</span> <span class="keyword">values</span>(sn);</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected, <span class="number">3</span> warnings (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> students <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> sn    <span class="operator">|</span> name   <span class="operator">|</span> qq    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">100</span> <span class="operator">|</span> <span class="number">10010</span> <span class="operator">|</span> 唐大师 <span class="operator">|</span> <span class="number">22222</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-------+--------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.7eb6f1b75e1bf1c6fa326235ecb3ca51?rik=%2faUb4dT1FhGsnQ&amp;amp;riu=http%3a%2f%2fwww.beautifulwalldecals.com%2fimages%2fT%2fCUS656Create.jpg&amp;amp;ehk=UDJoDEcyMOtVjLGORv3jFvd4fO9Yhy96HlwA63Kr9Hg%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;create&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Database" scheme="https://conquerorlei.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/tags/MySQL/"/>
    
    <category term="CRUD" scheme="https://conquerorlei.github.io/tags/CRUD/"/>
    
  </entry>
  
  <entry>
    <title>MySQL delete</title>
    <link href="https://conquerorlei.github.io/posts/5d234763/"/>
    <id>https://conquerorlei.github.io/posts/5d234763/</id>
    <published>2021-09-15T03:03:03.000Z</published>
    <updated>2021-09-15T03:33:37.867Z</updated>
    
    
    
    
    <category term="Database" scheme="https://conquerorlei.github.io/categories/Database/"/>
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/categories/Database/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://conquerorlei.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java数组</title>
    <link href="https://conquerorlei.github.io/posts/e3345db4/"/>
    <id>https://conquerorlei.github.io/posts/e3345db4/</id>
    <published>2021-09-13T09:22:14.000Z</published>
    <updated>2021-09-13T12:40:56.523Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.geekxh.com/assets/img/3.305e9fcd.jpg" alt="数组"></p><span id="more"></span><h4 id="数组"><a class="header-anchor" href="#数组">¶</a>数组</h4><p>是多个相同类型的数据按照一定的顺序排列的集合，使用一个名字命名并通过标号的方式对这次为数据进行统一的管理。</p><h4 id="相关概念"><a class="header-anchor" href="#相关概念">¶</a>相关概念</h4><ol><li>数组名</li><li>元素</li><li>角标</li><li>数组的长度：元素的个数</li></ol><h4 id="特点"><a class="header-anchor" href="#特点">¶</a>特点</h4><ol><li>数组是有序排列的</li></ol><div class="note info"><p>需要注意的是，这个有序指的不是元素本身在数组中是有序的，比如1、2、3、4、5、6、7、8、9，指的是数组中各个元素的排列是有序的，按照标号进行的一个位置排序，不是对内部元素的排序</p></div><ol start="2"><li><p>数组是引用类型的变量。数组中的元素可以是基本数据类型，也可以是引用数据类型。</p></li><li><p>创建数组对象时是在内存中开辟的一段连续的内存空间</p></li><li><p>数组一旦建立，长度不可修改</p></li></ol><h4 id="分类"><a class="header-anchor" href="#分类">¶</a>分类</h4><ol><li>按照维度：可以分为一维数组和二维数组</li><li>按照数组中元素：可以是基本数据类型元素的数组，可以是引用数据类型元素的数组</li></ol><h4 id="一维数组的使用"><a class="header-anchor" href="#一维数组的使用">¶</a>一维数组的使用</h4><h5 id="声明和初始化"><a class="header-anchor" href="#声明和初始化">¶</a>声明和初始化</h5><p>静态初始化:数组初始化和数组元素的赋值同时进行动态初始化：数组初始化合数组元素的赋值操作分开操作</p><div class="note info"><p>数组一旦初始化完成，其长度就确定了</p></div><div class="note success"><p>可以为<font color='red'>int[] nums</font>也可以是<font color='red'>int nums[]</font></p></div><h5 id="调用数组指定位置的元素"><a class="header-anchor" href="#调用数组指定位置的元素">¶</a>调用数组指定位置的元素</h5><p>通过下角标的方式调用</p><div class="note success"><p>数组的角标从0开始的，到数组的长度-1结束</p></div><h5 id="获取数组的长度"><a class="header-anchor" href="#获取数组的长度">¶</a>获取数组的长度</h5><p>根据数组的属性：<font color='red'>length</font></p><h5 id="遍历数组"><a class="header-anchor" href="#遍历数组">¶</a>遍历数组</h5><p>循环，直接for或者while都可以</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] nums ;<span class="comment">//声明</span></span><br><span class="line">        <span class="comment">//静态初始化:数组初始化和数组元素的赋值同时进行</span></span><br><span class="line">        nums = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">1004</span>&#125;;</span><br><span class="line">        <span class="comment">//动态初始化：数组初始化合数组元素的赋值操作分开操作</span></span><br><span class="line">        String[] names = <span class="keyword">new</span> String[<span class="number">5</span>];</span><br><span class="line">        names[<span class="number">0</span>] = <span class="string">&quot;zhangsan&quot;</span>;</span><br><span class="line">        names[<span class="number">1</span>] = <span class="string">&quot;lisi&quot;</span>;</span><br><span class="line">        names[<span class="number">2</span>] = <span class="string">&quot;WangWu&quot;</span>;</span><br><span class="line">        names[<span class="number">3</span>] = <span class="string">&quot;chenqi&quot;</span>;</span><br><span class="line">        names[<span class="number">4</span>] = <span class="string">&quot;zhouyang&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// foreach默认情况下是正向遍历</span></span><br><span class="line">        <span class="keyword">for</span>(String s:names)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 逆向遍历</span></span><br><span class="line">        <span class="keyword">int</span> length = nums.length;</span><br><span class="line">        <span class="keyword">while</span>((--length)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(nums[length]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数组的默认初始化值"><a class="header-anchor" href="#数组的默认初始化值">¶</a>数组的默认初始化值</h5><table><thead><tr><th>数组元素数据类型</th><th>默认值</th></tr></thead><tbody><tr><td>int</td><td>0</td></tr><tr><td>float/double</td><td>0.0</td></tr><tr><td>char</td><td>0或者’\u0000’，而非’0’</td></tr><tr><td>boolean</td><td>false(<font color='red'>底层false是0</font>)</td></tr><tr><td>引用数据类型</td><td>null</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">float</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">float</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr2[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span>[] arr3 = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(<span class="string">&quot;----&quot;</span>+arr3[<span class="number">0</span>]+<span class="string">&quot;****&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(arr3[<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span>[] arr4 = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">4</span>];</span><br><span class="line">        System.out.println(arr4[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="一维数组的内存解析"><a class="header-anchor" href="#一维数组的内存解析">¶</a>一维数组的内存解析</h5><p>JVM中内存空间</p><ol><li>栈(Stack)：存放的是局部变量，<font color='red'>放在方法中的变量都叫局部变量</font></li><li>堆(heap)：存放的是<font color='red'>new出来的结构（对象数组）</font></li><li>方法取(Method Area)<ol><li>常量池</li><li>静态域</li></ol></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析第二行的内存结构</p><ol><li>arr是局部变量，故而其名称应该存在栈中</li><li>数据存储是new出来的，故而数据存储在堆中</li></ol><div class="note info"><p>堆中首个元素的地址是一个16进制的数，应该村存在栈中的arr的内存空间内，这样在进行数组访问时，先访问栈找到数组的首地址，去堆中访问指定的地址，根据角标获取数组内部元素的值</p></div><div class="note success"><p>另外就是，栈是有弹栈操作的，只要栈中的数据弹出栈，例如弹出了数组首地址，这样的话，堆中的数据就会在之后的对一段时间被JVM的垃圾回收机制回收</p></div><h4 id="二维数组的使用"><a class="header-anchor" href="#二维数组的使用">¶</a>二维数组的使用</h4><p>多位数组的概念，其实本质上和数组元素类型是有关系的。由于数组元素可以是引用数据类型，而数组也是引用数据类型，那么为什么不可以数组的元素是一个数组呢？</p><p>二维数组的概念就是一个数组作为另外一个数组的元素存在</p><div class="note info"><p>从数组的底层实现来看，其实没有多维数组</p></div><h5 id="初始化"><a class="header-anchor" href="#初始化">¶</a>初始化</h5><div class="note primary"><p>以下两个是相通的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] nums = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span>[] nums[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span>];</span><br></pre></td></tr></table></figure></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态初始化</span></span><br><span class="line"><span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line"><span class="comment">//动态初始化</span></span><br><span class="line">String[][] arr1 = <span class="keyword">new</span> String[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">String[][] arr2 = <span class="keyword">new</span> String[<span class="number">3</span>][]; <span class="comment">// 两个的区别在于没有对列进行赋值。</span></span><br></pre></td></tr></table></figure><h5 id="调用指定位置的元素"><a class="header-anchor" href="#调用指定位置的元素">¶</a>调用指定位置的元素</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(arr[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">System.out.println(arr1[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">arr2[<span class="number">0</span>] = <span class="keyword">new</span> String[<span class="number">4</span>];</span><br></pre></td></tr></table></figure><div class="note info"><p>对于第四行，初始的情况下没有对列进行初始化，故而，在此需要初始化，否则直接调用会出现空指针异常</p></div><h5 id="获取数组的长度-v2"><a class="header-anchor" href="#获取数组的长度-v2">¶</a>获取数组的长度</h5><p>arr.length表示一共多少个一个数组，arr[0].length表示当前下标下的数组的长度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(arr.length);</span><br><span class="line">System.out.println(arr[<span class="number">0</span>].length);</span><br><span class="line">System.out.println(arr[<span class="number">1</span>].length);</span><br></pre></td></tr></table></figure><h5 id="遍历二维数组"><a class="header-anchor" href="#遍历二维数组">¶</a>遍历二维数组</h5><p>两层循环，直接就可以了。</p><h5 id="默认初始化值"><a class="header-anchor" href="#默认初始化值">¶</a>默认初始化值</h5><p>外层元素默认情况下为<font color='red'>一个地址的值</font>，内层元素默认初始化值见一维数组的初始化值。对于内层数组没有初始化的情况下，外层数组的下标对应的值为<font color='red'>null</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 静态初始化</span></span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>&#125;,&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;&#125;;</span><br><span class="line">        <span class="comment">//动态初始化</span></span><br><span class="line">        String[][] arr1 = <span class="keyword">new</span> String[<span class="number">3</span>][<span class="number">4</span>];</span><br><span class="line">        String[][] arr2 = <span class="keyword">new</span> String[<span class="number">3</span>][]; <span class="comment">// 两个的区别在于没有对列进行赋值。</span></span><br><span class="line">        <span class="keyword">int</span>[][] arr3 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr1[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始的情况下没有对列进行初始化，故而，在此需要初始化，否则直接调用会出现空指针异常</span></span><br><span class="line">        arr2[<span class="number">0</span>] = <span class="keyword">new</span> String[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        System.out.println(arr.length);</span><br><span class="line">        System.out.println(arr[<span class="number">0</span>].length);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>].length);</span><br><span class="line"></span><br><span class="line">        System.out.println(arr3); <span class="comment">// [[I@1540e19d</span></span><br><span class="line">        System.out.println(arr3[<span class="number">0</span>]); <span class="comment">// [I@677327b6</span></span><br><span class="line">        System.out.println(arr3[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">// 0</span></span><br><span class="line">        </span><br><span class="line">        System.out.println(arr2[<span class="number">1</span>]); <span class="comment">// null</span></span><br><span class="line">        System.out.println(arr2[<span class="number">1</span>][<span class="number">0</span>]); <span class="comment">// NullPointerException</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://www.geekxh.com/assets/img/3.305e9fcd.jpg&quot; alt=&quot;数组&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Base" scheme="https://conquerorlei.github.io/categories/Java/Base/"/>
    
    
    <category term="Sundry" scheme="https://conquerorlei.github.io/tags/Sundry/"/>
    
  </entry>
  
  <entry>
    <title>k个一组反转链表</title>
    <link href="https://conquerorlei.github.io/posts/f63f9b79/"/>
    <id>https://conquerorlei.github.io/posts/f63f9b79/</id>
    <published>2021-09-06T15:43:28.000Z</published>
    <updated>2021-09-15T03:09:00.964Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109132027464.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/reverse-nodes-in-k-group/">25. K 个一组翻转链表 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="分析"><a class="header-anchor" href="#分析">¶</a>分析</h4><p>根据题目的要求，需要原地进行反转，这个和直接反转链表没有很大的区别，只不过在反转的过程中，需要对头指针和右指针进行位置的确认。</p><ol><li>若链表的长度小于k，直接返回head头结点。</li><li>设置一个头指针指向head</li><li>设置一个尾指针b指向head，从head开始遍历，直到第k个结点停止遍历</li><li>对[a,b)之间的链表进行翻转</li><li>后面的处理过程和前面四步相同直接就是递归。</li></ol><div class="note primary"><p>需要注意的是，反转之后a就是尾结点，并且，需要注意的是，左闭右开区间，b不在反转区间内</p></div><h4 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseKGroup</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        ListNode a=head,b=head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b==<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> head;</span><br><span class="line">            &#125;</span><br><span class="line">            b = b.next;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode newHead = reverse(a,b);</span><br><span class="line">        a.next = reverseKGroup(b,k);</span><br><span class="line">        <span class="keyword">return</span> newHead;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverse</span><span class="params">(ListNode a,ListNode b)</span></span>&#123;</span><br><span class="line">        ListNode next = <span class="keyword">null</span>;</span><br><span class="line">        ListNode pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(a!=b)&#123;</span><br><span class="line">            next = a.next;</span><br><span class="line">            a.next = pre;</span><br><span class="line">            pre = a;</span><br><span class="line">            a = next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109132027464.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Java运行机制</title>
    <link href="https://conquerorlei.github.io/posts/3fd0dbbc/"/>
    <id>https://conquerorlei.github.io/posts/3fd0dbbc/</id>
    <published>2021-09-05T07:11:20.000Z</published>
    <updated>2021-09-13T12:40:56.526Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p>创建或者修改成源文件之后，使用Javac.exe编译成字节码文件，也就是.class文件，然后使用java.exe运行字节码文件，<font color='red'>本质上是java.exe将字节码文件装载到JVM上运行</font>。</p><p>需要注意的是：一个源文件中只能有一个public修饰的类，通常这个类与文件名一致，其他类的数量不限。另外就是，不同类中都可以有main函数，只不过在编译的过程中会生成不同的字节码文件。</p><p>转义字符</p><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>\t</td><td>一个指标为</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\\</td><td>一个\</td></tr><tr><td>\&quot;</td><td>一个&quot;</td></tr><tr><td>\’</td><td>一个’’</td></tr><tr><td>\r</td><td>一个回车</td></tr></tbody></table><div class="note success"><p>一个回车和一个换行是不一样的，一个回车指的是不换行，光标直接从行尾跳到行头</p><p>而换行是光标直接跳转到下一行行首</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;创建或者修改成源文件之后，使用Javac.exe编译成字节码文件，也就是.class文件，然后使用java.exe运行字节码文件，&lt;font color=&#39;red&#39;&gt;本质上是java.exe将字节码文件装载到JVM上运行&lt;/f</summary>
      
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Base" scheme="https://conquerorlei.github.io/categories/Java/Base/"/>
    
    
    <category term="Sundry" scheme="https://conquerorlei.github.io/tags/Sundry/"/>
    
  </entry>
  
  <entry>
    <title>数组中第k个最大元素</title>
    <link href="https://conquerorlei.github.io/posts/32261d40/"/>
    <id>https://conquerorlei.github.io/posts/32261d40/</id>
    <published>2021-09-05T04:34:43.000Z</published>
    <updated>2021-09-05T05:17:14.095Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png" alt="结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目初始分析"><a class="header-anchor" href="#题目初始分析">¶</a>题目初始分析</h4><p>寻找第k个最大元素，我第一时间想到的就是对数组进行排序，递增则为nums[nums.length-k]，递减则为nums[k-1]。</p><p>这样的话，其实根本不需要对数组进行全排序，按照冒泡排序的基本思想，每次冒牌排序(假设我按照增序排列)，都可以选出来最大的数排在数组的最后一个位置。而且下一次冒泡排序就不用遍历整个数组，因为没有必要对最大的数和前面的数，因为这种比较是无效的，相当于我们的比较范围是在伴随着冒泡排序的进行不断缩小的。</p><div class="note primary"><p>需要注意的是，题目当中并没有要求你排除重复项，例如[4,5,5,6]，k=4，那么第k大的数就是4</p><p>如果需要排除重复项，那么上述的算法就需要更改了</p></div><h4 id="代码"><a class="header-anchor" href="#代码">¶</a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;nums.length-<span class="number">1</span>-i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[j]&gt;nums[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    nums[j] +=nums[j+<span class="number">1</span>];</span><br><span class="line">                    nums[j+<span class="number">1</span>] = nums[j]-nums[j+<span class="number">1</span>];</span><br><span class="line">                    nums[j] -= nums[j+<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[nums.length-k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="时空复杂度"><a class="header-anchor" href="#时空复杂度">¶</a>时空复杂度</h4><p>时间复杂度：考虑到最坏情况下的算法，时间复杂度应该为O(n(n+1)/2)=O(n<sup>2</sup>)</p><p>空间复杂度：O(1)，直接对数组进行的原地排序</p><h4 id="力扣结果"><a class="header-anchor" href="#力扣结果">¶</a>力扣结果</h4><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051253595.png" alt="力扣通过结果"></p><p>这样的话，按照我个人的分析，时间消耗会很大，空间消耗由于我没有引入太多的其他变量，直接使用加法处理的两数交换。执行时间太长了。我还在想一个时间消耗比较小的方法。</p><h4 id="第二种解法"><a class="header-anchor" href="#第二种解法">¶</a>第二种解法</h4><p>对于Java编程语言来说，其Array类中封装了sort方法，而且此sort方法采用了快速排序的方法，时间复杂度比冒泡排序小的多。</p><p>时间复杂度：O(nlogn)</p><p>空间复杂度：O(logn)</p><p>空间消耗主要是因为sort方法使用了栈，栈的最大高度是logn</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums[nums.length - k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png" alt="结果"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109051312352.png&quot; alt=&quot;结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Java实现LRU缓冲机制</title>
    <link href="https://conquerorlei.github.io/posts/caebe662/"/>
    <id>https://conquerorlei.github.io/posts/caebe662/</id>
    <published>2021-09-05T02:49:02.000Z</published>
    <updated>2021-09-13T10:33:46.029Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109051050092.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/lru-cache/">146. LRU 缓存机制 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析"><a class="header-anchor" href="#题目分析">¶</a>题目分析</h4><p>既然是实现LRU缓冲，那么就需要明白LRU的工作原理，最近经常使用的往前排，那么最近不经常使用的往后排。这种特性下，使用数据结构链表就可以进行LRU的工作状态描述。很显然，LRU缓冲的实现需要不断地移动元素到链头和链尾，这样的话使用双链表就可以进行描述，设置一个伪头结点，设置一个伪尾结点。</p><p>另外需要注意到的是，给定一个键值Key，如何能够确定此链表中有没有此结点，如果有的话则返回。如果按照一般的做法，肯定就是遍历整个链表，这样的事，时间复杂度会被增大到O(n)，如何能将时间复杂度控制到O(1)呢？很简单，将键值和对应的双链表结点存储在一张表中，这里我选择的是HashMap也就是哈希映射。这样在进行判断链表中是否存在键值为key的结点是，就可以直接查看表，时间复杂度为O(1)。</p><h4 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DLinkedList</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> key;</span><br><span class="line">        <span class="keyword">int</span> value;</span><br><span class="line">        DLinkedList pre;</span><br><span class="line">        DLinkedList next;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DLinkedList</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DLinkedList</span><span class="params">(<span class="keyword">int</span> _key,<span class="keyword">int</span> _value)</span></span>&#123;</span><br><span class="line">            key = _key;</span><br><span class="line">            value = _value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> DLinkedList head,tail;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer,DLinkedList&gt; cache = <span class="keyword">new</span> HashMap&lt;Integer,DLinkedList&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">        <span class="keyword">this</span>.size = <span class="number">0</span>;</span><br><span class="line">        head = <span class="keyword">new</span> DLinkedList();</span><br><span class="line">        tail = <span class="keyword">new</span> DLinkedList();</span><br><span class="line">        head.next = tail;</span><br><span class="line">        tail.pre = head;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        DLinkedList node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        moveToHead(node);</span><br><span class="line">        <span class="keyword">return</span> node.value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        DLinkedList node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            DLinkedList temp = <span class="keyword">new</span> DLinkedList(key,value);</span><br><span class="line">            cache.put(key,temp);</span><br><span class="line">            addToHead(temp);</span><br><span class="line">            size++;</span><br><span class="line">            <span class="keyword">if</span>(size &gt; capacity)&#123;</span><br><span class="line">                DLinkedList res = removeTail();</span><br><span class="line">                cache.remove(res.key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            node.value = value;</span><br><span class="line">            moveToHead(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addToHead</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        node.pre = head;</span><br><span class="line">        node.next = head.next;</span><br><span class="line">        head.next.pre = node;</span><br><span class="line">        head.next = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeNode</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        node.pre.next = node.next;</span><br><span class="line">        node.next.pre = node.pre;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveToHead</span><span class="params">(DLinkedList node)</span></span>&#123;</span><br><span class="line">        removeNode(node);</span><br><span class="line">        addToHead(node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DLinkedList <span class="title">removeTail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DLinkedList s = tail.pre;</span><br><span class="line">        removeNode(s);</span><br><span class="line">        <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * LRUCache obj = new LRUCache(capacity);</span></span><br><span class="line"><span class="comment"> * int param_1 = obj.get(key);</span></span><br><span class="line"><span class="comment"> * obj.put(key,value);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109051050092.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://conquerorlei.github.io/categories/Java/"/>
    
    <category term="Apply" scheme="https://conquerorlei.github.io/categories/Java/Apply/"/>
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>无重复最长子串长度</title>
    <link href="https://conquerorlei.github.io/posts/f68e8708/"/>
    <id>https://conquerorlei.github.io/posts/f68e8708/</id>
    <published>2021-09-04T15:52:59.000Z</published>
    <updated>2021-09-04T16:26:19.497Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109042355161.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目分析"><a class="header-anchor" href="#题目分析">¶</a>题目分析</h4><p>下面以一串字符的判断来模拟过程，模拟字符串:<font color='cornflowerblue'>abcaabbcabc</font></p><div class="note primary"><p>红色表示最长字符串，每次左边往后加</p><ol><li><font color='red'>abc</font>aabbcabc</li><li>a<font color='red'>bca</font>abbcabc</li><li>ab<font color='red'>ca</font>abbcabc</li><li>abc<font color='red'>a</font>abbcabc</li><li>abca<font color='red'>ab</font>bcabc</li><li>abcaa<font color='red'>b</font>bcabc</li><li>abcaab<font color='red'>bc</font>abc</li><li>abcaabb<font color='red'>cab</font>c</li><li>abcaabbc<font color='red'>abc</font></li></ol></div><p>很显然，我们不难看出来，从左到右的遍历过程像是一个红色的窗口在向右滑动，滑窗的左边是递增的，右边整体上也是递增的，这样的话我们直接使用一个集合进行当前滑窗的所有元素，每次右部指针右移之后都会判断当前右指针所指向的元素在不在集合中，并将当前元素加入集合中，如此进行右移。直到右指针所指向元素在集合中，此时滑窗的长度就是以左指针开头的子串的最大无重复长度。</p><div class="note success"><p>需要注意的是，左指针右移，需要将上一个元素从集合中移除</p></div><p>而且，右指针不用每次都从左指针位置遍历，即使左指针一直在右移，但是很显然2、3、4步右指针没有移动。</p><p>除此之外，可能有小伙伴可能对第9步之后为何左指针不右移了，这是因为此时右指针已经指向最后一个元素，表明此时左指针到右指针之间的子串无重复元素，假设此时长度为n，左指针再右移就是n-1，因为我们已经对后面的子串有一个重复度的了解，解释左指针右移也得不到比n更大的无重复子串长度</p><h4 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Set&lt;Character&gt; sc = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> max =<span class="number">0</span>,ln = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;ln&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">                sc.remove(s.charAt(i-<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(ln&lt;len &amp;&amp; !sc.contains(s.charAt(ln)))&#123;</span><br><span class="line">                sc.add(s.charAt(ln));</span><br><span class="line">                ln++;</span><br><span class="line">            &#125;</span><br><span class="line">            max = max &gt; (ln-i)?max:(ln-i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109042355161.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>单链表的反转</title>
    <link href="https://conquerorlei.github.io/posts/733dbec/"/>
    <id>https://conquerorlei.github.io/posts/733dbec/</id>
    <published>2021-09-04T14:30:50.000Z</published>
    <updated>2021-09-04T16:23:15.024Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202109042234446.png" alt="力扣刷题结果"></p><span id="more"></span><h4 id="题目地址"><a class="header-anchor" href="#题目地址">¶</a>题目地址</h4><p><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表 - 力扣（LeetCode） (leetcode-cn.com)</a></p><h4 id="题目解题思路"><a class="header-anchor" href="#题目解题思路">¶</a>题目解题思路</h4><p>链表的反转，其实很简单，每次在原链表按照遍历顺序取出一个结点，按照头插法，插入到另外一个链表就好了。</p><p>时间复杂度：O(n)，时间消耗是由遍历链表产生的</p><p>空间复杂度：O(1)。</p><h4 id="解题代码"><a class="header-anchor" href="#解题代码">¶</a>解题代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode l = <span class="keyword">new</span> ListNode();</span><br><span class="line">        l.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(head!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode s = <span class="keyword">new</span> ListNode(head.val);</span><br><span class="line">            s.next = l.next;</span><br><span class="line">            l.next = s;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l = l.next;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他思路"><a class="header-anchor" href="#其他思路">¶</a>其他思路</h4><h5 id="思路1"><a class="header-anchor" href="#思路1">¶</a>思路1</h5><p>双指针：其实不用想太多啊，不就是让你进行链表反转吗，直接把只指针反过来就好了。怎么反过来？就是使用双指针，一个指针<font color='red'>cur</font>指向当前结点，一个指针指<font color='red'>pre</font>向后继结点，每次把两个结点之间的指针反过来就好啦，就是需要另外一个指针指向<font color='red'>pre</font>的下一个结点，这样会使空间复杂度提高一点，但依旧是O(1)；</p><p><strong>代码实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode cur = <span class="keyword">null</span>,pre = head;</span><br><span class="line">        <span class="keyword">while</span>(pre!= <span class="keyword">null</span>)&#123;</span><br><span class="line">            ListNode temp = pre.next;</span><br><span class="line">            pre.next = cur;</span><br><span class="line">            cur = pre;</span><br><span class="line">            pre = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/202109042234446.png&quot; alt=&quot;力扣刷题结果&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>hexo进阶(1):优化文章链接为数字编号</title>
    <link href="https://conquerorlei.github.io/posts/59826/"/>
    <id>https://conquerorlei.github.io/posts/59826/</id>
    <published>2021-08-21T13:00:50.000Z</published>
    <updated>2021-08-21T14:47:10.811Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="优化篇"></p><span id="more"></span><h3 id="问题描述"><a class="header-anchor" href="#问题描述">¶</a>问题描述</h3><p>下图为我的一篇文章的网址<img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212118319.png" alt="检索网址太长"></p><p>如果进行分享的话，就会出现以下情况</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://conquerorlei.github.io/2021/08/20/%E5%85%B3%E4%BA%8Enew%E5%92%8Cdelete%E7%9A%84%E9%97%AE%E9%A2%98/</span><br></pre></td></tr></table></figure><p>这样的话，其实本质上是没有问题的，但是为什么别人的网站网址就是干干净净的，我的小破站文章网址就这么长呢。我不甘心，于是就开始找方法进行修改。</p><h3 id="问题分析"><a class="header-anchor" href="#问题分析">¶</a>问题分析</h3><p>其实出现这种网址的情况，本质上是hexo的config的问题。在hexo的根目录下的_config.yml文件中，我发现了一下的配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br></pre></td></tr></table></figure><p>这样的话，你的文章名就是<font color='red'>年份月份日期加题目</font></p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212134814.jpeg" alt="这是什么？？？"></p><p>尽管这还可以，不影响正常使用，但是我要网址这么长干嘛</p><p>而且！！！由于编码的问题，我分享的时候，别人看见了还会问问后面的<font color='red'>%E5%85%B3%E4%BA%8E</font>是什么，这我能说什么，我写的汉字嘛？</p><p>还有一个问题就是，一旦我修改了文章名称以及日期什么的，链接就无效了。</p><p>这我能乐意嘛？不能🙉，不换掉干什么？留着下饭？😅</p><h3 id="解决方案"><a class="header-anchor" href="#解决方案">¶</a>解决方案</h3><p>下载个插件吧！<code>abbrlink</code>，这是他的<a href="https://github.com/rozbo/hexo-abbrlink"><font color='cornflowerblue'>github仓库地址</font></a></p><h4 id="安装abbrlink插件"><a class="header-anchor" href="#安装abbrlink插件">¶</a>安装abbrlink插件</h4><p>使用cmd命令提示符进入hexo的根目录(<font color='red'>也就是平常执行hexo命令的地方</font>)，输入以下命令使用<code>npm</code>安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212156402.png" alt="安装完之后的命令提示"></p><h4 id="启用abbrlink插件"><a class="header-anchor" href="#启用abbrlink插件">¶</a>启用abbrlink插件</h4><p>使用文本编辑器打开hexo根目录下的_config.yml，找到并修改以下内容</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://conquerorlei.github.io/</span></span><br><span class="line"><span class="comment"># permalink: :year/:month/:day/:title/</span></span><br><span class="line"><span class="comment"># permalink_defaults:</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span> <span class="comment"># support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>   <span class="comment"># support dec(default) and hex</span></span><br></pre></td></tr></table></figure><h4 id="参数说明"><a class="header-anchor" href="#参数说明">¶</a>参数说明</h4><p>abbrlink一共有两个参数:</p><ul><li>alg – Algorithm：对应随机算法参数，可选值为crc16和crc32</li><li>rep – Represent：对应生成的数字表示方法，可选值为hex和dec</li></ul><p>以下为实例：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crc16 &amp; hex</span></span><br><span class="line"><span class="string">/posts/66c8/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc16 &amp; dec</span></span><br><span class="line"><span class="string">/posts/65535/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc32 &amp; hex</span></span><br><span class="line"><span class="string">/posts/8ddf18fb/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># crc32 &amp; dec</span></span><br><span class="line"><span class="string">/posts/1690090958/</span></span><br></pre></td></tr></table></figure><div class="note success"><p><font color='red'>crc16算法产生的随机数最大值为65536</font></p></div><h4 id="使用abbrlink"><a class="header-anchor" href="#使用abbrlink">¶</a>使用abbrlink</h4><p>直接执行清除和渲染就可以啦</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>这样在原本markdown文档头部的yml内部就会产生一个随机数，专属于这篇文章的随机数</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108212246514.png" alt="abbrlink随机数"></p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.01cf09502cb22f592b1671a4089db221?rik=2XqYUqu8AiQRKg&amp;amp;riu=http%3a%2f%2fwww.lunwenhz.com%2fuploads%2fallimg%2f181101%2f33-1Q101142624146.jpg&amp;amp;ehk=vSYNuW5k%2fn1%2fNA2JGyc%2fP%2bZI2upTc2a9MAd98VDF0uI%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;优化篇&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/tags/Hexo/"/>
    
    <category term="Next" scheme="https://conquerorlei.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>关于new和delete的问题</title>
    <link href="https://conquerorlei.github.io/posts/36390/"/>
    <id>https://conquerorlei.github.io/posts/36390/</id>
    <published>2021-08-20T09:39:44.000Z</published>
    <updated>2021-08-21T14:41:42.123Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://tse1-mm.cn.bing.net/th/id/R-C.75e864a4e25ca1c9c85e4a0ab8f2b5d1?rik=mDvqPbGZ%2blrDhA&amp;riu=http%3a%2f%2fpediaa.com%2fwp-content%2fuploads%2f2018%2f10%2fDifference-Between-new-and-delete-Operator-Comparison-Summary.jpg&amp;ehk=TUN%2fIoWa9NY8G3HdETaw5j%2f08sAVFfDeQ6e4482cQJA%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="new and delete"></p><span id="more"></span><h1>问题描述</h1><p>今天在进行链表的学习的时候，进行单链表的初始化的时候遇见了一下问题，问题长这样</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108201746565.png" alt="cannot convert"></p><div class="note success"><p><font color='red'>cannot convert ‘LNode* *’ to ‘LinkedList’ {aka ‘LNode *’} in assignment</font></p></div><p>发生问题的代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">initList</span><span class="params">(LinkedList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l = <span class="keyword">new</span> LinkedList; <span class="comment">//问题所在行</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体定义如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; LNode, *LinkedList;</span><br></pre></td></tr></table></figure><h1>分析</h1><p>按照我对结构体的定义，<code>LNode *</code>和<code>LinkedList</code>，这两个进行声明结点的时候是等价的，都是生成了一个指针，指向新开辟的空间，这即是那个结点。</p><p>等等！</p><p>cpp使用new进行创建的时候也是创建的指针（<font color='red'>对象指针</font>），好家伙，那使用new在声明一个指针变量不就成了指针的指针了嘛，就像是你进行了以下谜之操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> *intp;</span><br><span class="line"><span class="keyword">int</span> *s = <span class="keyword">new</span> intp*;</span><br></pre></td></tr></table></figure><blockquote><p>对不起，我刚刚好像就做了😥</p></blockquote><div class="note primary"><p><font color='red'>typedef</font>那句相当于定义了<code>int *</code>为一个新的名称<code>intp</code>，而进行定义指针变量时使用了<code>intp *</code>，相当于新建了一个指针的指针变量，和前面的<code>int *</code>当然是不匹配的</p></div><p><font color='cornflowerblue'>需要注意的是，使用new时，要注意到它本身返回的就是一个指针对象</font></p><h1>改动</h1><p>就很简单啊，直接还成不是指针的<code>LNode</code>就好了啊</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l = <span class="keyword">new</span> LNode;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://tse1-mm.cn.bing.net/th/id/R-C.75e864a4e25ca1c9c85e4a0ab8f2b5d1?rik=mDvqPbGZ%2blrDhA&amp;amp;riu=http%3a%2f%2fpediaa.com%2fwp-content%2fuploads%2f2018%2f10%2fDifference-Between-new-and-delete-Operator-Comparison-Summary.jpg&amp;amp;ehk=TUN%2fIoWa9NY8G3HdETaw5j%2f08sAVFfDeQ6e4482cQJA%3d&amp;amp;risl=&amp;amp;pid=ImgRaw&amp;amp;r=0&quot; alt=&quot;new and delete&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/categories/Cpp/"/>
    
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/tags/Cpp/"/>
    
  </entry>
  
  <entry>
    <title>以O(1)的空间复杂度交换两个数据</title>
    <link href="https://conquerorlei.github.io/posts/18813/"/>
    <id>https://conquerorlei.github.io/posts/18813/</id>
    <published>2021-08-19T07:32:00.000Z</published>
    <updated>2021-08-21T14:41:42.121Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic3.zhimg.com/v2-96d58dc7ea889b98102cbad4c53bb91e_720w.jpg?source=172ae18b" alt="Algorithm"></p><span id="more"></span><h1>题目、要求、描述</h1><p>题目描述：要求对于顺序表l进行逆序操作，要求空间复杂度为O(1)。</p><p>要求：</p><ol><li>顺序表的结构已经被定义</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125; SqlList;</span><br></pre></td></tr></table></figure><p>解释：直接原地操作进行交换，也就是说在原来的空间消耗基础上，不消耗其他多余内存的情况下，原地交换数据</p><p>分析：最开始没有从计算机的底层实现去考虑如何交换，考虑的是如何从软件、代码、程序的角度绕过去，但是发现，做了了一堆无用功。为了简化思路，后来直接用a和b两个数，如何不利用第三个数c直接交换a和b呢？</p><h1>解决方案</h1><h2 id="使用基本的加减运算"><a class="header-anchor" href="#使用基本的加减运算">¶</a>使用基本的加减运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">    a = a + b;</span><br><span class="line">    b = a - b;</span><br><span class="line">    a = a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note success"><ol><li><p>a = (a+b)，此时a的值已经改变，用<font color='cornflowerblue'>a<sub>(a+b)</sub></font>来表示，<font color='red'>下标表示现在的值</font></p></li><li><p><font color='cornflowerblue'>a<sub>(a+b)</sub></font>-b=<font color='cornflowerblue'>b<sub>a</sub></font>，这是得到a原来的值，此时b即为<font color='cornflowerblue'>b<sub>a</sub></font>，也就是上述第三行代码的由来；</p></li><li><p><font color='cornflowerblue'>a<sub>(a+b)</sub></font>-<font color='cornflowerblue'>b<sub>a</sub></font>=<font color='cornflowerblue'>a<sub>b</sub></font>，很显然，此时得到的是原本a的值</p></li></ol></div><h2 id="使用异或运算"><a class="header-anchor" href="#使用异或运算">¶</a>使用异或运算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exchange</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">    b = a ^ b;</span><br><span class="line">    a = a ^ b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note primary"><p>其实这边使用的思想很简单，利用的就是：</p><ul><li>两个相同的数异或为0</li><li>任何数异或0都为它本身</li><li>异或运算满足分配率</li></ul><p><font color='orange'>a ^ b ^ a = a ^ a ^ b = 0 ^ b = b</font></p><p>这样的话再简单一分析，其实很容易就得出来上述算法：</p><ol><li>a ^ b = <font color='cornflowerblue'>a<sub>(a^b)</sub></font>，<font color='red'>下标表示现在的值</font></li><li><font color='cornflowerblue'>a<sub>(a^b)</sub></font> ^ b = <font color='cornflowerblue'>b<sub>a</sub></font></li><li><font color='cornflowerblue'>a<sub>(a^b)</sub></font> ^ <font color='cornflowerblue'>b<sub>a</sub></font> = <font color='cornflowerblue'>a<sub>b</sub></font></li></ol></div><h1>实现代码</h1><h2 id="算法部分代码"><a class="header-anchor" href="#算法部分代码">¶</a>算法部分代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sequence_list.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">invertSequence</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 三次异或则交换数据</span></span><br><span class="line">        l.data[i] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">        l.data[l.length - i - <span class="number">1</span>] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">        l.data[i] = l.data[i] ^ l.data[l.length - i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlList l;</span><br><span class="line">    <span class="built_in">initList</span>(l);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">insertList</span>(l, <span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printList</span>(l);</span><br><span class="line">    <span class="built_in">invertSequence</span>(l);</span><br><span class="line">    <span class="built_in">printList</span>(l);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sequence-list-h"><a class="header-anchor" href="#sequence-list-h">¶</a>sequence_list.h</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __SEQUENCE_LIST__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __SEQUENCE_LIST__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> InitSize 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义顺序表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *data;</span><br><span class="line">    <span class="keyword">int</span> MaxSize;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125; SqlList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序表相关操作</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initList</span><span class="params">(SqlList &amp;l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">increaseSize</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">locateElem</span><span class="params">(SqlList l, <span class="keyword">int</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getElem</span><span class="params">(SqlList l, <span class="keyword">int</span> i, <span class="keyword">int</span> &amp;e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destoryList</span><span class="params">(SqlList &amp;l)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printList</span><span class="params">(SqlList l)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="sequence-list-cpp"><a class="header-anchor" href="#sequence-list-cpp">¶</a>sequence_list.cpp</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sequence_list.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initList</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l.data = <span class="keyword">new</span> <span class="keyword">int</span>[InitSize];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; InitSize; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    l.length = <span class="number">0</span>;</span><br><span class="line">    l.MaxSize = InitSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">increaseSize</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *p = l.data;</span><br><span class="line">    l.data = <span class="keyword">new</span> <span class="keyword">int</span>[l.MaxSize + len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[i] = p[i];</span><br><span class="line">    &#125;</span><br><span class="line">    l.MaxSize += len;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    p = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l.length &gt;= l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = l.length; j &gt;= i; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[j] = l.data[j - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    l.data[i - <span class="number">1</span>] = e;</span><br><span class="line">    l.length++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteList</span><span class="params">(SqlList &amp;l, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (l.length &gt;= l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; l.length; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        l.data[j - <span class="number">1</span>] = l.data[j];</span><br><span class="line">    &#125;</span><br><span class="line">    l.length--;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> l.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">locateElem</span><span class="params">(SqlList l, <span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (l.data[i] == e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getElem</span><span class="params">(SqlList l, <span class="keyword">int</span> i, <span class="keyword">int</span> &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; l.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; l.MaxSize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = l.data[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">destoryList</span><span class="params">(SqlList &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> l.data;</span><br><span class="line">    l.data = <span class="literal">NULL</span>;</span><br><span class="line">    l.length = <span class="number">0</span>;</span><br><span class="line">    l.MaxSize = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printList</span><span class="params">(SqlList l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;空顺序表&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, l.data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>运行结果</h1><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108192300998.png" alt="运行结果"></p><div class="note success"><p>第一排输出的是没有进行逆转之前的数据，从下标0开始输出</p><p>第二排输出的是进行逆转之后的数据，从下标0开始输出</p></div><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-96d58dc7ea889b98102cbad4c53bb91e_720w.jpg?source=172ae18b&quot; alt=&quot;Algorithm&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://conquerorlei.github.io/categories/Algorithm/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/categories/Data-Structure/"/>
    
    
    <category term="Daily" scheme="https://conquerorlei.github.io/tags/Daily/"/>
    
    <category term="Data Structure" scheme="https://conquerorlei.github.io/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>vscode C/C++头文件问题</title>
    <link href="https://conquerorlei.github.io/posts/55983/"/>
    <id>https://conquerorlei.github.io/posts/55983/</id>
    <published>2021-08-18T07:41:35.000Z</published>
    <updated>2021-08-21T14:54:26.694Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://code.visualstudio.com/opengraphimg/opengraph-home.png" alt="VS code"></p><span id="more"></span><h1>头文件问题</h1><p>vscode本质上只是一个文本编辑器，但是由于其插件的丰富性及其轻量化的特性，我更偏向使vscode写算法和学习c/c++语言，今天关于vscode引入自定义头文件出现了很多的问题，在此对正确的完整的做法进行一次记录</p><h2 id="关于C-C-配置问题"><a class="header-anchor" href="#关于C-C-配置问题">¶</a>关于C/C++配置问题</h2><p>网络上有很多的阐述，这里不多解释，也可以直接根据vscode官网文档进行编写配置文件。</p><div class="note primary"><p>不愿意麻烦的小伙伴文末有相关的文件以及网盘下载地址，直接过去下载即可</p></div><h2 id="添加可编译的头文件配置"><a class="header-anchor" href="#添加可编译的头文件配置">¶</a>添加可编译的头文件配置</h2><div class="note primary"><p>我是用的是头文件只负责声明，声明的函数由实现文件进行实现</p></div><h3 id="头文件的写法"><a class="header-anchor" href="#头文件的写法">¶</a>头文件的写法</h3><p>我想这个便不需要多加说明，这边只给定一个格式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __ABC_H__ <span class="comment">//包拯不重复</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __ABC_H__ <span class="comment">//定义</span></span></span><br><span class="line">...</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//和ifndef配套使用</span></span></span><br></pre></td></tr></table></figure><h3 id="vscode-c-cpp-properties-json的更改"><a class="header-anchor" href="#vscode-c-cpp-properties-json的更改">¶</a>.vscode\c_cpp_properties.json的更改</h3><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181608431.png" alt="添加自定义includePath"></p><div class="note primary"><p>右侧方框内部的路径可以是绝对路径可以是相对路径。值得一提的是，<font color='red'>${workspaceFolder}</font>表示的是工作区文件夹，即为目前vscode中目前打开的文件夹。</p></div><h3 id="vscode-tasks-json的更改"><a class="header-anchor" href="#vscode-tasks-json的更改">¶</a>.vscode\tasks.json的更改</h3><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181629799.png" alt="添加args配置"></p><p>框内一共有三个内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;args&quot;</span>: [</span><br><span class="line"><span class="string">&quot;-g&quot;</span>,</span><br><span class="line"><span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.c&quot;</span>, <span class="comment">// 头文件的实现文件所在路径</span></span><br><span class="line">    <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>, <span class="comment">// 头文件所在路径</span></span><br><span class="line">    <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">    <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">],</span><br></pre></td></tr></table></figure><div class="note info"><p><font color='red'>${fileDirname}</font>表示的是当前打开的文件所在的目录</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/202108181638044.png" alt="项目结构"></p><p>仍然存在的问题在于，当调用的头文件增加时，可能会有其他的未使用的头文件被编译，但是者相比写一个头文件的实现文件添加到编译路径显然要简便许多</p></div><h2 id="头文件、实现文件、调用文件"><a class="header-anchor" href="#头文件、实现文件、调用文件">¶</a>头文件、实现文件、调用文件</h2><h3 id="头文件"><a class="header-anchor" href="#头文件">¶</a>头文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __LINEAR_LIST_TEST_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __LINEAR_LIST_TEST_H__</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="实现文件"><a class="header-anchor" href="#实现文件">¶</a>实现文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;linear_list_test_impl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_1</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I&#x27;m best!%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_2</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;We&#x27;re best!%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用文件"><a class="header-anchor" href="#调用文件">¶</a>调用文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;linear_list_test_impl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x = <span class="number">1024</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;test函数内部 x=%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;调用test前 x=%d\n&quot;</span>, x);</span><br><span class="line">    test(x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;调用test后 x=%d\n&quot;</span>, x);</span><br><span class="line">    test_1(x);</span><br><span class="line">    test_2(x);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>vscode配置文件</h1><h2 id="vscode-c-cpp-properties-json"><a class="header-anchor" href="#vscode-c-cpp-properties-json">¶</a>.vscode\c_cpp_properties.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;MinGW64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;intelliSenseMode&quot;</span>: <span class="string">&quot;gcc-x64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;compilerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cStandard&quot;</span>: <span class="string">&quot;c11&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cppStandard&quot;</span>: <span class="string">&quot;c++17&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;includePath&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;/include&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;MinGW86&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;intelliSenseMode&quot;</span>: <span class="string">&quot;gcc-x64&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;compilerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gcc.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cStandard&quot;</span>: <span class="string">&quot;c11&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cppStandard&quot;</span>: <span class="string">&quot;c++17&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;includePath&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;/include&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-launch-json"><a class="header-anchor" href="#vscode-launch-json">¶</a>.vscode\launch.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;gcc.exe - 生成和调试活动文件&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gdb.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;setupCommands&quot;</span>: [&#123;</span><br><span class="line">            <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;gcc&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;g++.exe - 生成和调试活动文件&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;cppdbg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;program&quot;</span>: <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;stopAtEntry&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;environment&quot;</span>: [],</span><br><span class="line">        <span class="attr">&quot;externalConsole&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;MIMode&quot;</span>: <span class="string">&quot;gdb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;miDebuggerPath&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gdb.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;setupCommands&quot;</span>: [&#123;</span><br><span class="line">            <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;为 gdb 启用整齐打印&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;-enable-pretty-printing&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;ignoreFailures&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="attr">&quot;preLaunchTask&quot;</span>: <span class="string">&quot;g++&quot;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-settings-json"><a class="header-anchor" href="#vscode-settings-json">¶</a>.vscode\settings.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;files.associations&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;ostream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iomanip&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iostream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;array&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;atomic&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;*.tcc&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cctype&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;clocale&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cmath&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdarg&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstddef&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdint&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdio&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstdlib&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cstring&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cwchar&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cwctype&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;deque&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;unordered_map&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;vector&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;exception&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;algorithm&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;memory&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;memory_resource&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;optional&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;string&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;string_view&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;system_error&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tuple&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type_traits&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;utility&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;fstream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;initializer_list&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;iosfwd&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;istream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;limits&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;new&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;sstream&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;stdexcept&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;streambuf&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;typeinfo&quot;</span>: <span class="string">&quot;cpp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tidl_alg_int.h&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;test.h&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;linear_list_test_impl.h&quot;</span>: <span class="string">&quot;c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;C_Cpp.errorSquiggles&quot;</span>: <span class="string">&quot;Disabled&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vscode-tasks-json"><a class="header-anchor" href="#vscode-tasks-json">¶</a>.vscode\tasks.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;gcc&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\gcc.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.c&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;presentation&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;echo&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;focus&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;panel&quot;</span>: <span class="string">&quot;shared&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;showReuseMessage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;clear&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;shell&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;label&quot;</span>: <span class="string">&quot;g++&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin\\g++.exe&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;args&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;-g&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;file&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\lib\\*.cpp&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-I&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;workspaceFolder&#125;\\include&quot;</span>,</span><br><span class="line">            <span class="string">&quot;-o&quot;</span>,</span><br><span class="line">            <span class="string">&quot;$&#123;fileDirname&#125;\\build\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;options&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;D:\\mingw64\\bin&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;problemMatcher&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;group&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;kind&quot;</span>: <span class="string">&quot;build&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;isDefault&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;presentation&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;echo&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;reveal&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;focus&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;panel&quot;</span>: <span class="string">&quot;shared&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;showReuseMessage&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">&quot;clear&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关配置文件网盘下载地址"><a class="header-anchor" href="#相关配置文件网盘下载地址">¶</a>相关配置文件网盘下载地址</h2><p><a href="https://pan.baidu.com/s/1BmGztNbEsKCRobqebeop1w"><font color='cornflowerblue'>网盘链接</font></a>：提取码：scil</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://code.visualstudio.com/opengraphimg/opengraph-home.png&quot; alt=&quot;VS code&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Software" scheme="https://conquerorlei.github.io/categories/Software/"/>
    
    <category term="Cpp" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Cpp/"/>
    
    <category term="Vscode" scheme="https://conquerorlei.github.io/categories/Software/Vscode/"/>
    
    
    <category term="Sundry" scheme="https://conquerorlei.github.io/tags/Sundry/"/>
    
    <category term="Vscode" scheme="https://conquerorlei.github.io/tags/Vscode/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署警告&#39;warning: LF will be replaced by CRLF&#39;去除</title>
    <link href="https://conquerorlei.github.io/posts/35421/"/>
    <id>https://conquerorlei.github.io/posts/35421/</id>
    <published>2021-08-01T10:13:39.000Z</published>
    <updated>2021-08-21T14:51:50.544Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210801184921.png" alt="warning: LF will be replaced by CRLF"></p><span id="more"></span><h1>问题描述</h1><p>在Windows环境下使用Hexo d 进行部署时，在命令提示符中会出现以下警告信息，一般情况下，都会弹出一大串</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">warning: LF will be replaced by CRLF in tags/ECS/index.html.</span><br></pre></td></tr></table></figure><h1>问题分析</h1><p>其实警告意思很简单，就是Git会将CRLF将被替换为LF，因为每次部署他都会弹出一大堆，让我很恼火。所以我就想把它们关掉。最开始，因为我的Markdown文档是我本地编辑的，没有仔细看问题描述的情况下我直接使用了Notepad++进行了CRLF替换为LF，但是全部替换完了才发现hexo本身的很多网站配置文件例如.js文件里面采用的行尾也是CRLF，最终还是决定将此功能禁用。</p><h1>问题解决策略</h1><h2 id="notepad-修改CRLF为LF"><a class="header-anchor" href="#notepad-修改CRLF为LF">¶</a>notepad++修改CRLF为LF</h2><h3 id="打开视图显示行尾符"><a class="header-anchor" href="#打开视图显示行尾符">¶</a>打开视图显示行尾符</h3><p>按照以下路径寻址：视图-&gt;显示符号-&gt;显示行尾符</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802111831.png" alt="显示行尾符"></p><p>这样就可以查看行尾符是CRLF还是LF</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112135.png" alt="查看行尾符"></p><h3 id="使用替换修改"><a class="header-anchor" href="#使用替换修改">¶</a>使用替换修改</h3><ul><li>使用Ctrl+H打开替换面板</li><li>在查找目标中输入\r\n</li><li>在替换内容中输入\n</li><li>并且勾选正则表达式</li><li>点击全部替换就好</li></ul><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112646.png" alt="替换面板"></p><p>结果如下：</p><p><img src="https://gitee.com/QingShanxl/pictures/raw/master/img/20210802112804.png" alt="替换结果"></p><h2 id="MinGW64面板直接禁用Git配置"><a class="header-anchor" href="#MinGW64面板直接禁用Git配置">¶</a>MinGW64面板直接禁用Git配置</h2><p>直接在MinGW64面板输入一下命令即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><h1>总结</h1><p>其实就从根本上解决问题而言，第二种方法是最好的。</p><blockquote class="blockquote-center">人的一切痛苦，本质上是对自己的无能的愤怒<br>王小波</blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/QingShanxl/pictures/raw/master/img/20210801184921.png&quot; alt=&quot;warning: LF will be replaced by CRLF&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Error" scheme="https://conquerorlei.github.io/categories/Error/"/>
    
    <category term="环境搭建" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Hexo/"/>
    
    <category term="Git" scheme="https://conquerorlei.github.io/categories/Git/"/>
    
    
    <category term="Git" scheme="https://conquerorlei.github.io/tags/Git/"/>
    
    <category term="Hexo" scheme="https://conquerorlei.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
